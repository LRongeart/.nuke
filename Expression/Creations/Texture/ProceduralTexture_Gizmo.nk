set cut_paste_input [stack 0]
version 15.1 v1
push $cut_paste_input
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x40000000
        {0 0}
        {x4381fffe x44afa000}
        {0 0}
        {0 0}
        {x44610000 x44afa000}
        {0 0}
        {0 0}
        {x44ed8000 x44430000}
        {0 0}
        {0 0}
        {x44674000 x42f00000}
        {0 0}
        {0 0}
        {x43848000 x42e60000}
        {0 0}
        {0 0}
        {x43750000 x4400c000}
        {0 0}
        {0 0}
        {x4492e000 x44408000}
        {0 0}}}     idem}
     {tx x40000000 x444b9249 x44368000}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x40000000 ltm x40000000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 2
 lifetime_end 2
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto1
 selected true
 xpos 10923
 ypos -223
}
Constant {
 inputs 0
 channels rgb
 color {0.02 0.52 1.02 0}
 color_panelDropped true
 name Constant1
 selected true
 xpos 11064
 ypos -331
}
Group {
 inputs 2
 name switch_matte
 selected true
 xpos 11064
 ypos -217
 addUserKnob {20 User}
 addUserKnob {41 red T ShuffleCopy3.red}
 addUserKnob {41 green T ShuffleCopy3.green}
 addUserKnob {41 blue T ShuffleCopy3.blue}
 addUserKnob {41 alpha T ShuffleCopy3.alpha}
 addUserKnob {41 invert T Premult3.invert}
 addUserKnob {41 disable_1 l Unpremult T Premult3.disable}
 addUserKnob {6 copyBbox l CopyBBox +STARTLINE}
 copyBbox true
}
 Input {
  inputs 0
  name alpha
  xpos 427
  ypos -553
  number 1
 }
set N1a203c00 [stack 0]
push $N1a203c00
 Input {
  inputs 0
  name image
  xpos 307
  ypos -553
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos 358
  ypos -504
 }
 Premult {
  name Premult3
  xpos 358
  ypos -478
 }
set N252c6800 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  selected true
  xpos 427
  ypos -436
 }
push $N252c6800
 Switch {
  inputs 2
  which {{parent.copyBbox}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos 358
  ypos -404
 }
 Output {
  name Output1
  xpos 355
  ypos -366
 }
end_group
Transform {
 scale 0.402
 center {1024 778}
 shutteroffset centred
 name Transform3
 selected true
 xpos 11065
 ypos -164
}
Group {
 name ProceduralTEXTURE3
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n#works only if knob 'type' is changing.\nif ('type' in k.name()):\n    import nuke\n    #------------------------------------------------------------\n    #LINES\n    if(k.getValue()==0):\n        n\['input'].setVisible(False)\n        n\['preview_input'].setVisible(False)\n        n\['scale'].setVisible(False)\n        n\['shape_width'].setVisible(False)\n        n\['calc_autocrop'].setVisible(False)\n        n\['enable_autocrop'].setVisible(False)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['lines_divider01'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        n\['lines_divider02'].setVisible(True)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n    \n    #BRICKS\n    if(k.getValue()==1):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['bricks_divider01'].setVisible(True)\n        n\['bricks_divider02'].setVisible(True)\n        n\['bricks_divider03'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n        \n    #SHINGLE\n    if(k.getValue()==2):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        n\['shingle_divider01'].setVisible(True)\n        n\['shingle_divider02'].setVisible(True)\n        n\['shingle_divider03'].setVisible(True)\n        n\['shingle_divider04'].setVisible(True)\n        \n        n\['edges'].setVisible(False)\n        n\['preview_edges'].setVisible(False)\n        n\['dilate_edges'].setVisible(False)\n        n\['blur_edges'].setVisible(False)\n        n\['color_edges'].setVisible(False)\n        n\['enable_edges'].setVisible(False)\n        n\['mix_edges'].setVisible(False)\n        n\['edges_divider01'].setVisible(False)\n        \n        \n    #TILE\n    if(k.getValue()==3):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        n\['tile_divider01'].setVisible(True)\n        n\['tile_divider02'].setVisible(True)\n        n\['preview_UV_tile'].setVisible(True)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n     \n    if(k.getValue()==4):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)"
 autolabel "nuke.thisNode().name() + \"\\n\" + '(' + 'type' + ':'+ ' ' + str(nuke.thisNode()\['type'].value()) + ')' "
 tile_color 0x14f5d001
 note_font "Verdana Bold"
 selected true
 xpos 11065
 ypos -91
 addUserKnob {20 ProceduralTexture l "Procedural Texture"}
 addUserKnob {26 text l "" +STARTLINE T "<font size=\"40\"><font color=\"light sea green\">PROCEDURAL <b><font size=\"40\"><font color=\"spring green\">TEXTURE"}
 addUserKnob {26 artist l "" +STARTLINE T "<i><font color=\"silver\">Andrea Geremia"}
 addUserKnob {26 ""}
 addUserKnob {68 type t "Select the operation you want to do:\n\n- Lines. Creates some vertical or horizontal stipes. Decide the colors and thickness\n\n- Bricks. The common way to use this operation is to create walls. Select the shape or connect an image. Combine some nodes to create a more complex texture. It creates a wall using the UV and STMap node. Use this option if you want to create a classic wall of bricks without overlapping\n\n- Shingle. Creates a wall using the Convolve node and points. It allows to create compenetrations between shapes. It's usefull to create alien projectors with hexagons and random colors. \n\n- Tile. Compared to the previous operation, here it's easier to deal with the pictures and their manipulation. It's similar to the ContactSheet node with more controls" M {Lines Bricks Shingle Tile "" "" "" ""}}
 type Bricks
 addUserKnob {26 ""}
 addUserKnob {4 input M {img shape}}
 addUserKnob {6 preview_input l "preview input" -STARTLINE}
 addUserKnob {7 scale t "The type Shingle uses the Convolve as technique. If you don't see the correct result, try to reduce a lot the scale, in order of 0.1 "}
 scale 1
 addUserKnob {4 alignment t "Select the alignment of lines" +HIDDEN M {Vertical Horizontal ""}}
 addUserKnob {26 ""}
 addUserKnob {41 format l "output format" T Reformat_CTRL.format}
 addUserKnob {4 alpha_lines l alpha +HIDDEN M {0 1 edges}}
 addUserKnob {4 alpha_bricks l alpha M {0 1 edges input "Wall of Bricks" "" ""}}
 alpha_bricks input
 addUserKnob {4 alpha_shingle l alpha +HIDDEN M {0 1 input points}}
 alpha_shingle input
 addUserKnob {4 alpha_tile l alpha +HIDDEN M {0 1 edges input}}
 alpha_tile 1
 addUserKnob {26 ""}
 addUserKnob {26 lines l "<b><font color=\"red\">LINES" +HIDDEN}
 addUserKnob {19 color1 +HIDDEN}
 color1 {1 0 0 0}
 addUserKnob {6 color1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 color2 +HIDDEN}
 color2 {0 1 0 0}
 addUserKnob {6 color2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 lines_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 wide +HIDDEN R 0 20}
 wide 10.9
 addUserKnob {7 thickness +HIDDEN R 0 2}
 addUserKnob {7 smooth +HIDDEN R 0 4}
 addUserKnob {6 invert_lines l "invert lines" t "Invert colors and parameters between the two groups of lines" +HIDDEN +STARTLINE}
 invert_lines true
 addUserKnob {26 lines_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 bricks l "<b><font color=\"fuchsia\">BRICKS"}
 addUserKnob {6 preview_bricks l "preview UVMap" +STARTLINE}
 addUserKnob {7 size_bricks l size R 0 100}
 size_bricks 300
 addUserKnob {7 anamorph_bricks l anamorph R 0 6}
 anamorph_bricks 1
 addUserKnob {26 bricks_divider01 l "" +STARTLINE}
 addUserKnob {7 offset_bricks l offset R 0 50}
 addUserKnob {7 scale_bricks l "scale even lines" R 0 6}
 scale_bricks 1
 addUserKnob {26 bricks_divider02 l "" +STARTLINE}
 addUserKnob {20 wall_of_bricks l "Alpha - Wall of Bricks" n 1}
 addUserKnob {3 random_bricks l "random value"}
 random_bricks 207
 addUserKnob {22 generate_random_value l "Random value" -STARTLINE T "import random\nrand_value=random.randint(1,300)\nnuke.thisGroup()\['random_bricks'].setValue(rand_value)"}
 addUserKnob {7 amount_bricks l amount R 0.5 4}
 amount_bricks 0.79
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 bricks_divider03 l "" +STARTLINE}
 addUserKnob {26 tile l "<b><font color=\"yellow\">TILE" +HIDDEN}
 addUserKnob {6 preview_UV_tile l "preview UVMap" +HIDDEN +STARTLINE}
 addUserKnob {12 shift +HIDDEN}
 shift {1045 725}
 addUserKnob {7 size +HIDDEN R 0 100}
 size 100
 addUserKnob {7 offset +HIDDEN R 0 50}
 addUserKnob {26 tile_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 width_brick l "width brick" +HIDDEN R 0 10}
 width_brick 2
 addUserKnob {6 cross t "This option is connected to the Shift values.\nIf you don't see any change, please modify the values of Shift" +HIDDEN +STARTLINE}
 addUserKnob {6 mirror -STARTLINE +HIDDEN}
 addUserKnob {26 tile_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 shingle l "<font color=\"chocolate\"><b>SHINGLE" +HIDDEN}
 addUserKnob {6 preview_points l "preview Points" +HIDDEN +STARTLINE}
 addUserKnob {3 offsetX +HIDDEN}
 offsetX 200
 addUserKnob {3 offsetY -STARTLINE +HIDDEN}
 offsetY 200
 addUserKnob {26 shingle_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 message_shingle l "" +STARTLINE +HIDDEN T "<i>Print every:"}
 addUserKnob {3 rows +HIDDEN}
 rows 1
 addUserKnob {3 columns -STARTLINE +HIDDEN}
 columns 1
 addUserKnob {26 shingle_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {3 offset_shingle l offset +HIDDEN}
 offset_shingle 49
 addUserKnob {26 shingle_divider03 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 gain +HIDDEN R 0 10}
 gain 10
 addUserKnob {7 dilate l "dilate points" +HIDDEN R 0 20}
 dilate 6.9
 addUserKnob {6 random_colors l "random colors" +HIDDEN +STARTLINE}
 random_colors true
 addUserKnob {6 random_every_frame l "random colors every frame" +HIDDEN +STARTLINE}
 random_every_frame true
 addUserKnob {26 shingle_divider04 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 edges l "<b><font color=\"aqua\">Edges"}
 addUserKnob {6 preview_edges l "preview edges" +STARTLINE}
 addUserKnob {7 dilate_edges l dilate R -10 10}
 addUserKnob {7 blur_edges l blur R 0 5}
 addUserKnob {18 color_edges l color}
 color_edges {0.015951 0.584199 0.959849}
 addUserKnob {6 color_edges_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 edges_divider01 l "" +STARTLINE}
 addUserKnob {6 enable_edges l "enable edges" +STARTLINE}
 addUserKnob {7 mix_edges l "" -STARTLINE}
 mix_edges 1
 addUserKnob {20 shape l Shape}
 addUserKnob {6 preview_shape l "preview shape" +STARTLINE}
 addUserKnob {3 shape_width l width/height}
 shape_width 500
 addUserKnob {22 calc_autocrop l "Calc Auto Crop" -STARTLINE T "n=nuke.thisNode()\nn.node('CurveTool1')\['go'].execute()"}
 addUserKnob {6 enable_autocrop l "enable autocrop" -STARTLINE}
 enable_autocrop true
 addUserKnob {26 shape_1 l "<font color=darkorange><b>SHAPE"}
 addUserKnob {41 corners T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle T Flare1.corners_angle}
 addUserKnob {41 corner_angle_add l rel -STARTLINE T Flare1.corner_angle_add}
 addUserKnob {26 size_1 l "<font color=darkcyan><b>SIZE"}
 addUserKnob {41 radius T Flare1.radius}
 addUserKnob {41 size_mult l "size mult" T Flare1.size_mult}
 addUserKnob {41 anamorph T Flare1.anamorph}
 addUserKnob {26 visibility l "<font color=deepskyblue><b>VISIBILITY"}
 addUserKnob {41 brightness T Flare1.brightness}
 addUserKnob {41 vis_in l in T Flare1.vis_in}
 addUserKnob {41 vis_out l out T Flare1.vis_out}
 addUserKnob {26 colors l "<font color=deeppink><b>COLORS"}
 addUserKnob {41 ring_color l "ring color" T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" T Flare1.inner_falloff}
 addUserKnob {26 color_shift l "<font color=lightpink><b>COLOR SHIFT"}
 addUserKnob {41 chroma_spread l "chroma spread" T Flare1.chroma_spread}
 addUserKnob {41 chroma_shift l "chroma shift" T Flare1.chroma_shift}
 addUserKnob {41 chroma_shift_angle l angle T Flare1.chroma_shift_angle}
 addUserKnob {41 chroma_shift_angle_add l rel -STARTLINE T Flare1.chroma_shift_angle_add}
 addUserKnob {26 asimmetry l "<font color=greenyellow><b>ASIMMETRY"}
 addUserKnob {41 asym_repeat l repeat T Flare1.asym_repeat}
 addUserKnob {41 asym_multiplier l multiplier T Flare1.asym_multiplier}
 addUserKnob {41 asym_falloff l falloff T Flare1.asym_falloff}
 addUserKnob {41 asym_angle l angle T Flare1.asym_angle}
 addUserKnob {41 asym_angle_add l rel -STARTLINE T Flare1.asym_angle_add}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x472b5901
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 126
  bookmark false
  bdwidth 703
  bdheight 641
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x44513501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 2005
  ypos 50
  bookmark false
  bdwidth 823
  bdheight 734
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x56193501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 296
  bookmark false
  bdwidth 365
  bdheight 931
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x71c67100
  label img
  note_font_size 42
  xpos 913
  ypos -178
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x71c67100
  label shape
  note_font_size 42
  xpos 1087
  ypos -180
  bdwidth 278
  bdheight 371
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x665e7201
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos 37
  bookmark false
  bdwidth 244
  bdheight 331
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x387c9901
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -55
  bookmark false
  bdwidth 588
  bdheight 781
 }
 Expression {
  inputs 0
  name Lines_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -839
  ypos 194
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.smooth}}
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xffffffff
  label "<b>Lines                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 56
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xffffffff
  label "<b>Tile                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos 2005
  ypos -15
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xffffffff
  label "<b>Edges                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 171
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat8
  xpos 3798
  ypos 104
 }
 Dot {
  name Dot34
  xpos 3832
  ypos 196
 }
set N25371800 [stack 0]
 Expression {
  expr0 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression16
  xpos 3975
  ypos 261
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N25371800
 Expression {
  expr0 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression1
  xpos 3871
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot28
  xpos 3905
  ypos 324
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 3975
  ypos 321
 }
 Dot {
  name Dot29
  xpos 4009
  ypos 500
 }
push $N25371800
 Expression {
  expr0 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression8
  xpos 3739
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {7 offset R 0 50}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l random_colors +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N25371800
 Expression {
  expr0 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain : 0:0"
  expr1 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain : 0:0"
  expr2 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain : 0:0"
  expr3 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? 1 : 0:0"
  name Expression9
  xpos 3575
  ypos 268
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot30
  xpos 3609
  ypos 500
 }
 Switch {
  inputs 3
  which {{"parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns == 1 ? 0 : parent.MASTER_POINTS.rows == 1 && parent.MASTER_POINTS.columns != 1 ? 1 : parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns != 1 ? 2 : 2"}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch5
  label "\[value which]"
  xpos 3739
  ypos 493
 }
 Dilate {
  size {{parent.MASTER_POINTS.dilate}}
  name Dilate14
  label "\[value size]"
  xpos 3739
  ypos 546
 }
set N25399c00 [stack 0]
 Dot {
  name Dot33
  label POINTS
  note_font "Verdana Bold"
  note_font_size 13
  xpos -17
  ypos 1753
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat5
  xpos 375
  ypos 122
 }
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(y/size)%2 == 0? (x%(dimension_width*scale))/(difference_size*width_brick*scale) : ((x+offset)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(y/size)%2 == 0? (y%dimension_height)/(difference_size) : ((y)%dimension_height)/(difference_size)"
  name Expression18
  xpos 375
  ypos 173
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.size_bricks}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset_bricks}}
  addUserKnob {7 scale R 0 6}
  scale {{parent.scale_bricks}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.anamorph_bricks}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
 }
set N253dac00 [stack 0]
 Dot {
  name Dot32
  label "UV MAP"
  note_font "Verdana Bold"
  note_font_size 16
  xpos 80
  ypos 1765
  hide_input true
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{parent.shape_width}}
  box_height {{box_width}}
  box_fixed true
  name Reformat6
  xpos 1097
  ypos -96
 }
 Flare {
  position {{parent.Reformat6.box_width/2} {parent.Reformat6.box_width/2}}
  radius {0 100 100}
  size_mult 0.73
  inner_color 1
  vis_in 1.05
  vis_out 1.105
  vis_mask_size 1
  corners 2
  flattening 6.2
  sharpness 1
  asym_repeat 0
  asym_multiplier 0.04
  asym_falloff 1.5
  asym_angle -34
  name Flare1
  xpos 1097
  ypos -52
 }
set N253dbc00 [stack 0]
 Crop {
  box {{parent.CurveTool1.autocropdata.x} {parent.CurveTool1.autocropdata.y} {parent.CurveTool1.autocropdata.r} {parent.CurveTool1.autocropdata.t}}
  reformat true
  name Crop1
  xpos 1098
  ypos -32
  disable {{!parent.enable_autocrop}}
 }
 Median {
  size 2
  ignore_top_line false
  name Median1
  xpos 1097
  ypos -8
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle4
  tile_color 0x93000000
  xpos 1097
  ypos 34
 }
 Transform {
  center {{parent.Reformat6.box_width/2} {parent.Reformat6.box_height/2}}
  shutteroffset centred
  name Transform1
  xpos 1097
  ypos 58
  disable true
 }
 Expression {
  expr3 "(r || g || b) != 0 ? 1 : 0"
  name Expression2
  xpos 1097
  ypos 82
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  tile_color 0xffffffff
  xpos 1097
  ypos 106
 }
set N25401800 [stack 0]
 Dot {
  name Dot25
  label SHAPE
  note_font "Verdana Bold"
  note_font_size 12
  xpos -66
  ypos 1793
  hide_input true
 }
push $N25401800
 Dot {
  name Dot50
  xpos 1131
  ypos 154
 }
 Input {
  inputs 0
  name img
  xpos 923
  ypos -98
 }
 Switch {
  inputs 2
  which {{parent.input}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch4
  label "\[value which]"
  xpos 923
  ypos 147
 }
 Transform {
  scale {{parent.scale}}
  center {1024 778}
  shutteroffset centred
  name Transform4
  selected true
  xpos 923
  ypos 194
 }
set N2543e800 [stack 0]
 Dot {
  name Dot19
  xpos 957
  ypos 232
 }
set N2543ec00 [stack 0]
 Dot {
  name Dot24
  label INPUT
  note_font "Verdana Bold"
  note_font_size 15
  xpos 128
  ypos 1793
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat3
  xpos 2284
  ypos 135
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat_Vertical
  xpos 2284
  ypos 170
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot10
  xpos 2318
  ypos 198
 }
set N25466400 [stack 0]
 Dot {
  name Dot5
  xpos 2318
  ypos 216
 }
set N25466800 [stack 0]
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x)>0 ? floor((y-shift.y)/size)%2 == 0 ? (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)) : floor((y-shift.y)/size)%2 == 0? 1 + (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : 1 +  ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick))"
  name Offset_red
  tile_color 0xff000001
  xpos 2237
  ypos 286
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot12
  xpos 2271
  ypos 334
 }
set N25467000 [stack 0]
push $N25466800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y)>0 ? floor((y-shift.y)/size)%2 == 0? (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) :  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size)) : floor((y-shift.y)/size)%2 == 0? 1+ (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) : 1+  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size))"
  name Offset_green
  tile_color 0xff0001
  xpos 2361
  ypos 285
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift x1 789} {parent.TILE_MASTER.shift x1 1005}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
set N25467400 [stack 0]
 Dot {
  name Dot6
  xpos 2622
  ypos 288
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos 2588
  ypos 331
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform2
  xpos 2588
  ypos 373
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat2
  xpos 2588
  ypos 397
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot16
  label TILE
  xpos 5135
  ypos 410
  hide_input true
 }
push $N253dac00
 Dot {
  name Dot21
  label BRICKS
  xpos 4939
  ypos 411
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat1
  xpos -1146
  ypos 152
 }
set N2549d400 [stack 0]
 Dot {
  name Dot1
  xpos -986
  ypos 155
 }
 Expression {
  expr0 "( cos(y / wide ) + thickness ) / smooth"
  expr1 "( cos(y / wide ) + thickness ) / smooth"
  expr2 "( cos(y / wide ) + thickness ) / smooth"
  expr3 "( cos(y / wide ) + thickness ) / smooth"
  name Lines_horizontal
  xpos -1020
  ypos 211
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
push $N2549d400
 Expression {
  expr0 "( sin(x / wide ) + thickness ) / smooth"
  expr1 "( sin(x / wide ) + thickness ) / smooth"
  expr2 "( sin(x / wide ) + thickness ) / smooth"
  expr3 "( sin(x / wide ) + thickness ) / smooth"
  name Lines_vertical
  xpos -1146
  ypos 298
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
 Switch {
  inputs 2
  which {{parent.alignment}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos -1020
  ypos 294
 }
 Clamp {
  name Clamp1
  xpos -1020
  ypos 326
 }
 Invert {
  name Invert2
  xpos -1020
  ypos 358
  disable {{!parent.invert_lines}}
 }
set N254bcc00 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {{parent.color1.r} {parent.color1.g} {parent.color1.b} {parent.color1.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant1
  xpos -868
  ypos 263
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -868
  ypos 355
 }
 Premult {
  name Premult1
  xpos -868
  ypos 387
 }
 Dot {
  name Dot2
  xpos -721
  ypos 390
 }
 Dot {
  name Dot3
  xpos -721
  ypos 720
 }
push $N254bcc00
 Invert {
  name Invert1
  xpos -1020
  ypos 576
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color2.r} {parent.color2.g} {parent.color2.b} {parent.color2.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant2
  xpos -868
  ypos 483
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -868
  ypos 576
 }
 Premult {
  name Premult2
  xpos -868
  ypos 608
 }
set N25509000 [stack 0]
 Merge2 {
  inputs 2
  name Merge1
  xpos -868
  ypos 717
 }
set N25509400 [stack 0]
 Dot {
  name Dot17
  label LINES
  xpos 5030
  ypos 392
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_input
  label "\[value which]"
  xpos 4996
  ypos 442
 }
 EdgeDetectWrapper {
  threshold 0.18
  name EdgeDetect2
  xpos 4996
  ypos 485
 }
 Dilate {
  size {{parent.dilate_edges}}
  name Dilate1
  label "\[value size]"
  xpos 4996
  ypos 517
 }
 Blur {
  size {{parent.blur_edges}}
  name Blur2
  label "\[value size]"
  xpos 4996
  ypos 559
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  tile_color 0xffffffff
  xpos 4996
  ypos 601
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color_edges} {parent.color_edges} {parent.color_edges} {parent.color_edges}}
  name Constant3
  xpos 5136
  ypos 605
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 4996
  ypos 625
 }
 Premult {
  name Premult3
  xpos 4996
  ypos 657
 }
 Dot {
  name Dot7
  label "do not delete"
  xpos 5030
  ypos 709
 }
set N2553f800 [stack 0]
 Dot {
  name Dot13
  xpos 5030
  ypos 1849
 }
set N2553fc00 [stack 0]
push $N25466400
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(abs(y-shift.y)/size)%2 == 0? (abs(x-shift.x)%dimension_width)/(difference_size*width_brick) : (abs(x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(abs(y-shift.y)/size)%2 == 0? (abs(y-shift.y)%dimension_height)/(difference_size) : (abs(y-shift.y)%dimension_height)/(difference_size)"
  name CROSS
  xpos 2015
  ypos 277
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot8
  xpos 2049
  ypos 507
 }
push $N25467400
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y>=0?0:1) + fmod(int((y-shift.y)/dimension_height),2)!=0?1-g:g"
  name Mirror_green
  tile_color 0xff0001
  xpos 2361
  ypos 373
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot9
  xpos 2395
  ypos 414
 }
push $N25467000
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x>=0?0:1) + fmod(int((x-shift.x)/dimension_width),2)!=0?1-r:r"
  name Mirror_red
  tile_color 0xff000001
  xpos 2237
  ypos 371
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 2237
  ypos 411
 }
 Switch {
  inputs 2
  which {{parent.TILE_MASTER.cross}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch3
  label "\[value which]"
  xpos 2237
  ypos 500
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform3
  xpos 2237
  ypos 532
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat7
  xpos 2237
  ypos 556
  disable {{!parent.TILE_MASTER.vertical}}
 }
push $N2543ec00
 Dot {
  name Dot18
  xpos 957
  ypos 659
 }
 STMap {
  inputs 2
  uv rgba
  name STMap2
  xpos 2237
  ypos 652
 }
set N255b2800 [stack 0]
 Dot {
  name Dot38
  label "INPUT TILE"
  note_font "Verdana Bold"
  xpos 691
  ypos 1608
  hide_input true
 }
push $N2553fc00
 Dot {
  name Dot20
  label EDGES
  note_font "Verdana Bold"
  note_font_size 13
  xpos 245
  ypos 1483
  hide_input true
 }
set N255b3000 [stack 0]
 Dot {
  name Dot39
  xpos 643
  ypos 1598
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat4
  xpos 213
  ypos 1358
 }
set N255b3800 [stack 0]
 Shuffle {
  alpha white
  name Shuffle3
  tile_color 0xffffff01
  label "\[value in]"
  xpos 213
  ypos 1408
 }
set N255d6000 [stack 0]
 Dot {
  name Dot40
  xpos 592
  ypos 1595
  hide_input true
 }
push $N255b3800
 Shuffle {
  alpha black
  name Shuffle2
  tile_color 0xff
  label "\[value in]"
  xpos 100
  ypos 1414
 }
set N255d6800 [stack 0]
 Dot {
  name Dot41
  xpos 554
  ypos 1622
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_tile}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_tile
  label "\[value which]"
  xpos 597
  ypos 1640
 }
push $N25399c00
 Dot {
  name Dot37
  label POINTS
  note_font "Verdana Bold"
  xpos 524
  ypos 1548
  hide_input true
 }
push $N2543ec00
 Dot {
  name Dot31
  label INPUT
  note_font "Verdana Bold"
  note_font_size 17
  xpos 3895
  ypos 637
  hide_input true
 }
push $N25399c00
 Convolve2 {
  inputs 2
  useGPUIfAvailable false
  use_input_channels true
  name Convolve1
  xpos 3739
  ypos 630
 }
set N255d7800 [stack 0]
 Dot {
  name Dot36
  label "INPUT POINTS"
  note_font "Verdana Bold"
  note_font_size 13
  xpos 487
  ypos 1532
  hide_input true
 }
push $N255d6000
 Dot {
  name Dot42
  xpos 446
  ypos 1530
  hide_input true
 }
push $N255d6800
 Dot {
  name Dot43
  xpos 401
  ypos 1544
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_shingle}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_points
  label "\[value which]"
  xpos 424
  ypos 1573
 }
push $N255b3800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  channel0 {rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green rgba.blue none}
  expr3 "floor(y/size)%2 == 0 ? rint(amount*random((floor((x)/(dimension_width*scale))+random_value)*(floor(y/dimension_height)+random_value)*random_value)) : rint(amount*random((floor((x+offset)/(dimension_width))/(difference_size*width_brick)+random_value)*(floor(y/dimension_height)+random_value)*random_value))"
  name Expression22
  xpos 385
  ypos 1396
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.Expression18.size}}
  addUserKnob {7 scale R 0 10}
  scale {{parent.Expression18.scale}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.Expression18.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.Expression18.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
  addUserKnob {7 amount R 0.5 6}
  amount {{parent.amount_bricks}}
 }
 Clamp {
  name Clamp2
  xpos 385
  ypos 1420
 }
 Dot {
  name Dot44
  xpos 389
  ypos 1511
  hide_input true
 }
push $N253dac00
push $N2543ec00
 STMap {
  inputs 2
  channels rgba
  uv rgba
  filter sinc4
  name STMap1
  xpos 375
  ypos 229
 }
set N25605800 [stack 0]
 Dot {
  name Dot35
  label "INPUT BRICKS"
  note_font_size 14
  xpos 326
  ypos 1487
  hide_input true
 }
push $N255b3000
 Dot {
  name Dot47
  xpos 361
  ypos 1493
  hide_input true
 }
push $N255d6000
 Dot {
  name Dot45
  xpos 296
  ypos 1499
  hide_input true
 }
push $N255d6800
 Dot {
  name Dot46
  xpos 262
  ypos 1515
  hide_input true
 }
 Switch {
  inputs 5
  which {{parent.alpha_bricks}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name Switch_alpha_bricks
  label "\[value which]"
  xpos 300
  ypos 1550
 }
push $N255b3000
push $N255d6000
 Dot {
  name Dot48
  xpos 189
  ypos 1486
  hide_input true
 }
push $N255d6800
 Dot {
  name Dot49
  xpos 134
  ypos 1504
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.alpha_lines}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_alpha_lines
  label "\[value which]"
  xpos 174
  ypos 1528
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch6
  label "\[value which]"
  xpos 212
  ypos 1670
 }
push $N2553f800
 Dot {
  name Dot14
  xpos 2399
  ypos 709
  hide_input true
 }
push $N255b2800
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges2
  xpos 2237
  ypos 706
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot11
  xpos 2271
  ypos 931
 }
 Dot {
  name Dot26
  label TILE
  note_font "Verdana Bold"
  xpos 127
  ypos 865
  hide_input true
 }
push $N255d7800
 Dot {
  name Dot27
  label SHINGLE
  note_font "Verdana Bold"
  xpos 3
  ypos 866
  hide_input true
 }
push $N2553f800
 Dot {
  name Dot22
  xpos 509
  ypos 293
  hide_input true
 }
push $N25605800
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges3
  xpos 375
  ypos 290
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot23
  xpos 409
  ypos 931
 }
push $N2553f800
 Dot {
  name Dot15
  xpos -734
  ypos 831
  hide_input true
 }
push $N25509400
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges1
  xpos -868
  ypos 828
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot4
  xpos -834
  ypos 931
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch2
  label "\[value which]"
  xpos 0
  ypos 924
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 0
  ypos 1670
 }
 Switch {
  inputs 6
  which {{preview_edges==1?1:preview_input==1?2:preview_shape==1?3:preview_bricks==1?4:preview_points==1?5:0}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name Switch_output
  label "\[value which]"
  xpos 0
  ypos 1842
 }
 Output {
  name Output1
  xpos 0
  ypos 1905
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xffffffff
  label "<b>Bricks                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos -88
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label ROWS
  note_font "Verdana Bold"
  xpos 3578
  ypos 220
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label COLUMNS
  note_font "Verdana Bold"
  xpos 3753
  ypos 206
 }
 StickyNote {
  inputs 0
  name StickyNote8
  label OFFSET
  note_font "Verdana Bold"
  xpos 3944
  ypos 194
 }
 StickyNote {
  inputs 0
  name StickyNote9
  tile_color 0xffffffff
  label "<b>Shingle                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -180
 }
push $N253dbc00
 CurveTool {
  operation "Auto Crop"
  channels rgba
  ROI {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  autocropdata {{curve x1 156} {curve x1 156} {curve x1 345} {curve x1 345}}
  intensitydata {{curve}}
  name CurveTool1
  xpos 1248
  ypos -52
 }
 Reformat {
  inputs 0
  name Reformat_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -45
  ypos -316
 }
 Expression {
  inputs 0
  name MASTER_POINTS
  note_font "Verdana Bold"
  xpos 3773
  ypos 30
  addUserKnob {20 User}
  addUserKnob {3 offsetX}
  offsetX {{parent.offsetX}}
  addUserKnob {3 offsetY}
  offsetY {{parent.offsetY}}
  addUserKnob {26 ""}
  addUserKnob {3 rows}
  rows {{parent.rows}}
  addUserKnob {3 columns}
  columns {{parent.columns}}
  addUserKnob {26 ""}
  addUserKnob {3 offset}
  offset {{parent.offset_shingle}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.random_colors}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.random_every_frame}}
  addUserKnob {26 ""}
  addUserKnob {7 dilate R 0 10}
  dilate {{parent.dilate}}
 }
 Expression {
  inputs 0
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor((y-shift.y)/size)%2 == 0? ((x-shift.x)%dimension_width)/(difference_size*width_brick) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor((y-shift.y)/size)%2 == 0? ((y-shift.y)%dimension_height)/(difference_size) : ((y-shift.y)%dimension_height)/(difference_size)"
  name TILE_MASTER
  note_font "Verdana Bold"
  xpos 2645
  ypos 136
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.shift} {parent.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick l "width brick" R 0 5}
  width_brick {{parent.width_brick}}
  addUserKnob {3 random_value l INVISIBLE +INVISIBLE}
  random_value 59
  addUserKnob {6 vertical +STARTLINE}
  vertical {{!parent.alignment}}
  addUserKnob {6 cross +STARTLINE}
  cross {{parent.cross}}
  addUserKnob {6 mirror +STARTLINE}
  mirror {{parent.mirror}}
 }
push $N25509000
push $N2543e800
 Viewer {
  inputs 2
  frame_range 11-100
  name Viewer1
  xpos -489
  ypos -15
  hide_input true
 }
end_group
Group {
 inputs 0
 name ProceduralTEXTURE7
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n#works only if knob 'type' is changing.\nif ('type' in k.name()):\n    import nuke\n    #------------------------------------------------------------\n    #LINES\n    if(k.getValue()==0):\n        n\['input'].setVisible(False)\n        n\['preview_input'].setVisible(False)\n        n\['scale'].setVisible(False)\n        n\['shape_width'].setVisible(False)\n        n\['calc_autocrop'].setVisible(False)\n        n\['enable_autocrop'].setVisible(False)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['lines_divider01'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        n\['lines_divider02'].setVisible(True)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n    \n    #BRICKS\n    if(k.getValue()==1):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['bricks_divider01'].setVisible(True)\n        n\['bricks_divider02'].setVisible(True)\n        n\['bricks_divider03'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n        \n    #SHINGLE\n    if(k.getValue()==2):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        n\['shingle_divider01'].setVisible(True)\n        n\['shingle_divider02'].setVisible(True)\n        n\['shingle_divider03'].setVisible(True)\n        n\['shingle_divider04'].setVisible(True)\n        \n        n\['edges'].setVisible(False)\n        n\['preview_edges'].setVisible(False)\n        n\['dilate_edges'].setVisible(False)\n        n\['blur_edges'].setVisible(False)\n        n\['color_edges'].setVisible(False)\n        n\['enable_edges'].setVisible(False)\n        n\['mix_edges'].setVisible(False)\n        n\['edges_divider01'].setVisible(False)\n        \n        \n    #TILE\n    if(k.getValue()==3):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        n\['tile_divider01'].setVisible(True)\n        n\['tile_divider02'].setVisible(True)\n        n\['preview_UV_tile'].setVisible(True)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n     \n    if(k.getValue()==4):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)"
 autolabel "nuke.thisNode().name() + \"\\n\" + '(' + 'type' + ':'+ ' ' + str(nuke.thisNode()\['type'].value()) + ')' "
 tile_color 0x14f5d001
 label STAR
 note_font "Verdana Bold"
 selected true
 xpos 11620
 ypos -160
 addUserKnob {20 ProceduralTexture l "Procedural Texture"}
 addUserKnob {26 text l "" +STARTLINE T "<font size=\"40\"><font color=\"light sea green\">PROCEDURAL <b><font size=\"40\"><font color=\"spring green\">TEXTURE"}
 addUserKnob {26 artist l "" +STARTLINE T "<i><font color=\"silver\">Andrea Geremia"}
 addUserKnob {26 ""}
 addUserKnob {68 type t "Select the operation you want to do:\n\n- Lines. Creates some vertical or horizontal stipes. Decide the colors and thickness\n\n- Bricks. The common way to use this operation is to create walls. Select the shape or connect an image. Combine some nodes to create a more complex texture. It creates a wall using the UV and STMap node. Use this option if you want to create a classic wall of bricks without overlapping\n\n- Shingle. Creates a wall using the Convolve node and points. It allows to create compenetrations between shapes. It's usefull to create alien projectors with hexagons and random colors. \n\n- Tile. Compared to the previous operation, here it's easier to deal with the pictures and their manipulation. It's similar to the ContactSheet node with more controls" M {Lines Bricks Shingle Tile "" "" "" ""}}
 type Bricks
 addUserKnob {26 ""}
 addUserKnob {4 input M {img shape}}
 input shape
 addUserKnob {6 preview_input l "preview input" -STARTLINE}
 addUserKnob {7 scale t "The type Shingle uses the Convolve as technique. If you don't see the correct result, try to reduce a lot the scale, in order of 0.1 "}
 scale 1
 addUserKnob {4 alignment t "Select the alignment of lines" +HIDDEN M {Vertical Horizontal ""}}
 addUserKnob {26 ""}
 addUserKnob {41 format l "output format" T Reformat_CTRL.format}
 addUserKnob {4 alpha_lines l alpha +HIDDEN M {0 1 edges}}
 addUserKnob {4 alpha_bricks l alpha M {0 1 edges input "Wall of Bricks" "" ""}}
 alpha_bricks input
 addUserKnob {4 alpha_shingle l alpha +HIDDEN M {0 1 input points}}
 addUserKnob {4 alpha_tile l alpha +HIDDEN M {0 1 edges input}}
 alpha_tile input
 addUserKnob {26 ""}
 addUserKnob {26 lines l "<b><font color=\"red\">LINES" +HIDDEN}
 addUserKnob {19 color1 +HIDDEN}
 color1 {1 0 0 0}
 addUserKnob {6 color1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 color2 +HIDDEN}
 color2 {0 1 0 0}
 addUserKnob {6 color2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 lines_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 wide +HIDDEN R 0 20}
 wide 10.9
 addUserKnob {7 thickness +HIDDEN R 0 2}
 addUserKnob {7 smooth +HIDDEN R 0 4}
 addUserKnob {6 invert_lines l "invert lines" t "Invert colors and parameters between the two groups of lines" +HIDDEN +STARTLINE}
 invert_lines true
 addUserKnob {26 lines_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 bricks l "<b><font color=\"fuchsia\">BRICKS"}
 addUserKnob {6 preview_bricks l "preview UVMap" +STARTLINE}
 addUserKnob {7 size_bricks l size R 0 100}
 size_bricks 300
 addUserKnob {7 anamorph_bricks l anamorph R 0 6}
 anamorph_bricks 1
 addUserKnob {26 bricks_divider01 l "" +STARTLINE}
 addUserKnob {7 offset_bricks l offset R 0 50}
 addUserKnob {7 scale_bricks l "scale even lines" R 0 6}
 scale_bricks 1
 addUserKnob {26 bricks_divider02 l "" +STARTLINE}
 addUserKnob {20 wall_of_bricks l "Alpha - Wall of Bricks" n 1}
 addUserKnob {3 random_bricks l "random value"}
 random_bricks 86
 addUserKnob {22 generate_random_value l "Random value" -STARTLINE T "import random\nrand_value=random.randint(1,300)\nnuke.thisGroup()\['random_bricks'].setValue(rand_value)"}
 addUserKnob {7 amount_bricks l amount R 0.5 4}
 amount_bricks 1.06
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 bricks_divider03 l "" +STARTLINE}
 addUserKnob {26 tile l "<b><font color=\"yellow\">TILE" +HIDDEN}
 addUserKnob {6 preview_UV_tile l "preview UVMap" +HIDDEN +STARTLINE}
 addUserKnob {12 shift +HIDDEN}
 shift {1045 725}
 addUserKnob {7 size +HIDDEN R 0 100}
 size 100
 addUserKnob {7 offset +HIDDEN R 0 50}
 addUserKnob {26 tile_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 width_brick l "width brick" +HIDDEN R 0 10}
 width_brick 2
 addUserKnob {6 cross t "This option is connected to the Shift values.\nIf you don't see any change, please modify the values of Shift" +HIDDEN +STARTLINE}
 addUserKnob {6 mirror -STARTLINE +HIDDEN}
 addUserKnob {26 tile_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 shingle l "<font color=\"chocolate\"><b>SHINGLE" +HIDDEN}
 addUserKnob {6 preview_points l "preview Points" +HIDDEN +STARTLINE}
 addUserKnob {3 offsetX +HIDDEN}
 offsetX 100
 addUserKnob {3 offsetY -STARTLINE +HIDDEN}
 offsetY 100
 addUserKnob {26 shingle_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 message_shingle l "" +STARTLINE +HIDDEN T "<i>Print every:"}
 addUserKnob {3 rows +HIDDEN}
 rows 1
 addUserKnob {3 columns -STARTLINE +HIDDEN}
 columns 1
 addUserKnob {26 shingle_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 offset_shingle l offset +HIDDEN}
 addUserKnob {26 shingle_divider03 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 gain +HIDDEN R 0 10}
 gain 1
 addUserKnob {7 dilate l "dilate points" +HIDDEN R 0 20}
 dilate 6
 addUserKnob {6 random_colors l "random colors" +HIDDEN +STARTLINE}
 random_colors true
 addUserKnob {6 random_every_frame l "random colors every frame" +HIDDEN +STARTLINE}
 random_every_frame true
 addUserKnob {26 shingle_divider04 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 edges l "<b><font color=\"aqua\">Edges"}
 addUserKnob {6 preview_edges l "preview edges" +STARTLINE}
 addUserKnob {7 dilate_edges l dilate R -10 10}
 addUserKnob {7 blur_edges l blur R 0 5}
 addUserKnob {18 color_edges l color}
 color_edges {0.015951 0.584199 0.959849}
 addUserKnob {6 color_edges_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 edges_divider01 l "" +STARTLINE}
 addUserKnob {6 enable_edges l "enable edges" +STARTLINE}
 addUserKnob {7 mix_edges l "" -STARTLINE}
 mix_edges 1
 addUserKnob {20 shape l Shape}
 addUserKnob {6 preview_shape l "preview shape" +STARTLINE}
 addUserKnob {3 shape_width l width/height}
 shape_width 500
 addUserKnob {22 calc_autocrop l "Calc Auto Crop" -STARTLINE T "n=nuke.thisNode()\nn.node('CurveTool1')\['go'].execute()"}
 addUserKnob {6 enable_autocrop l "enable autocrop" -STARTLINE}
 enable_autocrop true
 addUserKnob {26 shape_1 l "<font color=darkorange><b>SHAPE"}
 addUserKnob {41 corners T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle T Flare1.corners_angle}
 addUserKnob {41 corner_angle_add l rel -STARTLINE T Flare1.corner_angle_add}
 addUserKnob {26 size_1 l "<font color=darkcyan><b>SIZE"}
 addUserKnob {41 radius T Flare1.radius}
 addUserKnob {41 size_mult l "size mult" T Flare1.size_mult}
 addUserKnob {41 anamorph T Flare1.anamorph}
 addUserKnob {26 visibility l "<font color=deepskyblue><b>VISIBILITY"}
 addUserKnob {41 brightness T Flare1.brightness}
 addUserKnob {41 vis_in l in T Flare1.vis_in}
 addUserKnob {41 vis_out l out T Flare1.vis_out}
 addUserKnob {26 colors l "<font color=deeppink><b>COLORS"}
 addUserKnob {41 ring_color l "ring color" T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" T Flare1.inner_falloff}
 addUserKnob {26 color_shift l "<font color=lightpink><b>COLOR SHIFT"}
 addUserKnob {41 chroma_spread l "chroma spread" T Flare1.chroma_spread}
 addUserKnob {41 chroma_shift l "chroma shift" T Flare1.chroma_shift}
 addUserKnob {41 chroma_shift_angle l angle T Flare1.chroma_shift_angle}
 addUserKnob {41 chroma_shift_angle_add l rel -STARTLINE T Flare1.chroma_shift_angle_add}
 addUserKnob {26 asimmetry l "<font color=greenyellow><b>ASIMMETRY"}
 addUserKnob {41 asym_repeat l repeat T Flare1.asym_repeat}
 addUserKnob {41 asym_multiplier l multiplier T Flare1.asym_multiplier}
 addUserKnob {41 asym_falloff l falloff T Flare1.asym_falloff}
 addUserKnob {41 asym_angle l angle T Flare1.asym_angle}
 addUserKnob {41 asym_angle_add l rel -STARTLINE T Flare1.asym_angle_add}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x472b5901
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 126
  bookmark false
  bdwidth 703
  bdheight 641
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x44513501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 2005
  ypos 50
  bookmark false
  bdwidth 823
  bdheight 734
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x56193501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 296
  bookmark false
  bdwidth 365
  bdheight 931
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x71c67100
  label img
  note_font_size 42
  xpos 913
  ypos -178
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x71c67100
  label shape
  note_font_size 42
  xpos 1087
  ypos -180
  bdwidth 278
  bdheight 371
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x665e7201
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos 37
  bookmark false
  bdwidth 244
  bdheight 331
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x387c9901
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -55
  bookmark false
  bdwidth 588
  bdheight 781
 }
 Expression {
  inputs 0
  name Lines_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -839
  ypos 194
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.smooth}}
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xffffffff
  label "<b>Lines                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 56
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xffffffff
  label "<b>Tile                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos 2005
  ypos -15
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xffffffff
  label "<b>Edges                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 171
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat8
  xpos 3798
  ypos 104
 }
 Dot {
  name Dot34
  xpos 3832
  ypos 196
 }
set Nf8197c00 [stack 0]
 Expression {
  expr0 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression16
  xpos 3975
  ypos 261
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $Nf8197c00
 Expression {
  expr0 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression1
  xpos 3871
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot28
  xpos 3905
  ypos 324
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 3975
  ypos 321
 }
 Dot {
  name Dot29
  xpos 4009
  ypos 500
 }
push $Nf8197c00
 Expression {
  expr0 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression8
  xpos 3739
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {7 offset R 0 50}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l random_colors +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $Nf8197c00
 Expression {
  expr0 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain : 0:0"
  expr1 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain : 0:0"
  expr2 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain : 0:0"
  expr3 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? 1 : 0:0"
  name Expression9
  xpos 3575
  ypos 268
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot30
  xpos 3609
  ypos 500
 }
 Switch {
  inputs 3
  which {{"parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns == 1 ? 0 : parent.MASTER_POINTS.rows == 1 && parent.MASTER_POINTS.columns != 1 ? 1 : parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns != 1 ? 2 : 2"}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch5
  label "\[value which]"
  xpos 3739
  ypos 493
 }
 Dilate {
  size {{parent.MASTER_POINTS.dilate}}
  name Dilate14
  label "\[value size]"
  xpos 3739
  ypos 546
 }
set N1697e000 [stack 0]
 Dot {
  name Dot33
  label POINTS
  note_font "Verdana Bold"
  note_font_size 13
  xpos -17
  ypos 1753
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat5
  xpos 375
  ypos 122
 }
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(y/size)%2 == 0? (x%(dimension_width*scale))/(difference_size*width_brick*scale) : ((x+offset)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(y/size)%2 == 0? (y%dimension_height)/(difference_size) : ((y)%dimension_height)/(difference_size)"
  name Expression18
  xpos 375
  ypos 173
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.size_bricks}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset_bricks}}
  addUserKnob {7 scale R 0 6}
  scale {{parent.scale_bricks}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.anamorph_bricks}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
 }
set N1697f000 [stack 0]
 Dot {
  name Dot32
  label "UV MAP"
  note_font "Verdana Bold"
  note_font_size 16
  xpos 80
  ypos 1765
  hide_input true
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{parent.shape_width}}
  box_height {{box_width}}
  box_fixed true
  name Reformat6
  xpos 1097
  ypos -96
 }
 Flare {
  position {{parent.Reformat6.box_width/2} {parent.Reformat6.box_width/2}}
  radius {0 100 100}
  size_mult 0.6
  inner_color 1
  vis_in 1.05
  vis_out 1.105
  vis_mask_size 1
  corners 4
  flattening 13
  sharpness 0.82
  asym_repeat 0
  asym_multiplier 0.04
  asym_falloff 1.5
  asym_angle -34
  name Flare1
  xpos 1097
  ypos -52
 }
set N169ac000 [stack 0]
 Crop {
  box {{parent.CurveTool1.autocropdata.x} {parent.CurveTool1.autocropdata.y} {parent.CurveTool1.autocropdata.r} {parent.CurveTool1.autocropdata.t}}
  reformat true
  name Crop1
  xpos 1098
  ypos -32
  disable {{!parent.enable_autocrop}}
 }
 Median {
  size 2
  ignore_top_line false
  name Median1
  xpos 1097
  ypos -8
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle4
  tile_color 0x93000000
  xpos 1097
  ypos 34
 }
 Transform {
  center {{parent.Reformat6.box_width/2} {parent.Reformat6.box_height/2}}
  shutteroffset centred
  name Transform1
  xpos 1097
  ypos 58
  disable true
 }
 Expression {
  expr3 "(r || g || b) != 0 ? 1 : 0"
  name Expression2
  xpos 1097
  ypos 82
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  tile_color 0xffffffff
  xpos 1097
  ypos 106
 }
set N169adc00 [stack 0]
 Dot {
  name Dot25
  label SHAPE
  note_font "Verdana Bold"
  note_font_size 12
  xpos -66
  ypos 1793
  hide_input true
 }
push $N169adc00
 Dot {
  name Dot50
  xpos 1131
  ypos 154
 }
 Input {
  inputs 0
  name img
  xpos 923
  ypos -98
 }
 Switch {
  inputs 2
  which {{parent.input}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch4
  label "\[value which]"
  xpos 923
  ypos 147
 }
 Transform {
  scale {{parent.scale}}
  center {1024 778}
  shutteroffset centred
  name Transform4
  xpos 923
  ypos 194
 }
 Dot {
  name Dot19
  xpos 957
  ypos 232
 }
set N169e7000 [stack 0]
 Dot {
  name Dot24
  label INPUT
  note_font "Verdana Bold"
  note_font_size 15
  xpos 128
  ypos 1793
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat3
  xpos 2284
  ypos 135
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat_Vertical
  xpos 2284
  ypos 170
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot10
  xpos 2318
  ypos 198
 }
set N16a0c800 [stack 0]
 Dot {
  name Dot5
  xpos 2318
  ypos 216
 }
set N16a0cc00 [stack 0]
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x)>0 ? floor((y-shift.y)/size)%2 == 0 ? (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)) : floor((y-shift.y)/size)%2 == 0? 1 + (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : 1 +  ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick))"
  name Offset_red
  tile_color 0xff000001
  xpos 2237
  ypos 286
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot12
  xpos 2271
  ypos 334
 }
set N16a0d400 [stack 0]
push $N16a0cc00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y)>0 ? floor((y-shift.y)/size)%2 == 0? (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) :  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size)) : floor((y-shift.y)/size)%2 == 0? 1+ (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) : 1+  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size))"
  name Offset_green
  tile_color 0xff0001
  xpos 2361
  ypos 285
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift x1 789} {parent.TILE_MASTER.shift x1 1005}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
set N16a0d800 [stack 0]
 Dot {
  name Dot6
  xpos 2622
  ypos 288
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos 2588
  ypos 331
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform2
  xpos 2588
  ypos 373
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat2
  xpos 2588
  ypos 397
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot16
  label TILE
  xpos 5135
  ypos 410
  hide_input true
 }
push $N1697f000
 Dot {
  name Dot21
  label BRICKS
  xpos 4939
  ypos 411
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat1
  xpos -1146
  ypos 152
 }
set N16a3d800 [stack 0]
 Dot {
  name Dot1
  xpos -986
  ypos 155
 }
 Expression {
  expr0 "( cos(y / wide ) + thickness ) / smooth"
  expr1 "( cos(y / wide ) + thickness ) / smooth"
  expr2 "( cos(y / wide ) + thickness ) / smooth"
  expr3 "( cos(y / wide ) + thickness ) / smooth"
  name Lines_horizontal
  xpos -1020
  ypos 211
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
push $N16a3d800
 Expression {
  expr0 "( sin(x / wide ) + thickness ) / smooth"
  expr1 "( sin(x / wide ) + thickness ) / smooth"
  expr2 "( sin(x / wide ) + thickness ) / smooth"
  expr3 "( sin(x / wide ) + thickness ) / smooth"
  name Lines_vertical
  xpos -1146
  ypos 298
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
 Switch {
  inputs 2
  which {{parent.alignment}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos -1020
  ypos 294
 }
 Clamp {
  name Clamp1
  xpos -1020
  ypos 326
 }
 Invert {
  name Invert2
  xpos -1020
  ypos 358
  disable {{!parent.invert_lines}}
 }
set N16a5d000 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {{parent.color1.r} {parent.color1.g} {parent.color1.b} {parent.color1.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant1
  xpos -868
  ypos 263
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -868
  ypos 355
 }
 Premult {
  name Premult1
  xpos -868
  ypos 387
 }
 Dot {
  name Dot2
  xpos -721
  ypos 390
 }
 Dot {
  name Dot3
  xpos -721
  ypos 720
 }
push $N16a5d000
 Invert {
  name Invert1
  xpos -1020
  ypos 576
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color2.r} {parent.color2.g} {parent.color2.b} {parent.color2.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant2
  xpos -868
  ypos 483
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -868
  ypos 576
 }
 Premult {
  name Premult2
  xpos -868
  ypos 608
 }
set N16aa7400 [stack 0]
 Merge2 {
  inputs 2
  name Merge1
  xpos -868
  ypos 717
 }
set N16aa7800 [stack 0]
 Dot {
  name Dot17
  label LINES
  xpos 5030
  ypos 392
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_input
  label "\[value which]"
  xpos 4996
  ypos 442
 }
 EdgeDetectWrapper {
  threshold 0.18
  name EdgeDetect2
  xpos 4996
  ypos 485
 }
 Dilate {
  size {{parent.dilate_edges}}
  name Dilate1
  label "\[value size]"
  xpos 4996
  ypos 517
 }
 Blur {
  size {{parent.blur_edges}}
  name Blur2
  label "\[value size]"
  xpos 4996
  ypos 559
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  tile_color 0xffffffff
  xpos 4996
  ypos 601
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color_edges} {parent.color_edges} {parent.color_edges} {parent.color_edges}}
  name Constant3
  xpos 5136
  ypos 605
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 4996
  ypos 625
 }
 Premult {
  name Premult3
  xpos 4996
  ypos 657
 }
 Dot {
  name Dot7
  label "do not delete"
  xpos 5030
  ypos 709
 }
set N16addc00 [stack 0]
 Dot {
  name Dot13
  xpos 5030
  ypos 1849
 }
set N16b0e000 [stack 0]
push $N16a0c800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(abs(y-shift.y)/size)%2 == 0? (abs(x-shift.x)%dimension_width)/(difference_size*width_brick) : (abs(x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(abs(y-shift.y)/size)%2 == 0? (abs(y-shift.y)%dimension_height)/(difference_size) : (abs(y-shift.y)%dimension_height)/(difference_size)"
  name CROSS
  xpos 2015
  ypos 277
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot8
  xpos 2049
  ypos 507
 }
push $N16a0d800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y>=0?0:1) + fmod(int((y-shift.y)/dimension_height),2)!=0?1-g:g"
  name Mirror_green
  tile_color 0xff0001
  xpos 2361
  ypos 373
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot9
  xpos 2395
  ypos 414
 }
push $N16a0d400
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x>=0?0:1) + fmod(int((x-shift.x)/dimension_width),2)!=0?1-r:r"
  name Mirror_red
  tile_color 0xff000001
  xpos 2237
  ypos 371
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 2237
  ypos 411
 }
 Switch {
  inputs 2
  which {{parent.TILE_MASTER.cross}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch3
  label "\[value which]"
  xpos 2237
  ypos 500
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform3
  xpos 2237
  ypos 532
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat7
  xpos 2237
  ypos 556
  disable {{!parent.TILE_MASTER.vertical}}
 }
push $N169e7000
 Dot {
  name Dot18
  xpos 957
  ypos 659
 }
 STMap {
  inputs 2
  uv rgba
  name STMap2
  xpos 2237
  ypos 652
 }
set N16b58c00 [stack 0]
 Dot {
  name Dot38
  label "INPUT TILE"
  note_font "Verdana Bold"
  xpos 691
  ypos 1608
  hide_input true
 }
push $N16b0e000
 Dot {
  name Dot20
  label EDGES
  note_font "Verdana Bold"
  note_font_size 13
  xpos 245
  ypos 1483
  hide_input true
 }
set N16b59400 [stack 0]
 Dot {
  name Dot39
  xpos 643
  ypos 1598
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat4
  xpos 213
  ypos 1358
 }
set N16b59c00 [stack 0]
 Shuffle {
  alpha white
  name Shuffle3
  tile_color 0xffffff01
  label "\[value in]"
  xpos 213
  ypos 1408
 }
set N16b74400 [stack 0]
 Dot {
  name Dot40
  xpos 592
  ypos 1595
  hide_input true
 }
push $N16b59c00
 Shuffle {
  alpha black
  name Shuffle2
  tile_color 0xff
  label "\[value in]"
  xpos 100
  ypos 1414
 }
set N16b74c00 [stack 0]
 Dot {
  name Dot41
  xpos 554
  ypos 1622
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_tile}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_tile
  label "\[value which]"
  xpos 597
  ypos 1640
 }
push $N1697e000
 Dot {
  name Dot37
  label POINTS
  note_font "Verdana Bold"
  xpos 524
  ypos 1548
  hide_input true
 }
push $N169e7000
 Dot {
  name Dot31
  label INPUT
  note_font "Verdana Bold"
  note_font_size 17
  xpos 3895
  ypos 637
  hide_input true
 }
push $N1697e000
 Convolve2 {
  inputs 2
  useGPUIfAvailable false
  use_input_channels true
  name Convolve1
  xpos 3739
  ypos 630
 }
set N16b75c00 [stack 0]
 Dot {
  name Dot36
  label "INPUT POINTS"
  note_font "Verdana Bold"
  note_font_size 13
  xpos 487
  ypos 1532
  hide_input true
 }
push $N16b74400
 Dot {
  name Dot42
  xpos 446
  ypos 1530
  hide_input true
 }
push $N16b74c00
 Dot {
  name Dot43
  xpos 401
  ypos 1544
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_shingle}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_points
  label "\[value which]"
  xpos 424
  ypos 1573
 }
push $N16b59c00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  channel0 {rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green rgba.blue none}
  expr3 "floor(y/size)%2 == 0 ? rint(amount*random((floor((x)/(dimension_width*scale))+random_value)*(floor(y/dimension_height)+random_value)*random_value)) : rint(amount*random((floor((x+offset)/(dimension_width))/(difference_size*width_brick)+random_value)*(floor(y/dimension_height)+random_value)*random_value))"
  name Expression22
  xpos 385
  ypos 1396
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.Expression18.size}}
  addUserKnob {7 scale R 0 10}
  scale {{parent.Expression18.scale}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.Expression18.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.Expression18.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
  addUserKnob {7 amount R 0.5 6}
  amount {{parent.amount_bricks}}
 }
 Clamp {
  name Clamp2
  xpos 385
  ypos 1420
 }
 Dot {
  name Dot44
  xpos 389
  ypos 1511
  hide_input true
 }
push $N1697f000
push $N169e7000
 STMap {
  inputs 2
  channels rgba
  uv rgba
  filter sinc4
  name STMap1
  xpos 375
  ypos 229
 }
set N17b6fc00 [stack 0]
 Dot {
  name Dot35
  label "INPUT BRICKS"
  note_font_size 14
  xpos 326
  ypos 1487
  hide_input true
 }
push $N16b59400
 Dot {
  name Dot47
  xpos 361
  ypos 1493
  hide_input true
 }
push $N16b74400
 Dot {
  name Dot45
  xpos 296
  ypos 1499
  hide_input true
 }
push $N16b74c00
 Dot {
  name Dot46
  xpos 262
  ypos 1515
  hide_input true
 }
 Switch {
  inputs 5
  which {{parent.alpha_bricks}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name Switch_alpha_bricks
  label "\[value which]"
  xpos 300
  ypos 1550
 }
push $N16b59400
push $N16b74400
 Dot {
  name Dot48
  xpos 189
  ypos 1486
  hide_input true
 }
push $N16b74c00
 Dot {
  name Dot49
  xpos 134
  ypos 1504
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.alpha_lines}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_alpha_lines
  label "\[value which]"
  xpos 174
  ypos 1528
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch6
  label "\[value which]"
  xpos 212
  ypos 1670
 }
push $N16addc00
 Dot {
  name Dot14
  xpos 2399
  ypos 709
  hide_input true
 }
push $N16b58c00
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges2
  xpos 2237
  ypos 706
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot11
  xpos 2271
  ypos 931
 }
 Dot {
  name Dot26
  label TILE
  note_font "Verdana Bold"
  xpos 127
  ypos 865
  hide_input true
 }
push $N16b75c00
 Dot {
  name Dot27
  label SHINGLE
  note_font "Verdana Bold"
  xpos 3
  ypos 866
  hide_input true
 }
push $N16addc00
 Dot {
  name Dot22
  xpos 509
  ypos 293
  hide_input true
 }
push $N17b6fc00
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges3
  xpos 375
  ypos 290
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot23
  xpos 409
  ypos 931
 }
push $N16addc00
 Dot {
  name Dot15
  xpos -734
  ypos 831
  hide_input true
 }
push $N16aa7800
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges1
  xpos -868
  ypos 828
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot4
  xpos -834
  ypos 931
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch2
  label "\[value which]"
  xpos 0
  ypos 924
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 0
  ypos 1670
 }
 Switch {
  inputs 6
  which {{preview_edges==1?1:preview_input==1?2:preview_shape==1?3:preview_bricks==1?4:preview_points==1?5:0}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name Switch_output
  label "\[value which]"
  xpos 0
  ypos 1842
 }
 Output {
  name Output1
  xpos 0
  ypos 1905
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xffffffff
  label "<b>Bricks                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos -88
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label ROWS
  note_font "Verdana Bold"
  xpos 3578
  ypos 220
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label COLUMNS
  note_font "Verdana Bold"
  xpos 3753
  ypos 206
 }
 StickyNote {
  inputs 0
  name StickyNote8
  label OFFSET
  note_font "Verdana Bold"
  xpos 3944
  ypos 194
 }
 StickyNote {
  inputs 0
  name StickyNote9
  tile_color 0xffffffff
  label "<b>Shingle                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -180
 }
push $N169ac000
 CurveTool {
  operation "Auto Crop"
  channels rgba
  ROI {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  autocropdata {{curve x1 156} {curve x1 156} {curve x1 345} {curve x1 345}}
  intensitydata {{curve}}
  name CurveTool1
  xpos 1248
  ypos -52
 }
 Reformat {
  inputs 0
  name Reformat_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -45
  ypos -316
 }
 Expression {
  inputs 0
  name MASTER_POINTS
  note_font "Verdana Bold"
  xpos 3773
  ypos 30
  addUserKnob {20 User}
  addUserKnob {3 offsetX}
  offsetX {{parent.offsetX}}
  addUserKnob {3 offsetY}
  offsetY {{parent.offsetY}}
  addUserKnob {26 ""}
  addUserKnob {3 rows}
  rows {{parent.rows}}
  addUserKnob {3 columns}
  columns {{parent.columns}}
  addUserKnob {26 ""}
  addUserKnob {3 offset}
  offset {{parent.offset_shingle}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.random_colors}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.random_every_frame}}
  addUserKnob {26 ""}
  addUserKnob {7 dilate R 0 10}
  dilate {{parent.dilate}}
 }
 Expression {
  inputs 0
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor((y-shift.y)/size)%2 == 0? ((x-shift.x)%dimension_width)/(difference_size*width_brick) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor((y-shift.y)/size)%2 == 0? ((y-shift.y)%dimension_height)/(difference_size) : ((y-shift.y)%dimension_height)/(difference_size)"
  name TILE_MASTER
  note_font "Verdana Bold"
  xpos 2645
  ypos 136
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.shift} {parent.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick l "width brick" R 0 5}
  width_brick {{parent.width_brick}}
  addUserKnob {3 random_value l INVISIBLE +INVISIBLE}
  random_value 59
  addUserKnob {6 vertical +STARTLINE}
  vertical {{!parent.alignment}}
  addUserKnob {6 cross +STARTLINE}
  cross {{parent.cross}}
  addUserKnob {6 mirror +STARTLINE}
  mirror {{parent.mirror}}
 }
push $N16aa7400
push $N17b6fc00
 Viewer {
  inputs 2
  frame_range 11-100
  name Viewer1
  selected true
  xpos -489
  ypos -15
  hide_input true
 }
end_group
clone node14617c67c00|Constant|17452 Constant {
 inputs 0
 channels rgb
 color {0.09594999999 0.2325839549 0.5049999952 0.9999999404}
 name Constant4
 selected true
 xpos 11481
 ypos -119
}
set C17c67c00 [stack 0]
Group {
 inputs 2
 name switch_matte6
 selected true
 xpos 11620
 ypos -95
 addUserKnob {20 User}
 addUserKnob {41 red T ShuffleCopy3.red}
 addUserKnob {41 green T ShuffleCopy3.green}
 addUserKnob {41 blue T ShuffleCopy3.blue}
 addUserKnob {41 alpha T ShuffleCopy3.alpha}
 addUserKnob {41 invert T Premult3.invert}
 addUserKnob {41 disable_1 l Unpremult T Premult3.disable}
 addUserKnob {6 copyBbox l CopyBBox +STARTLINE}
 copyBbox true
}
 Input {
  inputs 0
  name alpha
  xpos 427
  ypos -553
  number 1
 }
set N17cb0000 [stack 0]
push $N17cb0000
 Input {
  inputs 0
  name image
  xpos 307
  ypos -553
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos 358
  ypos -504
 }
 Premult {
  name Premult3
  xpos 358
  ypos -478
 }
set N17cb0c00 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  selected true
  xpos 427
  ypos -436
 }
push $N17cb0c00
 Switch {
  inputs 2
  which {{parent.copyBbox}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos 358
  ypos -404
 }
 Output {
  name Output1
  xpos 355
  ypos -366
 }
end_group
Group {
 inputs 0
 name ProceduralTEXTURE6
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n#works only if knob 'type' is changing.\nif ('type' in k.name()):\n    import nuke\n    #------------------------------------------------------------\n    #LINES\n    if(k.getValue()==0):\n        n\['input'].setVisible(False)\n        n\['preview_input'].setVisible(False)\n        n\['scale'].setVisible(False)\n        n\['shape_width'].setVisible(False)\n        n\['calc_autocrop'].setVisible(False)\n        n\['enable_autocrop'].setVisible(False)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['lines_divider01'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        n\['lines_divider02'].setVisible(True)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n    \n    #BRICKS\n    if(k.getValue()==1):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['bricks_divider01'].setVisible(True)\n        n\['bricks_divider02'].setVisible(True)\n        n\['bricks_divider03'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n        \n    #SHINGLE\n    if(k.getValue()==2):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        n\['shingle_divider01'].setVisible(True)\n        n\['shingle_divider02'].setVisible(True)\n        n\['shingle_divider03'].setVisible(True)\n        n\['shingle_divider04'].setVisible(True)\n        \n        n\['edges'].setVisible(False)\n        n\['preview_edges'].setVisible(False)\n        n\['dilate_edges'].setVisible(False)\n        n\['blur_edges'].setVisible(False)\n        n\['color_edges'].setVisible(False)\n        n\['enable_edges'].setVisible(False)\n        n\['mix_edges'].setVisible(False)\n        n\['edges_divider01'].setVisible(False)\n        \n        \n    #TILE\n    if(k.getValue()==3):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        n\['tile_divider01'].setVisible(True)\n        n\['tile_divider02'].setVisible(True)\n        n\['preview_UV_tile'].setVisible(True)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n     \n    if(k.getValue()==4):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)"
 autolabel "nuke.thisNode().name() + \"\\n\" + '(' + 'type' + ':'+ ' ' + str(nuke.thisNode()\['type'].value()) + ')' "
 tile_color 0x14f5d001
 label STAR
 note_font "Verdana Bold"
 selected true
 xpos 11612
 ypos -300
 addUserKnob {20 ProceduralTexture l "Procedural Texture"}
 addUserKnob {26 text l "" +STARTLINE T "<font size=\"40\"><font color=\"light sea green\">PROCEDURAL <b><font size=\"40\"><font color=\"spring green\">TEXTURE"}
 addUserKnob {26 artist l "" +STARTLINE T "<i><font color=\"silver\">Andrea Geremia"}
 addUserKnob {26 ""}
 addUserKnob {68 type t "Select the operation you want to do:\n\n- Lines. Creates some vertical or horizontal stipes. Decide the colors and thickness\n\n- Bricks. The common way to use this operation is to create walls. Select the shape or connect an image. Combine some nodes to create a more complex texture. It creates a wall using the UV and STMap node. Use this option if you want to create a classic wall of bricks without overlapping\n\n- Shingle. Creates a wall using the Convolve node and points. It allows to create compenetrations between shapes. It's usefull to create alien projectors with hexagons and random colors. \n\n- Tile. Compared to the previous operation, here it's easier to deal with the pictures and their manipulation. It's similar to the ContactSheet node with more controls" M {Lines Bricks Shingle Tile "" "" "" ""}}
 type Bricks
 addUserKnob {26 ""}
 addUserKnob {4 input M {img shape}}
 input shape
 addUserKnob {6 preview_input l "preview input" -STARTLINE}
 addUserKnob {7 scale t "The type Shingle uses the Convolve as technique. If you don't see the correct result, try to reduce a lot the scale, in order of 0.1 "}
 scale 1
 addUserKnob {4 alignment t "Select the alignment of lines" +HIDDEN M {Vertical Horizontal ""}}
 addUserKnob {26 ""}
 addUserKnob {41 format l "output format" T Reformat_CTRL.format}
 addUserKnob {4 alpha_lines l alpha +HIDDEN M {0 1 edges}}
 addUserKnob {4 alpha_bricks l alpha M {0 1 edges input "Wall of Bricks" "" ""}}
 alpha_bricks input
 addUserKnob {4 alpha_shingle l alpha +HIDDEN M {0 1 input points}}
 addUserKnob {4 alpha_tile l alpha +HIDDEN M {0 1 edges input}}
 alpha_tile input
 addUserKnob {26 ""}
 addUserKnob {26 lines l "<b><font color=\"red\">LINES" +HIDDEN}
 addUserKnob {19 color1 +HIDDEN}
 color1 {1 0 0 0}
 addUserKnob {6 color1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 color2 +HIDDEN}
 color2 {0 1 0 0}
 addUserKnob {6 color2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 lines_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 wide +HIDDEN R 0 20}
 wide 10.9
 addUserKnob {7 thickness +HIDDEN R 0 2}
 addUserKnob {7 smooth +HIDDEN R 0 4}
 addUserKnob {6 invert_lines l "invert lines" t "Invert colors and parameters between the two groups of lines" +HIDDEN +STARTLINE}
 invert_lines true
 addUserKnob {26 lines_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 bricks l "<b><font color=\"fuchsia\">BRICKS"}
 addUserKnob {6 preview_bricks l "preview UVMap" +STARTLINE}
 addUserKnob {7 size_bricks l size R 0 100}
 size_bricks 300
 addUserKnob {7 anamorph_bricks l anamorph R 0 6}
 anamorph_bricks 1
 addUserKnob {26 bricks_divider01 l "" +STARTLINE}
 addUserKnob {7 offset_bricks l offset R 0 50}
 addUserKnob {7 scale_bricks l "scale even lines" R 0 6}
 scale_bricks 1
 addUserKnob {26 bricks_divider02 l "" +STARTLINE}
 addUserKnob {20 wall_of_bricks l "Alpha - Wall of Bricks" n 1}
 addUserKnob {3 random_bricks l "random value"}
 random_bricks 86
 addUserKnob {22 generate_random_value l "Random value" -STARTLINE T "import random\nrand_value=random.randint(1,300)\nnuke.thisGroup()\['random_bricks'].setValue(rand_value)"}
 addUserKnob {7 amount_bricks l amount R 0.5 4}
 amount_bricks 1.06
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 bricks_divider03 l "" +STARTLINE}
 addUserKnob {26 tile l "<b><font color=\"yellow\">TILE" +HIDDEN}
 addUserKnob {6 preview_UV_tile l "preview UVMap" +HIDDEN +STARTLINE}
 addUserKnob {12 shift +HIDDEN}
 shift {1045 725}
 addUserKnob {7 size +HIDDEN R 0 100}
 size 100
 addUserKnob {7 offset +HIDDEN R 0 50}
 addUserKnob {26 tile_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 width_brick l "width brick" +HIDDEN R 0 10}
 width_brick 2
 addUserKnob {6 cross t "This option is connected to the Shift values.\nIf you don't see any change, please modify the values of Shift" +HIDDEN +STARTLINE}
 addUserKnob {6 mirror -STARTLINE +HIDDEN}
 addUserKnob {26 tile_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 shingle l "<font color=\"chocolate\"><b>SHINGLE" +HIDDEN}
 addUserKnob {6 preview_points l "preview Points" +HIDDEN +STARTLINE}
 addUserKnob {3 offsetX +HIDDEN}
 offsetX 100
 addUserKnob {3 offsetY -STARTLINE +HIDDEN}
 offsetY 100
 addUserKnob {26 shingle_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 message_shingle l "" +STARTLINE +HIDDEN T "<i>Print every:"}
 addUserKnob {3 rows +HIDDEN}
 rows 1
 addUserKnob {3 columns -STARTLINE +HIDDEN}
 columns 1
 addUserKnob {26 shingle_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 offset_shingle l offset +HIDDEN}
 addUserKnob {26 shingle_divider03 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 gain +HIDDEN R 0 10}
 gain 1
 addUserKnob {7 dilate l "dilate points" +HIDDEN R 0 20}
 dilate 6
 addUserKnob {6 random_colors l "random colors" +HIDDEN +STARTLINE}
 random_colors true
 addUserKnob {6 random_every_frame l "random colors every frame" +HIDDEN +STARTLINE}
 random_every_frame true
 addUserKnob {26 shingle_divider04 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 edges l "<b><font color=\"aqua\">Edges"}
 addUserKnob {6 preview_edges l "preview edges" +STARTLINE}
 addUserKnob {7 dilate_edges l dilate R -10 10}
 addUserKnob {7 blur_edges l blur R 0 5}
 addUserKnob {18 color_edges l color}
 color_edges {0.015951 0.584199 0.959849}
 addUserKnob {6 color_edges_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 edges_divider01 l "" +STARTLINE}
 addUserKnob {6 enable_edges l "enable edges" +STARTLINE}
 addUserKnob {7 mix_edges l "" -STARTLINE}
 mix_edges 1
 addUserKnob {20 shape l Shape}
 addUserKnob {6 preview_shape l "preview shape" +STARTLINE}
 addUserKnob {3 shape_width l width/height}
 shape_width 500
 addUserKnob {22 calc_autocrop l "Calc Auto Crop" -STARTLINE T "n=nuke.thisNode()\nn.node('CurveTool1')\['go'].execute()"}
 addUserKnob {6 enable_autocrop l "enable autocrop" -STARTLINE}
 enable_autocrop true
 addUserKnob {26 shape_1 l "<font color=darkorange><b>SHAPE"}
 addUserKnob {41 corners T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle T Flare1.corners_angle}
 addUserKnob {41 corner_angle_add l rel -STARTLINE T Flare1.corner_angle_add}
 addUserKnob {26 size_1 l "<font color=darkcyan><b>SIZE"}
 addUserKnob {41 radius T Flare1.radius}
 addUserKnob {41 size_mult l "size mult" T Flare1.size_mult}
 addUserKnob {41 anamorph T Flare1.anamorph}
 addUserKnob {26 visibility l "<font color=deepskyblue><b>VISIBILITY"}
 addUserKnob {41 brightness T Flare1.brightness}
 addUserKnob {41 vis_in l in T Flare1.vis_in}
 addUserKnob {41 vis_out l out T Flare1.vis_out}
 addUserKnob {26 colors l "<font color=deeppink><b>COLORS"}
 addUserKnob {41 ring_color l "ring color" T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" T Flare1.inner_falloff}
 addUserKnob {26 color_shift l "<font color=lightpink><b>COLOR SHIFT"}
 addUserKnob {41 chroma_spread l "chroma spread" T Flare1.chroma_spread}
 addUserKnob {41 chroma_shift l "chroma shift" T Flare1.chroma_shift}
 addUserKnob {41 chroma_shift_angle l angle T Flare1.chroma_shift_angle}
 addUserKnob {41 chroma_shift_angle_add l rel -STARTLINE T Flare1.chroma_shift_angle_add}
 addUserKnob {26 asimmetry l "<font color=greenyellow><b>ASIMMETRY"}
 addUserKnob {41 asym_repeat l repeat T Flare1.asym_repeat}
 addUserKnob {41 asym_multiplier l multiplier T Flare1.asym_multiplier}
 addUserKnob {41 asym_falloff l falloff T Flare1.asym_falloff}
 addUserKnob {41 asym_angle l angle T Flare1.asym_angle}
 addUserKnob {41 asym_angle_add l rel -STARTLINE T Flare1.asym_angle_add}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x472b5901
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 126
  bookmark false
  bdwidth 703
  bdheight 641
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x44513501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 2005
  ypos 50
  bookmark false
  bdwidth 823
  bdheight 734
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x56193501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 296
  bookmark false
  bdwidth 365
  bdheight 931
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x71c67100
  label img
  note_font_size 42
  xpos 913
  ypos -178
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x71c67100
  label shape
  note_font_size 42
  xpos 1087
  ypos -180
  bdwidth 278
  bdheight 371
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x665e7201
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos 37
  bookmark false
  bdwidth 244
  bdheight 331
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x387c9901
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -55
  bookmark false
  bdwidth 588
  bdheight 781
 }
 Expression {
  inputs 0
  name Lines_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -839
  ypos 194
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.smooth}}
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xffffffff
  label "<b>Lines                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 56
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xffffffff
  label "<b>Tile                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos 2005
  ypos -15
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xffffffff
  label "<b>Edges                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 171
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat8
  xpos 3798
  ypos 104
 }
 Dot {
  name Dot34
  xpos 3832
  ypos 196
 }
set N17d11000 [stack 0]
 Expression {
  expr0 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression16
  xpos 3975
  ypos 261
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N17d11000
 Expression {
  expr0 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression1
  xpos 3871
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot28
  xpos 3905
  ypos 324
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 3975
  ypos 321
 }
 Dot {
  name Dot29
  xpos 4009
  ypos 500
 }
push $N17d11000
 Expression {
  expr0 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression8
  xpos 3739
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {7 offset R 0 50}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l random_colors +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N17d11000
 Expression {
  expr0 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain : 0:0"
  expr1 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain : 0:0"
  expr2 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain : 0:0"
  expr3 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? 1 : 0:0"
  name Expression9
  xpos 3575
  ypos 268
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot30
  xpos 3609
  ypos 500
 }
 Switch {
  inputs 3
  which {{"parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns == 1 ? 0 : parent.MASTER_POINTS.rows == 1 && parent.MASTER_POINTS.columns != 1 ? 1 : parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns != 1 ? 2 : 2"}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch5
  label "\[value which]"
  xpos 3739
  ypos 493
 }
 Dilate {
  size {{parent.MASTER_POINTS.dilate}}
  name Dilate14
  label "\[value size]"
  xpos 3739
  ypos 546
 }
set N17d3b400 [stack 0]
 Dot {
  name Dot33
  label POINTS
  note_font "Verdana Bold"
  note_font_size 13
  xpos -17
  ypos 1753
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat5
  xpos 375
  ypos 122
 }
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(y/size)%2 == 0? (x%(dimension_width*scale))/(difference_size*width_brick*scale) : ((x+offset)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(y/size)%2 == 0? (y%dimension_height)/(difference_size) : ((y)%dimension_height)/(difference_size)"
  name Expression18
  xpos 375
  ypos 173
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.size_bricks}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset_bricks}}
  addUserKnob {7 scale R 0 6}
  scale {{parent.scale_bricks}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.anamorph_bricks}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
 }
set N17d74400 [stack 0]
 Dot {
  name Dot32
  label "UV MAP"
  note_font "Verdana Bold"
  note_font_size 16
  xpos 80
  ypos 1765
  hide_input true
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{parent.shape_width}}
  box_height {{box_width}}
  box_fixed true
  name Reformat6
  xpos 1097
  ypos -96
 }
 Flare {
  position {{parent.Reformat6.box_width/2} {parent.Reformat6.box_width/2}}
  radius {0 100 100}
  inner_color 1
  vis_in 1.05
  vis_out 1.105
  vis_mask_size 1
  corners 4
  flattening 13
  sharpness 0.82
  asym_repeat 0
  asym_multiplier 0.04
  asym_falloff 1.5
  asym_angle -34
  name Flare1
  xpos 1097
  ypos -52
 }
set N17d75400 [stack 0]
 Crop {
  box {{parent.CurveTool1.autocropdata.x} {parent.CurveTool1.autocropdata.y} {parent.CurveTool1.autocropdata.r} {parent.CurveTool1.autocropdata.t}}
  reformat true
  name Crop1
  xpos 1098
  ypos -32
  disable {{!parent.enable_autocrop}}
 }
 Median {
  size 2
  ignore_top_line false
  name Median1
  xpos 1097
  ypos -8
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle4
  tile_color 0x93000000
  xpos 1097
  ypos 34
 }
 Transform {
  center {{parent.Reformat6.box_width/2} {parent.Reformat6.box_height/2}}
  shutteroffset centred
  name Transform1
  xpos 1097
  ypos 58
  disable true
 }
 Expression {
  expr3 "(r || g || b) != 0 ? 1 : 0"
  name Expression2
  xpos 1097
  ypos 82
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  tile_color 0xffffffff
  xpos 1097
  ypos 106
 }
set N17da9000 [stack 0]
 Dot {
  name Dot25
  label SHAPE
  note_font "Verdana Bold"
  note_font_size 12
  xpos -66
  ypos 1793
  hide_input true
 }
push $N17da9000
 Dot {
  name Dot50
  xpos 1131
  ypos 154
 }
 Input {
  inputs 0
  name img
  xpos 923
  ypos -98
 }
 Switch {
  inputs 2
  which {{parent.input}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch4
  label "\[value which]"
  xpos 923
  ypos 147
 }
 Transform {
  scale {{parent.scale}}
  center {1024 778}
  shutteroffset centred
  name Transform4
  xpos 923
  ypos 194
 }
 Dot {
  name Dot19
  xpos 957
  ypos 232
 }
set N17dde400 [stack 0]
 Dot {
  name Dot24
  label INPUT
  note_font "Verdana Bold"
  note_font_size 15
  xpos 128
  ypos 1793
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat3
  xpos 2284
  ypos 135
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat_Vertical
  xpos 2284
  ypos 170
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot10
  xpos 2318
  ypos 198
 }
set N17ddfc00 [stack 0]
 Dot {
  name Dot5
  xpos 2318
  ypos 216
 }
set N17e02000 [stack 0]
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x)>0 ? floor((y-shift.y)/size)%2 == 0 ? (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)) : floor((y-shift.y)/size)%2 == 0? 1 + (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : 1 +  ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick))"
  name Offset_red
  tile_color 0xff000001
  xpos 2237
  ypos 286
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot12
  xpos 2271
  ypos 334
 }
set N17e02800 [stack 0]
push $N17e02000
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y)>0 ? floor((y-shift.y)/size)%2 == 0? (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) :  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size)) : floor((y-shift.y)/size)%2 == 0? 1+ (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) : 1+  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size))"
  name Offset_green
  tile_color 0xff0001
  xpos 2361
  ypos 285
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift x1 789} {parent.TILE_MASTER.shift x1 1005}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
set N17e02c00 [stack 0]
 Dot {
  name Dot6
  xpos 2622
  ypos 288
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos 2588
  ypos 331
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform2
  xpos 2588
  ypos 373
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat2
  xpos 2588
  ypos 397
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot16
  label TILE
  xpos 5135
  ypos 410
  hide_input true
 }
push $N17d74400
 Dot {
  name Dot21
  label BRICKS
  xpos 4939
  ypos 411
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat1
  xpos -1146
  ypos 152
 }
set N17e36c00 [stack 0]
 Dot {
  name Dot1
  xpos -986
  ypos 155
 }
 Expression {
  expr0 "( cos(y / wide ) + thickness ) / smooth"
  expr1 "( cos(y / wide ) + thickness ) / smooth"
  expr2 "( cos(y / wide ) + thickness ) / smooth"
  expr3 "( cos(y / wide ) + thickness ) / smooth"
  name Lines_horizontal
  xpos -1020
  ypos 211
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
push $N17e36c00
 Expression {
  expr0 "( sin(x / wide ) + thickness ) / smooth"
  expr1 "( sin(x / wide ) + thickness ) / smooth"
  expr2 "( sin(x / wide ) + thickness ) / smooth"
  expr3 "( sin(x / wide ) + thickness ) / smooth"
  name Lines_vertical
  xpos -1146
  ypos 298
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
 Switch {
  inputs 2
  which {{parent.alignment}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos -1020
  ypos 294
 }
 Clamp {
  name Clamp1
  xpos -1020
  ypos 326
 }
 Invert {
  name Invert2
  xpos -1020
  ypos 358
  disable {{!parent.invert_lines}}
 }
set N17e68400 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {{parent.color1.r} {parent.color1.g} {parent.color1.b} {parent.color1.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant1
  xpos -868
  ypos 263
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -868
  ypos 355
 }
 Premult {
  name Premult1
  xpos -868
  ypos 387
 }
 Dot {
  name Dot2
  xpos -721
  ypos 390
 }
 Dot {
  name Dot3
  xpos -721
  ypos 720
 }
push $N17e68400
 Invert {
  name Invert1
  xpos -1020
  ypos 576
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color2.r} {parent.color2.g} {parent.color2.b} {parent.color2.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant2
  xpos -868
  ypos 483
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -868
  ypos 576
 }
 Premult {
  name Premult2
  xpos -868
  ypos 608
 }
set N17ea4800 [stack 0]
 Merge2 {
  inputs 2
  name Merge1
  xpos -868
  ypos 717
 }
set N17ea4c00 [stack 0]
 Dot {
  name Dot17
  label LINES
  xpos 5030
  ypos 392
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_input
  label "\[value which]"
  xpos 4996
  ypos 442
 }
 EdgeDetectWrapper {
  threshold 0.18
  name EdgeDetect2
  xpos 4996
  ypos 485
 }
 Dilate {
  size {{parent.dilate_edges}}
  name Dilate1
  label "\[value size]"
  xpos 4996
  ypos 517
 }
 Blur {
  size {{parent.blur_edges}}
  name Blur2
  label "\[value size]"
  xpos 4996
  ypos 559
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  tile_color 0xffffffff
  xpos 4996
  ypos 601
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color_edges} {parent.color_edges} {parent.color_edges} {parent.color_edges}}
  name Constant3
  xpos 5136
  ypos 605
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 4996
  ypos 625
 }
 Premult {
  name Premult3
  xpos 4996
  ypos 657
 }
 Dot {
  name Dot7
  label "do not delete"
  xpos 5030
  ypos 709
 }
set N17ee1000 [stack 0]
 Dot {
  name Dot13
  xpos 5030
  ypos 1849
 }
set N17ee1400 [stack 0]
push $N17ddfc00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(abs(y-shift.y)/size)%2 == 0? (abs(x-shift.x)%dimension_width)/(difference_size*width_brick) : (abs(x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(abs(y-shift.y)/size)%2 == 0? (abs(y-shift.y)%dimension_height)/(difference_size) : (abs(y-shift.y)%dimension_height)/(difference_size)"
  name CROSS
  xpos 2015
  ypos 277
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot8
  xpos 2049
  ypos 507
 }
push $N17e02c00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y>=0?0:1) + fmod(int((y-shift.y)/dimension_height),2)!=0?1-g:g"
  name Mirror_green
  tile_color 0xff0001
  xpos 2361
  ypos 373
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot9
  xpos 2395
  ypos 414
 }
push $N17e02800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x>=0?0:1) + fmod(int((x-shift.x)/dimension_width),2)!=0?1-r:r"
  name Mirror_red
  tile_color 0xff000001
  xpos 2237
  ypos 371
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 2237
  ypos 411
 }
 Switch {
  inputs 2
  which {{parent.TILE_MASTER.cross}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch3
  label "\[value which]"
  xpos 2237
  ypos 500
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform3
  xpos 2237
  ypos 532
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat7
  xpos 2237
  ypos 556
  disable {{!parent.TILE_MASTER.vertical}}
 }
push $N17dde400
 Dot {
  name Dot18
  xpos 957
  ypos 659
 }
 STMap {
  inputs 2
  uv rgba
  name STMap2
  xpos 2237
  ypos 652
 }
set N17f50000 [stack 0]
 Dot {
  name Dot38
  label "INPUT TILE"
  note_font "Verdana Bold"
  xpos 691
  ypos 1608
  hide_input true
 }
push $N17ee1400
 Dot {
  name Dot20
  label EDGES
  note_font "Verdana Bold"
  note_font_size 13
  xpos 245
  ypos 1483
  hide_input true
 }
set N17f50800 [stack 0]
 Dot {
  name Dot39
  xpos 643
  ypos 1598
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat4
  xpos 213
  ypos 1358
 }
set N17f51000 [stack 0]
 Shuffle {
  alpha white
  name Shuffle3
  tile_color 0xffffff01
  label "\[value in]"
  xpos 213
  ypos 1408
 }
set N17f51800 [stack 0]
 Dot {
  name Dot40
  xpos 592
  ypos 1595
  hide_input true
 }
push $N17f51000
 Shuffle {
  alpha black
  name Shuffle2
  tile_color 0xff
  label "\[value in]"
  xpos 100
  ypos 1414
 }
set N17f70000 [stack 0]
 Dot {
  name Dot41
  xpos 554
  ypos 1622
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_tile}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_tile
  label "\[value which]"
  xpos 597
  ypos 1640
 }
push $N17d3b400
 Dot {
  name Dot37
  label POINTS
  note_font "Verdana Bold"
  xpos 524
  ypos 1548
  hide_input true
 }
push $N17dde400
 Dot {
  name Dot31
  label INPUT
  note_font "Verdana Bold"
  note_font_size 17
  xpos 3895
  ypos 637
  hide_input true
 }
push $N17d3b400
 Convolve2 {
  inputs 2
  useGPUIfAvailable false
  use_input_channels true
  name Convolve1
  xpos 3739
  ypos 630
 }
set N17f71000 [stack 0]
 Dot {
  name Dot36
  label "INPUT POINTS"
  note_font "Verdana Bold"
  note_font_size 13
  xpos 487
  ypos 1532
  hide_input true
 }
push $N17f51800
 Dot {
  name Dot42
  xpos 446
  ypos 1530
  hide_input true
 }
push $N17f70000
 Dot {
  name Dot43
  xpos 401
  ypos 1544
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_shingle}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_points
  label "\[value which]"
  xpos 424
  ypos 1573
 }
push $N17f51000
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  channel0 {rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green rgba.blue none}
  expr3 "floor(y/size)%2 == 0 ? rint(amount*random((floor((x)/(dimension_width*scale))+random_value)*(floor(y/dimension_height)+random_value)*random_value)) : rint(amount*random((floor((x+offset)/(dimension_width))/(difference_size*width_brick)+random_value)*(floor(y/dimension_height)+random_value)*random_value))"
  name Expression22
  xpos 385
  ypos 1396
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.Expression18.size}}
  addUserKnob {7 scale R 0 10}
  scale {{parent.Expression18.scale}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.Expression18.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.Expression18.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
  addUserKnob {7 amount R 0.5 6}
  amount {{parent.amount_bricks}}
 }
 Clamp {
  name Clamp2
  xpos 385
  ypos 1420
 }
 Dot {
  name Dot44
  xpos 389
  ypos 1511
  hide_input true
 }
push $N17d74400
push $N17dde400
 STMap {
  inputs 2
  channels rgba
  uv rgba
  filter sinc4
  name STMap1
  xpos 375
  ypos 229
 }
set N17f97000 [stack 0]
 Dot {
  name Dot35
  label "INPUT BRICKS"
  note_font_size 14
  xpos 326
  ypos 1487
  hide_input true
 }
push $N17f50800
 Dot {
  name Dot47
  xpos 361
  ypos 1493
  hide_input true
 }
push $N17f51800
 Dot {
  name Dot45
  xpos 296
  ypos 1499
  hide_input true
 }
push $N17f70000
 Dot {
  name Dot46
  xpos 262
  ypos 1515
  hide_input true
 }
 Switch {
  inputs 5
  which {{parent.alpha_bricks}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name Switch_alpha_bricks
  label "\[value which]"
  xpos 300
  ypos 1550
 }
push $N17f50800
push $N17f51800
 Dot {
  name Dot48
  xpos 189
  ypos 1486
  hide_input true
 }
push $N17f70000
 Dot {
  name Dot49
  xpos 134
  ypos 1504
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.alpha_lines}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_alpha_lines
  label "\[value which]"
  xpos 174
  ypos 1528
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch6
  label "\[value which]"
  xpos 212
  ypos 1670
 }
push $N17ee1000
 Dot {
  name Dot14
  xpos 2399
  ypos 709
  hide_input true
 }
push $N17f50000
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges2
  xpos 2237
  ypos 706
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot11
  xpos 2271
  ypos 931
 }
 Dot {
  name Dot26
  label TILE
  note_font "Verdana Bold"
  xpos 127
  ypos 865
  hide_input true
 }
push $N17f71000
 Dot {
  name Dot27
  label SHINGLE
  note_font "Verdana Bold"
  xpos 3
  ypos 866
  hide_input true
 }
push $N17ee1000
 Dot {
  name Dot22
  xpos 509
  ypos 293
  hide_input true
 }
push $N17f97000
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges3
  xpos 375
  ypos 290
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot23
  xpos 409
  ypos 931
 }
push $N17ee1000
 Dot {
  name Dot15
  xpos -734
  ypos 831
  hide_input true
 }
push $N17ea4c00
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges1
  xpos -868
  ypos 828
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot4
  xpos -834
  ypos 931
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch2
  label "\[value which]"
  xpos 0
  ypos 924
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 0
  ypos 1670
 }
 Switch {
  inputs 6
  which {{preview_edges==1?1:preview_input==1?2:preview_shape==1?3:preview_bricks==1?4:preview_points==1?5:0}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name Switch_output
  label "\[value which]"
  xpos 0
  ypos 1842
 }
 Output {
  name Output1
  xpos 0
  ypos 1905
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xffffffff
  label "<b>Bricks                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos -88
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label ROWS
  note_font "Verdana Bold"
  xpos 3578
  ypos 220
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label COLUMNS
  note_font "Verdana Bold"
  xpos 3753
  ypos 206
 }
 StickyNote {
  inputs 0
  name StickyNote8
  label OFFSET
  note_font "Verdana Bold"
  xpos 3944
  ypos 194
 }
 StickyNote {
  inputs 0
  name StickyNote9
  tile_color 0xffffffff
  label "<b>Shingle                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -180
 }
push $N17d75400
 CurveTool {
  operation "Auto Crop"
  channels rgba
  ROI {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  autocropdata {{curve x1 156} {curve x1 156} {curve x1 345} {curve x1 345}}
  intensitydata {{curve}}
  name CurveTool1
  xpos 1248
  ypos -52
 }
 Reformat {
  inputs 0
  name Reformat_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -45
  ypos -316
 }
 Expression {
  inputs 0
  name MASTER_POINTS
  note_font "Verdana Bold"
  xpos 3773
  ypos 30
  addUserKnob {20 User}
  addUserKnob {3 offsetX}
  offsetX {{parent.offsetX}}
  addUserKnob {3 offsetY}
  offsetY {{parent.offsetY}}
  addUserKnob {26 ""}
  addUserKnob {3 rows}
  rows {{parent.rows}}
  addUserKnob {3 columns}
  columns {{parent.columns}}
  addUserKnob {26 ""}
  addUserKnob {3 offset}
  offset {{parent.offset_shingle}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.random_colors}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.random_every_frame}}
  addUserKnob {26 ""}
  addUserKnob {7 dilate R 0 10}
  dilate {{parent.dilate}}
 }
 Expression {
  inputs 0
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor((y-shift.y)/size)%2 == 0? ((x-shift.x)%dimension_width)/(difference_size*width_brick) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor((y-shift.y)/size)%2 == 0? ((y-shift.y)%dimension_height)/(difference_size) : ((y-shift.y)%dimension_height)/(difference_size)"
  name TILE_MASTER
  note_font "Verdana Bold"
  xpos 2645
  ypos 136
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.shift} {parent.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick l "width brick" R 0 5}
  width_brick {{parent.width_brick}}
  addUserKnob {3 random_value l INVISIBLE +INVISIBLE}
  random_value 59
  addUserKnob {6 vertical +STARTLINE}
  vertical {{!parent.alignment}}
  addUserKnob {6 cross +STARTLINE}
  cross {{parent.cross}}
  addUserKnob {6 mirror +STARTLINE}
  mirror {{parent.mirror}}
 }
push $N17ea4800
push $N17f97000
 Viewer {
  inputs 2
  frame_range 11-100
  name Viewer1
  selected true
  xpos -489
  ypos -15
  hide_input true
 }
end_group
clone node14618095000|Constant|17452 Constant {
 inputs 0
 channels rgb
 color 1
 name Constant9
 selected true
 xpos 11473
 ypos -259
}
set C18095000 [stack 0]
Group {
 inputs 2
 name switch_matte1
 selected true
 xpos 11612
 ypos -235
 addUserKnob {20 User}
 addUserKnob {41 red T ShuffleCopy3.red}
 addUserKnob {41 green T ShuffleCopy3.green}
 addUserKnob {41 blue T ShuffleCopy3.blue}
 addUserKnob {41 alpha T ShuffleCopy3.alpha}
 addUserKnob {41 invert T Premult3.invert}
 addUserKnob {41 disable_1 l Unpremult T Premult3.disable}
 addUserKnob {6 copyBbox l CopyBBox +STARTLINE}
 copyBbox true
}
 Input {
  inputs 0
  name alpha
  xpos 427
  ypos -553
  number 1
 }
set N18095400 [stack 0]
push $N18095400
 Input {
  inputs 0
  name image
  xpos 307
  ypos -553
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos 358
  ypos -504
 }
 Premult {
  name Premult3
  xpos 358
  ypos -478
 }
set N180e0000 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  selected true
  xpos 427
  ypos -436
 }
push $N180e0000
 Switch {
  inputs 2
  which {{parent.copyBbox}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos 358
  ypos -404
 }
 Output {
  name Output1
  xpos 355
  ypos -366
 }
end_group
Group {
 inputs 0
 name ProceduralTEXTURE1
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n#works only if knob 'type' is changing.\nif ('type' in k.name()):\n    import nuke\n    #------------------------------------------------------------\n    #LINES\n    if(k.getValue()==0):\n        n\['input'].setVisible(False)\n        n\['preview_input'].setVisible(False)\n        n\['scale'].setVisible(False)\n        n\['shape_width'].setVisible(False)\n        n\['calc_autocrop'].setVisible(False)\n        n\['enable_autocrop'].setVisible(False)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['lines_divider01'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        n\['lines_divider02'].setVisible(True)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n    \n    #BRICKS\n    if(k.getValue()==1):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['bricks_divider01'].setVisible(True)\n        n\['bricks_divider02'].setVisible(True)\n        n\['bricks_divider03'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n        \n    #SHINGLE\n    if(k.getValue()==2):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        n\['shingle_divider01'].setVisible(True)\n        n\['shingle_divider02'].setVisible(True)\n        n\['shingle_divider03'].setVisible(True)\n        n\['shingle_divider04'].setVisible(True)\n        \n        n\['edges'].setVisible(False)\n        n\['preview_edges'].setVisible(False)\n        n\['dilate_edges'].setVisible(False)\n        n\['blur_edges'].setVisible(False)\n        n\['color_edges'].setVisible(False)\n        n\['enable_edges'].setVisible(False)\n        n\['mix_edges'].setVisible(False)\n        n\['edges_divider01'].setVisible(False)\n        \n        \n    #TILE\n    if(k.getValue()==3):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        n\['tile_divider01'].setVisible(True)\n        n\['tile_divider02'].setVisible(True)\n        n\['preview_UV_tile'].setVisible(True)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n     \n    if(k.getValue()==4):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)"
 autolabel "nuke.thisNode().name() + \"\\n\" + '(' + 'type' + ':'+ ' ' + str(nuke.thisNode()\['type'].value()) + ')' "
 tile_color 0x14f5d001
 label STAR
 note_font "Verdana Bold"
 selected true
 xpos 11607
 ypos -452
 addUserKnob {20 ProceduralTexture l "Procedural Texture"}
 addUserKnob {26 text l "" +STARTLINE T "<font size=\"40\"><font color=\"light sea green\">PROCEDURAL <b><font size=\"40\"><font color=\"spring green\">TEXTURE"}
 addUserKnob {26 artist l "" +STARTLINE T "<i><font color=\"silver\">Andrea Geremia"}
 addUserKnob {26 ""}
 addUserKnob {68 type t "Select the operation you want to do:\n\n- Lines. Creates some vertical or horizontal stipes. Decide the colors and thickness\n\n- Bricks. The common way to use this operation is to create walls. Select the shape or connect an image. Combine some nodes to create a more complex texture. It creates a wall using the UV and STMap node. Use this option if you want to create a classic wall of bricks without overlapping\n\n- Shingle. Creates a wall using the Convolve node and points. It allows to create compenetrations between shapes. It's usefull to create alien projectors with hexagons and random colors. \n\n- Tile. Compared to the previous operation, here it's easier to deal with the pictures and their manipulation. It's similar to the ContactSheet node with more controls" M {Lines Bricks Shingle Tile "" "" "" ""}}
 type Bricks
 addUserKnob {26 ""}
 addUserKnob {4 input M {img shape}}
 input shape
 addUserKnob {6 preview_input l "preview input" -STARTLINE}
 addUserKnob {7 scale t "The type Shingle uses the Convolve as technique. If you don't see the correct result, try to reduce a lot the scale, in order of 0.1 "}
 scale 1
 addUserKnob {4 alignment t "Select the alignment of lines" +HIDDEN M {Vertical Horizontal ""}}
 addUserKnob {26 ""}
 addUserKnob {41 format l "output format" T Reformat_CTRL.format}
 addUserKnob {4 alpha_lines l alpha +HIDDEN M {0 1 edges}}
 addUserKnob {4 alpha_bricks l alpha M {0 1 edges input "Wall of Bricks" "" ""}}
 alpha_bricks input
 addUserKnob {4 alpha_shingle l alpha +HIDDEN M {0 1 input points}}
 addUserKnob {4 alpha_tile l alpha +HIDDEN M {0 1 edges input}}
 alpha_tile input
 addUserKnob {26 ""}
 addUserKnob {26 lines l "<b><font color=\"red\">LINES" +HIDDEN}
 addUserKnob {19 color1 +HIDDEN}
 color1 {1 0 0 0}
 addUserKnob {6 color1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 color2 +HIDDEN}
 color2 {0 1 0 0}
 addUserKnob {6 color2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 lines_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 wide +HIDDEN R 0 20}
 wide 10.9
 addUserKnob {7 thickness +HIDDEN R 0 2}
 addUserKnob {7 smooth +HIDDEN R 0 4}
 addUserKnob {6 invert_lines l "invert lines" t "Invert colors and parameters between the two groups of lines" +HIDDEN +STARTLINE}
 invert_lines true
 addUserKnob {26 lines_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 bricks l "<b><font color=\"fuchsia\">BRICKS"}
 addUserKnob {6 preview_bricks l "preview UVMap" +STARTLINE}
 addUserKnob {7 size_bricks l size R 0 100}
 size_bricks 300
 addUserKnob {7 anamorph_bricks l anamorph R 0 6}
 anamorph_bricks 1
 addUserKnob {26 bricks_divider01 l "" +STARTLINE}
 addUserKnob {7 offset_bricks l offset R 0 50}
 addUserKnob {7 scale_bricks l "scale even lines" R 0 6}
 scale_bricks 1
 addUserKnob {26 bricks_divider02 l "" +STARTLINE}
 addUserKnob {20 wall_of_bricks l "Alpha - Wall of Bricks" n 1}
 addUserKnob {3 random_bricks l "random value"}
 random_bricks 86
 addUserKnob {22 generate_random_value l "Random value" -STARTLINE T "import random\nrand_value=random.randint(1,300)\nnuke.thisGroup()\['random_bricks'].setValue(rand_value)"}
 addUserKnob {7 amount_bricks l amount R 0.5 4}
 amount_bricks 1.06
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 bricks_divider03 l "" +STARTLINE}
 addUserKnob {26 tile l "<b><font color=\"yellow\">TILE" +HIDDEN}
 addUserKnob {6 preview_UV_tile l "preview UVMap" +HIDDEN +STARTLINE}
 addUserKnob {12 shift +HIDDEN}
 shift {1045 725}
 addUserKnob {7 size +HIDDEN R 0 100}
 size 100
 addUserKnob {7 offset +HIDDEN R 0 50}
 addUserKnob {26 tile_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 width_brick l "width brick" +HIDDEN R 0 10}
 width_brick 2
 addUserKnob {6 cross t "This option is connected to the Shift values.\nIf you don't see any change, please modify the values of Shift" +HIDDEN +STARTLINE}
 addUserKnob {6 mirror -STARTLINE +HIDDEN}
 addUserKnob {26 tile_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 shingle l "<font color=\"chocolate\"><b>SHINGLE" +HIDDEN}
 addUserKnob {6 preview_points l "preview Points" +HIDDEN +STARTLINE}
 addUserKnob {3 offsetX +HIDDEN}
 offsetX 100
 addUserKnob {3 offsetY -STARTLINE +HIDDEN}
 offsetY 100
 addUserKnob {26 shingle_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 message_shingle l "" +STARTLINE +HIDDEN T "<i>Print every:"}
 addUserKnob {3 rows +HIDDEN}
 rows 1
 addUserKnob {3 columns -STARTLINE +HIDDEN}
 columns 1
 addUserKnob {26 shingle_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 offset_shingle l offset +HIDDEN}
 addUserKnob {26 shingle_divider03 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 gain +HIDDEN R 0 10}
 gain 1
 addUserKnob {7 dilate l "dilate points" +HIDDEN R 0 20}
 dilate 6
 addUserKnob {6 random_colors l "random colors" +HIDDEN +STARTLINE}
 random_colors true
 addUserKnob {6 random_every_frame l "random colors every frame" +HIDDEN +STARTLINE}
 random_every_frame true
 addUserKnob {26 shingle_divider04 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 edges l "<b><font color=\"aqua\">Edges"}
 addUserKnob {6 preview_edges l "preview edges" +STARTLINE}
 addUserKnob {7 dilate_edges l dilate R -10 10}
 addUserKnob {7 blur_edges l blur R 0 5}
 addUserKnob {18 color_edges l color}
 color_edges {0.015951 0.584199 0.959849}
 addUserKnob {6 color_edges_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 edges_divider01 l "" +STARTLINE}
 addUserKnob {6 enable_edges l "enable edges" +STARTLINE}
 addUserKnob {7 mix_edges l "" -STARTLINE}
 mix_edges 1
 addUserKnob {20 shape l Shape}
 addUserKnob {6 preview_shape l "preview shape" +STARTLINE}
 addUserKnob {3 shape_width l width/height}
 shape_width 500
 addUserKnob {22 calc_autocrop l "Calc Auto Crop" -STARTLINE T "n=nuke.thisNode()\nn.node('CurveTool1')\['go'].execute()"}
 addUserKnob {6 enable_autocrop l "enable autocrop" -STARTLINE}
 enable_autocrop true
 addUserKnob {26 shape_1 l "<font color=darkorange><b>SHAPE"}
 addUserKnob {41 corners T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle T Flare1.corners_angle}
 addUserKnob {41 corner_angle_add l rel -STARTLINE T Flare1.corner_angle_add}
 addUserKnob {26 size_1 l "<font color=darkcyan><b>SIZE"}
 addUserKnob {41 radius T Flare1.radius}
 addUserKnob {41 size_mult l "size mult" T Flare1.size_mult}
 addUserKnob {41 anamorph T Flare1.anamorph}
 addUserKnob {26 visibility l "<font color=deepskyblue><b>VISIBILITY"}
 addUserKnob {41 brightness T Flare1.brightness}
 addUserKnob {41 vis_in l in T Flare1.vis_in}
 addUserKnob {41 vis_out l out T Flare1.vis_out}
 addUserKnob {26 colors l "<font color=deeppink><b>COLORS"}
 addUserKnob {41 ring_color l "ring color" T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" T Flare1.inner_falloff}
 addUserKnob {26 color_shift l "<font color=lightpink><b>COLOR SHIFT"}
 addUserKnob {41 chroma_spread l "chroma spread" T Flare1.chroma_spread}
 addUserKnob {41 chroma_shift l "chroma shift" T Flare1.chroma_shift}
 addUserKnob {41 chroma_shift_angle l angle T Flare1.chroma_shift_angle}
 addUserKnob {41 chroma_shift_angle_add l rel -STARTLINE T Flare1.chroma_shift_angle_add}
 addUserKnob {26 asimmetry l "<font color=greenyellow><b>ASIMMETRY"}
 addUserKnob {41 asym_repeat l repeat T Flare1.asym_repeat}
 addUserKnob {41 asym_multiplier l multiplier T Flare1.asym_multiplier}
 addUserKnob {41 asym_falloff l falloff T Flare1.asym_falloff}
 addUserKnob {41 asym_angle l angle T Flare1.asym_angle}
 addUserKnob {41 asym_angle_add l rel -STARTLINE T Flare1.asym_angle_add}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x472b5901
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 126
  bookmark false
  bdwidth 703
  bdheight 641
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x44513501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 2005
  ypos 50
  bookmark false
  bdwidth 823
  bdheight 734
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x56193501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 296
  bookmark false
  bdwidth 365
  bdheight 931
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x71c67100
  label img
  note_font_size 42
  xpos 913
  ypos -178
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x71c67100
  label shape
  note_font_size 42
  xpos 1087
  ypos -180
  bdwidth 278
  bdheight 371
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x665e7201
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos 37
  bookmark false
  bdwidth 244
  bdheight 331
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x387c9901
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -55
  bookmark false
  bdwidth 588
  bdheight 781
 }
 Expression {
  inputs 0
  name Lines_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -839
  ypos 194
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.smooth}}
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xffffffff
  label "<b>Lines                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 56
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xffffffff
  label "<b>Tile                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos 2005
  ypos -15
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xffffffff
  label "<b>Edges                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 171
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat8
  xpos 3798
  ypos 104
 }
 Dot {
  name Dot34
  xpos 3832
  ypos 196
 }
set N1813c400 [stack 0]
 Expression {
  expr0 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression16
  xpos 3975
  ypos 261
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N1813c400
 Expression {
  expr0 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression1
  xpos 3871
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot28
  xpos 3905
  ypos 324
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 3975
  ypos 321
 }
 Dot {
  name Dot29
  xpos 4009
  ypos 500
 }
push $N1813c400
 Expression {
  expr0 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression8
  xpos 3739
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {7 offset R 0 50}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l random_colors +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N1813c400
 Expression {
  expr0 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain : 0:0"
  expr1 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain : 0:0"
  expr2 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain : 0:0"
  expr3 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? 1 : 0:0"
  name Expression9
  xpos 3575
  ypos 268
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot30
  xpos 3609
  ypos 500
 }
 Switch {
  inputs 3
  which {{"parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns == 1 ? 0 : parent.MASTER_POINTS.rows == 1 && parent.MASTER_POINTS.columns != 1 ? 1 : parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns != 1 ? 2 : 2"}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch5
  label "\[value which]"
  xpos 3739
  ypos 493
 }
 Dilate {
  size {{parent.MASTER_POINTS.dilate}}
  name Dilate14
  label "\[value size]"
  xpos 3739
  ypos 546
 }
set N18178800 [stack 0]
 Dot {
  name Dot33
  label POINTS
  note_font "Verdana Bold"
  note_font_size 13
  xpos -17
  ypos 1753
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat5
  xpos 375
  ypos 122
 }
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(y/size)%2 == 0? (x%(dimension_width*scale))/(difference_size*width_brick*scale) : ((x+offset)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(y/size)%2 == 0? (y%dimension_height)/(difference_size) : ((y)%dimension_height)/(difference_size)"
  name Expression18
  xpos 375
  ypos 173
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.size_bricks}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset_bricks}}
  addUserKnob {7 scale R 0 6}
  scale {{parent.scale_bricks}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.anamorph_bricks}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
 }
set N18179800 [stack 0]
 Dot {
  name Dot32
  label "UV MAP"
  note_font "Verdana Bold"
  note_font_size 16
  xpos 80
  ypos 1765
  hide_input true
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{parent.shape_width}}
  box_height {{box_width}}
  box_fixed true
  name Reformat6
  xpos 1097
  ypos -96
 }
 Flare {
  position {{parent.Reformat6.box_width/2} {parent.Reformat6.box_width/2}}
  radius {0 100 100}
  inner_color 1
  vis_in 1.05
  vis_out 1.105
  vis_mask_size 1
  corners 4
  flattening 4.8
  sharpness 1
  asym_repeat 0
  asym_multiplier 0.04
  asym_falloff 1.5
  asym_angle -34
  name Flare1
  xpos 1097
  ypos -52
 }
set N181ae800 [stack 0]
 Crop {
  box {{parent.CurveTool1.autocropdata.x} {parent.CurveTool1.autocropdata.y} {parent.CurveTool1.autocropdata.r} {parent.CurveTool1.autocropdata.t}}
  reformat true
  name Crop1
  xpos 1098
  ypos -32
  disable {{!parent.enable_autocrop}}
 }
 Median {
  size 2
  ignore_top_line false
  name Median1
  xpos 1097
  ypos -8
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle4
  tile_color 0x93000000
  xpos 1097
  ypos 34
 }
 Transform {
  center {{parent.Reformat6.box_width/2} {parent.Reformat6.box_height/2}}
  shutteroffset centred
  name Transform1
  xpos 1097
  ypos 58
  disable true
 }
 Expression {
  expr3 "(r || g || b) != 0 ? 1 : 0"
  name Expression2
  xpos 1097
  ypos 82
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  tile_color 0xffffffff
  xpos 1097
  ypos 106
 }
set N181e2400 [stack 0]
 Dot {
  name Dot25
  label SHAPE
  note_font "Verdana Bold"
  note_font_size 12
  xpos -66
  ypos 1793
  hide_input true
 }
push $N181e2400
 Dot {
  name Dot50
  xpos 1131
  ypos 154
 }
 Input {
  inputs 0
  name img
  xpos 923
  ypos -98
 }
 Switch {
  inputs 2
  which {{parent.input}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch4
  label "\[value which]"
  xpos 923
  ypos 147
 }
 Transform {
  scale {{parent.scale}}
  center {1024 778}
  shutteroffset centred
  name Transform4
  xpos 923
  ypos 194
 }
 Dot {
  name Dot19
  xpos 957
  ypos 232
 }
set N181e3800 [stack 0]
 Dot {
  name Dot24
  label INPUT
  note_font "Verdana Bold"
  note_font_size 15
  xpos 128
  ypos 1793
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat3
  xpos 2284
  ypos 135
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat_Vertical
  xpos 2284
  ypos 170
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot10
  xpos 2318
  ypos 198
 }
set N18217000 [stack 0]
 Dot {
  name Dot5
  xpos 2318
  ypos 216
 }
set N18217400 [stack 0]
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x)>0 ? floor((y-shift.y)/size)%2 == 0 ? (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)) : floor((y-shift.y)/size)%2 == 0? 1 + (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : 1 +  ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick))"
  name Offset_red
  tile_color 0xff000001
  xpos 2237
  ypos 286
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot12
  xpos 2271
  ypos 334
 }
set N18217c00 [stack 0]
push $N18217400
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y)>0 ? floor((y-shift.y)/size)%2 == 0? (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) :  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size)) : floor((y-shift.y)/size)%2 == 0? 1+ (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) : 1+  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size))"
  name Offset_green
  tile_color 0xff0001
  xpos 2361
  ypos 285
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift x1 789} {parent.TILE_MASTER.shift x1 1005}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
set N1823e000 [stack 0]
 Dot {
  name Dot6
  xpos 2622
  ypos 288
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos 2588
  ypos 331
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform2
  xpos 2588
  ypos 373
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat2
  xpos 2588
  ypos 397
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot16
  label TILE
  xpos 5135
  ypos 410
  hide_input true
 }
push $N18179800
 Dot {
  name Dot21
  label BRICKS
  xpos 4939
  ypos 411
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat1
  xpos -1146
  ypos 152
 }
set N1826a000 [stack 0]
 Dot {
  name Dot1
  xpos -986
  ypos 155
 }
 Expression {
  expr0 "( cos(y / wide ) + thickness ) / smooth"
  expr1 "( cos(y / wide ) + thickness ) / smooth"
  expr2 "( cos(y / wide ) + thickness ) / smooth"
  expr3 "( cos(y / wide ) + thickness ) / smooth"
  name Lines_horizontal
  xpos -1020
  ypos 211
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
push $N1826a000
 Expression {
  expr0 "( sin(x / wide ) + thickness ) / smooth"
  expr1 "( sin(x / wide ) + thickness ) / smooth"
  expr2 "( sin(x / wide ) + thickness ) / smooth"
  expr3 "( sin(x / wide ) + thickness ) / smooth"
  name Lines_vertical
  xpos -1146
  ypos 298
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
 Switch {
  inputs 2
  which {{parent.alignment}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos -1020
  ypos 294
 }
 Clamp {
  name Clamp1
  xpos -1020
  ypos 326
 }
 Invert {
  name Invert2
  xpos -1020
  ypos 358
  disable {{!parent.invert_lines}}
 }
set N1826b800 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {{parent.color1.r} {parent.color1.g} {parent.color1.b} {parent.color1.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant1
  xpos -868
  ypos 263
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -868
  ypos 355
 }
 Premult {
  name Premult1
  xpos -868
  ypos 387
 }
 Dot {
  name Dot2
  xpos -721
  ypos 390
 }
 Dot {
  name Dot3
  xpos -721
  ypos 720
 }
push $N1826b800
 Invert {
  name Invert1
  xpos -1020
  ypos 576
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color2.r} {parent.color2.g} {parent.color2.b} {parent.color2.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant2
  xpos -868
  ypos 483
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -868
  ypos 576
 }
 Premult {
  name Premult2
  xpos -868
  ypos 608
 }
set N182adc00 [stack 0]
 Merge2 {
  inputs 2
  name Merge1
  xpos -868
  ypos 717
 }
set N182dc000 [stack 0]
 Dot {
  name Dot17
  label LINES
  xpos 5030
  ypos 392
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_input
  label "\[value which]"
  xpos 4996
  ypos 442
 }
 EdgeDetectWrapper {
  threshold 0.18
  name EdgeDetect2
  xpos 4996
  ypos 485
 }
 Dilate {
  size {{parent.dilate_edges}}
  name Dilate1
  label "\[value size]"
  xpos 4996
  ypos 517
 }
 Blur {
  size {{parent.blur_edges}}
  name Blur2
  label "\[value size]"
  xpos 4996
  ypos 559
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  tile_color 0xffffffff
  xpos 4996
  ypos 601
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color_edges} {parent.color_edges} {parent.color_edges} {parent.color_edges}}
  name Constant3
  xpos 5136
  ypos 605
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 4996
  ypos 625
 }
 Premult {
  name Premult3
  xpos 4996
  ypos 657
 }
 Dot {
  name Dot7
  label "do not delete"
  xpos 5030
  ypos 709
 }
set N1831a400 [stack 0]
 Dot {
  name Dot13
  xpos 5030
  ypos 1849
 }
set N1831a800 [stack 0]
push $N18217000
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(abs(y-shift.y)/size)%2 == 0? (abs(x-shift.x)%dimension_width)/(difference_size*width_brick) : (abs(x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(abs(y-shift.y)/size)%2 == 0? (abs(y-shift.y)%dimension_height)/(difference_size) : (abs(y-shift.y)%dimension_height)/(difference_size)"
  name CROSS
  xpos 2015
  ypos 277
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot8
  xpos 2049
  ypos 507
 }
push $N1823e000
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y>=0?0:1) + fmod(int((y-shift.y)/dimension_height),2)!=0?1-g:g"
  name Mirror_green
  tile_color 0xff0001
  xpos 2361
  ypos 373
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot9
  xpos 2395
  ypos 414
 }
push $N18217c00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x>=0?0:1) + fmod(int((x-shift.x)/dimension_width),2)!=0?1-r:r"
  name Mirror_red
  tile_color 0xff000001
  xpos 2237
  ypos 371
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 2237
  ypos 411
 }
 Switch {
  inputs 2
  which {{parent.TILE_MASTER.cross}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch3
  label "\[value which]"
  xpos 2237
  ypos 500
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform3
  xpos 2237
  ypos 532
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat7
  xpos 2237
  ypos 556
  disable {{!parent.TILE_MASTER.vertical}}
 }
push $N181e3800
 Dot {
  name Dot18
  xpos 957
  ypos 659
 }
 STMap {
  inputs 2
  uv rgba
  name STMap2
  xpos 2237
  ypos 652
 }
set N18353400 [stack 0]
 Dot {
  name Dot38
  label "INPUT TILE"
  note_font "Verdana Bold"
  xpos 691
  ypos 1608
  hide_input true
 }
push $N1831a800
 Dot {
  name Dot20
  label EDGES
  note_font "Verdana Bold"
  note_font_size 13
  xpos 245
  ypos 1483
  hide_input true
 }
set N18353c00 [stack 0]
 Dot {
  name Dot39
  xpos 643
  ypos 1598
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat4
  xpos 213
  ypos 1358
 }
set N18382400 [stack 0]
 Shuffle {
  alpha white
  name Shuffle3
  tile_color 0xffffff01
  label "\[value in]"
  xpos 213
  ypos 1408
 }
set N18382c00 [stack 0]
 Dot {
  name Dot40
  xpos 592
  ypos 1595
  hide_input true
 }
push $N18382400
 Shuffle {
  alpha black
  name Shuffle2
  tile_color 0xff
  label "\[value in]"
  xpos 100
  ypos 1414
 }
set N18383400 [stack 0]
 Dot {
  name Dot41
  xpos 554
  ypos 1622
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_tile}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_tile
  label "\[value which]"
  xpos 597
  ypos 1640
 }
push $N18178800
 Dot {
  name Dot37
  label POINTS
  note_font "Verdana Bold"
  xpos 524
  ypos 1548
  hide_input true
 }
push $N181e3800
 Dot {
  name Dot31
  label INPUT
  note_font "Verdana Bold"
  note_font_size 17
  xpos 3895
  ypos 637
  hide_input true
 }
push $N18178800
 Convolve2 {
  inputs 2
  useGPUIfAvailable false
  use_input_channels true
  name Convolve1
  xpos 3739
  ypos 630
 }
set N183aa400 [stack 0]
 Dot {
  name Dot36
  label "INPUT POINTS"
  note_font "Verdana Bold"
  note_font_size 13
  xpos 487
  ypos 1532
  hide_input true
 }
push $N18382c00
 Dot {
  name Dot42
  xpos 446
  ypos 1530
  hide_input true
 }
push $N18383400
 Dot {
  name Dot43
  xpos 401
  ypos 1544
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_shingle}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_points
  label "\[value which]"
  xpos 424
  ypos 1573
 }
push $N18382400
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  channel0 {rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green rgba.blue none}
  expr3 "floor(y/size)%2 == 0 ? rint(amount*random((floor((x)/(dimension_width*scale))+random_value)*(floor(y/dimension_height)+random_value)*random_value)) : rint(amount*random((floor((x+offset)/(dimension_width))/(difference_size*width_brick)+random_value)*(floor(y/dimension_height)+random_value)*random_value))"
  name Expression22
  xpos 385
  ypos 1396
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.Expression18.size}}
  addUserKnob {7 scale R 0 10}
  scale {{parent.Expression18.scale}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.Expression18.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.Expression18.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
  addUserKnob {7 amount R 0.5 6}
  amount {{parent.amount_bricks}}
 }
 Clamp {
  name Clamp2
  xpos 385
  ypos 1420
 }
 Dot {
  name Dot44
  xpos 389
  ypos 1511
  hide_input true
 }
push $N18179800
push $N181e3800
 STMap {
  inputs 2
  channels rgba
  uv rgba
  filter sinc4
  name STMap1
  xpos 375
  ypos 229
 }
set N183d8400 [stack 0]
 Dot {
  name Dot35
  label "INPUT BRICKS"
  note_font_size 14
  xpos 326
  ypos 1487
  hide_input true
 }
push $N18353c00
 Dot {
  name Dot47
  xpos 361
  ypos 1493
  hide_input true
 }
push $N18382c00
 Dot {
  name Dot45
  xpos 296
  ypos 1499
  hide_input true
 }
push $N18383400
 Dot {
  name Dot46
  xpos 262
  ypos 1515
  hide_input true
 }
 Switch {
  inputs 5
  which {{parent.alpha_bricks}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name Switch_alpha_bricks
  label "\[value which]"
  xpos 300
  ypos 1550
 }
push $N18353c00
push $N18382c00
 Dot {
  name Dot48
  xpos 189
  ypos 1486
  hide_input true
 }
push $N18383400
 Dot {
  name Dot49
  xpos 134
  ypos 1504
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.alpha_lines}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_alpha_lines
  label "\[value which]"
  xpos 174
  ypos 1528
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch6
  label "\[value which]"
  xpos 212
  ypos 1670
 }
push $N1831a400
 Dot {
  name Dot14
  xpos 2399
  ypos 709
  hide_input true
 }
push $N18353400
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges2
  xpos 2237
  ypos 706
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot11
  xpos 2271
  ypos 931
 }
 Dot {
  name Dot26
  label TILE
  note_font "Verdana Bold"
  xpos 127
  ypos 865
  hide_input true
 }
push $N183aa400
 Dot {
  name Dot27
  label SHINGLE
  note_font "Verdana Bold"
  xpos 3
  ypos 866
  hide_input true
 }
push $N1831a400
 Dot {
  name Dot22
  xpos 509
  ypos 293
  hide_input true
 }
push $N183d8400
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges3
  xpos 375
  ypos 290
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot23
  xpos 409
  ypos 931
 }
push $N1831a400
 Dot {
  name Dot15
  xpos -734
  ypos 831
  hide_input true
 }
push $N182dc000
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges1
  xpos -868
  ypos 828
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot4
  xpos -834
  ypos 931
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch2
  label "\[value which]"
  xpos 0
  ypos 924
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 0
  ypos 1670
 }
 Switch {
  inputs 6
  which {{preview_edges==1?1:preview_input==1?2:preview_shape==1?3:preview_bricks==1?4:preview_points==1?5:0}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name Switch_output
  label "\[value which]"
  xpos 0
  ypos 1842
 }
 Output {
  name Output1
  xpos 0
  ypos 1905
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xffffffff
  label "<b>Bricks                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos -88
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label ROWS
  note_font "Verdana Bold"
  xpos 3578
  ypos 220
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label COLUMNS
  note_font "Verdana Bold"
  xpos 3753
  ypos 206
 }
 StickyNote {
  inputs 0
  name StickyNote8
  label OFFSET
  note_font "Verdana Bold"
  xpos 3944
  ypos 194
 }
 StickyNote {
  inputs 0
  name StickyNote9
  tile_color 0xffffffff
  label "<b>Shingle                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -180
 }
push $N181ae800
 CurveTool {
  operation "Auto Crop"
  channels rgba
  ROI {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  autocropdata {{curve x1 156} {curve x1 156} {curve x1 345} {curve x1 345}}
  intensitydata {{curve}}
  name CurveTool1
  xpos 1248
  ypos -52
 }
 Reformat {
  inputs 0
  name Reformat_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -45
  ypos -316
 }
 Expression {
  inputs 0
  name MASTER_POINTS
  note_font "Verdana Bold"
  xpos 3773
  ypos 30
  addUserKnob {20 User}
  addUserKnob {3 offsetX}
  offsetX {{parent.offsetX}}
  addUserKnob {3 offsetY}
  offsetY {{parent.offsetY}}
  addUserKnob {26 ""}
  addUserKnob {3 rows}
  rows {{parent.rows}}
  addUserKnob {3 columns}
  columns {{parent.columns}}
  addUserKnob {26 ""}
  addUserKnob {3 offset}
  offset {{parent.offset_shingle}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.random_colors}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.random_every_frame}}
  addUserKnob {26 ""}
  addUserKnob {7 dilate R 0 10}
  dilate {{parent.dilate}}
 }
 Expression {
  inputs 0
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor((y-shift.y)/size)%2 == 0? ((x-shift.x)%dimension_width)/(difference_size*width_brick) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor((y-shift.y)/size)%2 == 0? ((y-shift.y)%dimension_height)/(difference_size) : ((y-shift.y)%dimension_height)/(difference_size)"
  name TILE_MASTER
  note_font "Verdana Bold"
  xpos 2645
  ypos 136
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.shift} {parent.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick l "width brick" R 0 5}
  width_brick {{parent.width_brick}}
  addUserKnob {3 random_value l INVISIBLE +INVISIBLE}
  random_value 59
  addUserKnob {6 vertical +STARTLINE}
  vertical {{!parent.alignment}}
  addUserKnob {6 cross +STARTLINE}
  cross {{parent.cross}}
  addUserKnob {6 mirror +STARTLINE}
  mirror {{parent.mirror}}
 }
push $N182adc00
push $N183d8400
 Viewer {
  inputs 2
  frame_range 11-100
  name Viewer1
  selected true
  xpos -489
  ypos -15
  hide_input true
 }
end_group
clone node146184c2400|Constant|17452 Constant {
 inputs 0
 channels rgb
 color {-0.082907 0.050704 0.317093 1}
 color_panelDropped true
 name Constant7
 selected true
 xpos 11468
 ypos -411
}
set C184c2400 [stack 0]
Group {
 inputs 2
 name switch_matte5
 selected true
 xpos 11607
 ypos -387
 addUserKnob {20 User}
 addUserKnob {41 red T ShuffleCopy3.red}
 addUserKnob {41 green T ShuffleCopy3.green}
 addUserKnob {41 blue T ShuffleCopy3.blue}
 addUserKnob {41 alpha T ShuffleCopy3.alpha}
 addUserKnob {41 invert T Premult3.invert}
 addUserKnob {41 disable_1 l Unpremult T Premult3.disable}
 addUserKnob {6 copyBbox l CopyBBox +STARTLINE}
 copyBbox true
}
 Input {
  inputs 0
  name alpha
  xpos 427
  ypos -553
  number 1
 }
set N184c2800 [stack 0]
push $N184c2800
 Input {
  inputs 0
  name image
  xpos 307
  ypos -553
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos 358
  ypos -504
 }
 Premult {
  name Premult3
  xpos 358
  ypos -478
 }
set N184c3400 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  selected true
  xpos 427
  ypos -436
 }
push $N184c3400
 Switch {
  inputs 2
  which {{parent.copyBbox}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos 358
  ypos -404
 }
 Output {
  name Output1
  xpos 355
  ypos -366
 }
end_group
Group {
 inputs 0
 name ProceduralTEXTURE5
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n#works only if knob 'type' is changing.\nif ('type' in k.name()):\n    import nuke\n    #------------------------------------------------------------\n    #LINES\n    if(k.getValue()==0):\n        n\['input'].setVisible(False)\n        n\['preview_input'].setVisible(False)\n        n\['scale'].setVisible(False)\n        n\['shape_width'].setVisible(False)\n        n\['calc_autocrop'].setVisible(False)\n        n\['enable_autocrop'].setVisible(False)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['lines_divider01'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        n\['lines_divider02'].setVisible(True)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n    \n    #BRICKS\n    if(k.getValue()==1):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['bricks_divider01'].setVisible(True)\n        n\['bricks_divider02'].setVisible(True)\n        n\['bricks_divider03'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n        \n    #SHINGLE\n    if(k.getValue()==2):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        n\['shingle_divider01'].setVisible(True)\n        n\['shingle_divider02'].setVisible(True)\n        n\['shingle_divider03'].setVisible(True)\n        n\['shingle_divider04'].setVisible(True)\n        \n        n\['edges'].setVisible(False)\n        n\['preview_edges'].setVisible(False)\n        n\['dilate_edges'].setVisible(False)\n        n\['blur_edges'].setVisible(False)\n        n\['color_edges'].setVisible(False)\n        n\['enable_edges'].setVisible(False)\n        n\['mix_edges'].setVisible(False)\n        n\['edges_divider01'].setVisible(False)\n        \n        \n    #TILE\n    if(k.getValue()==3):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        n\['tile_divider01'].setVisible(True)\n        n\['tile_divider02'].setVisible(True)\n        n\['preview_UV_tile'].setVisible(True)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n     \n    if(k.getValue()==4):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)"
 autolabel "nuke.thisNode().name() + \"\\n\" + '(' + 'type' + ':'+ ' ' + str(nuke.thisNode()\['type'].value()) + ')' "
 tile_color 0x14f5d001
 note_font "Verdana Bold"
 selected true
 xpos 11620
 ypos -603
 addUserKnob {20 ProceduralTexture l "Procedural Texture"}
 addUserKnob {26 text l "" +STARTLINE T "<font size=\"40\"><font color=\"light sea green\">PROCEDURAL <b><font size=\"40\"><font color=\"spring green\">TEXTURE"}
 addUserKnob {26 artist l "" +STARTLINE T "<i><font color=\"silver\">Andrea Geremia"}
 addUserKnob {26 ""}
 addUserKnob {68 type t "Select the operation you want to do:\n\n- Lines. Creates some vertical or horizontal stipes. Decide the colors and thickness\n\n- Bricks. The common way to use this operation is to create walls. Select the shape or connect an image. Combine some nodes to create a more complex texture. It creates a wall using the UV and STMap node. Use this option if you want to create a classic wall of bricks without overlapping\n\n- Shingle. Creates a wall using the Convolve node and points. It allows to create compenetrations between shapes. It's usefull to create alien projectors with hexagons and random colors. \n\n- Tile. Compared to the previous operation, here it's easier to deal with the pictures and their manipulation. It's similar to the ContactSheet node with more controls" M {Lines Bricks Shingle Tile "" "" "" ""}}
 type Bricks
 addUserKnob {26 ""}
 addUserKnob {4 input M {img shape}}
 input shape
 addUserKnob {6 preview_input l "preview input" -STARTLINE}
 addUserKnob {7 scale t "The type Shingle uses the Convolve as technique. If you don't see the correct result, try to reduce a lot the scale, in order of 0.1 "}
 scale 1
 addUserKnob {4 alignment t "Select the alignment of lines" +HIDDEN M {Vertical Horizontal ""}}
 addUserKnob {26 ""}
 addUserKnob {41 format l "output format" T Reformat_CTRL.format}
 addUserKnob {4 alpha_lines l alpha +HIDDEN M {0 1 edges}}
 addUserKnob {4 alpha_bricks l alpha M {0 1 edges input "Wall of Bricks" "" ""}}
 alpha_bricks input
 addUserKnob {4 alpha_shingle l alpha +HIDDEN M {0 1 input points}}
 alpha_shingle input
 addUserKnob {4 alpha_tile l alpha +HIDDEN M {0 1 edges input}}
 alpha_tile 1
 addUserKnob {26 ""}
 addUserKnob {26 lines l "<b><font color=\"red\">LINES" +HIDDEN}
 addUserKnob {19 color1 +HIDDEN}
 color1 {1 0 0 0}
 addUserKnob {6 color1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 color2 +HIDDEN}
 color2 {0 1 0 0}
 addUserKnob {6 color2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 lines_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 wide +HIDDEN R 0 20}
 wide 10.9
 addUserKnob {7 thickness +HIDDEN R 0 2}
 addUserKnob {7 smooth +HIDDEN R 0 4}
 addUserKnob {6 invert_lines l "invert lines" t "Invert colors and parameters between the two groups of lines" +HIDDEN +STARTLINE}
 invert_lines true
 addUserKnob {26 lines_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 bricks l "<b><font color=\"fuchsia\">BRICKS"}
 addUserKnob {6 preview_bricks l "preview UVMap" +STARTLINE}
 addUserKnob {7 size_bricks l size R 0 100}
 size_bricks 300
 addUserKnob {7 anamorph_bricks l anamorph R 0 6}
 anamorph_bricks 1
 addUserKnob {26 bricks_divider01 l "" +STARTLINE}
 addUserKnob {7 offset_bricks l offset R 0 50}
 addUserKnob {7 scale_bricks l "scale even lines" R 0 6}
 scale_bricks 1
 addUserKnob {26 bricks_divider02 l "" +STARTLINE}
 addUserKnob {20 wall_of_bricks l "Alpha - Wall of Bricks" n 1}
 addUserKnob {3 random_bricks l "random value"}
 random_bricks 207
 addUserKnob {22 generate_random_value l "Random value" -STARTLINE T "import random\nrand_value=random.randint(1,300)\nnuke.thisGroup()\['random_bricks'].setValue(rand_value)"}
 addUserKnob {7 amount_bricks l amount R 0.5 4}
 amount_bricks 0.79
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 bricks_divider03 l "" +STARTLINE}
 addUserKnob {26 tile l "<b><font color=\"yellow\">TILE" +HIDDEN}
 addUserKnob {6 preview_UV_tile l "preview UVMap" +HIDDEN +STARTLINE}
 addUserKnob {12 shift +HIDDEN}
 shift {1045 725}
 addUserKnob {7 size +HIDDEN R 0 100}
 size 100
 addUserKnob {7 offset +HIDDEN R 0 50}
 addUserKnob {26 tile_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 width_brick l "width brick" +HIDDEN R 0 10}
 width_brick 2
 addUserKnob {6 cross t "This option is connected to the Shift values.\nIf you don't see any change, please modify the values of Shift" +HIDDEN +STARTLINE}
 addUserKnob {6 mirror -STARTLINE +HIDDEN}
 addUserKnob {26 tile_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 shingle l "<font color=\"chocolate\"><b>SHINGLE" +HIDDEN}
 addUserKnob {6 preview_points l "preview Points" +HIDDEN +STARTLINE}
 addUserKnob {3 offsetX +HIDDEN}
 offsetX 200
 addUserKnob {3 offsetY -STARTLINE +HIDDEN}
 offsetY 200
 addUserKnob {26 shingle_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 message_shingle l "" +STARTLINE +HIDDEN T "<i>Print every:"}
 addUserKnob {3 rows +HIDDEN}
 rows 1
 addUserKnob {3 columns -STARTLINE +HIDDEN}
 columns 1
 addUserKnob {26 shingle_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {3 offset_shingle l offset +HIDDEN}
 offset_shingle 49
 addUserKnob {26 shingle_divider03 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 gain +HIDDEN R 0 10}
 gain 10
 addUserKnob {7 dilate l "dilate points" +HIDDEN R 0 20}
 dilate 6.9
 addUserKnob {6 random_colors l "random colors" +HIDDEN +STARTLINE}
 addUserKnob {6 random_every_frame l "random colors every frame" +HIDDEN +STARTLINE}
 addUserKnob {26 shingle_divider04 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 edges l "<b><font color=\"aqua\">Edges"}
 addUserKnob {6 preview_edges l "preview edges" +STARTLINE}
 addUserKnob {7 dilate_edges l dilate R -10 10}
 addUserKnob {7 blur_edges l blur R 0 5}
 addUserKnob {18 color_edges l color}
 color_edges {0.015951 0.584199 0.959849}
 addUserKnob {6 color_edges_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 edges_divider01 l "" +STARTLINE}
 addUserKnob {6 enable_edges l "enable edges" +STARTLINE}
 addUserKnob {7 mix_edges l "" -STARTLINE}
 mix_edges 1
 addUserKnob {20 shape l Shape}
 addUserKnob {6 preview_shape l "preview shape" +STARTLINE}
 addUserKnob {3 shape_width l width/height}
 shape_width 500
 addUserKnob {22 calc_autocrop l "Calc Auto Crop" -STARTLINE T "n=nuke.thisNode()\nn.node('CurveTool1')\['go'].execute()"}
 addUserKnob {6 enable_autocrop l "enable autocrop" -STARTLINE}
 enable_autocrop true
 addUserKnob {26 shape_1 l "<font color=darkorange><b>SHAPE"}
 addUserKnob {41 corners T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle T Flare1.corners_angle}
 addUserKnob {41 corner_angle_add l rel -STARTLINE T Flare1.corner_angle_add}
 addUserKnob {26 size_1 l "<font color=darkcyan><b>SIZE"}
 addUserKnob {41 radius T Flare1.radius}
 addUserKnob {41 size_mult l "size mult" T Flare1.size_mult}
 addUserKnob {41 anamorph T Flare1.anamorph}
 addUserKnob {26 visibility l "<font color=deepskyblue><b>VISIBILITY"}
 addUserKnob {41 brightness T Flare1.brightness}
 addUserKnob {41 vis_in l in T Flare1.vis_in}
 addUserKnob {41 vis_out l out T Flare1.vis_out}
 addUserKnob {26 colors l "<font color=deeppink><b>COLORS"}
 addUserKnob {41 ring_color l "ring color" T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" T Flare1.inner_falloff}
 addUserKnob {26 color_shift l "<font color=lightpink><b>COLOR SHIFT"}
 addUserKnob {41 chroma_spread l "chroma spread" T Flare1.chroma_spread}
 addUserKnob {41 chroma_shift l "chroma shift" T Flare1.chroma_shift}
 addUserKnob {41 chroma_shift_angle l angle T Flare1.chroma_shift_angle}
 addUserKnob {41 chroma_shift_angle_add l rel -STARTLINE T Flare1.chroma_shift_angle_add}
 addUserKnob {26 asimmetry l "<font color=greenyellow><b>ASIMMETRY"}
 addUserKnob {41 asym_repeat l repeat T Flare1.asym_repeat}
 addUserKnob {41 asym_multiplier l multiplier T Flare1.asym_multiplier}
 addUserKnob {41 asym_falloff l falloff T Flare1.asym_falloff}
 addUserKnob {41 asym_angle l angle T Flare1.asym_angle}
 addUserKnob {41 asym_angle_add l rel -STARTLINE T Flare1.asym_angle_add}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x472b5901
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 126
  bookmark false
  bdwidth 703
  bdheight 641
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x44513501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 2005
  ypos 50
  bookmark false
  bdwidth 823
  bdheight 734
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x56193501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 296
  bookmark false
  bdwidth 365
  bdheight 931
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x71c67100
  label img
  note_font_size 42
  xpos 913
  ypos -178
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x71c67100
  label shape
  note_font_size 42
  xpos 1087
  ypos -180
  bdwidth 278
  bdheight 371
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x665e7201
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos 37
  bookmark false
  bdwidth 244
  bdheight 331
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x387c9901
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -55
  bookmark false
  bdwidth 588
  bdheight 781
 }
 Expression {
  inputs 0
  name Lines_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -839
  ypos 194
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.smooth}}
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xffffffff
  label "<b>Lines                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 56
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xffffffff
  label "<b>Tile                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos 2005
  ypos -15
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xffffffff
  label "<b>Edges                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 171
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat8
  xpos 3798
  ypos 104
 }
 Dot {
  name Dot34
  xpos 3832
  ypos 196
 }
set N18541800 [stack 0]
 Expression {
  expr0 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression16
  xpos 3975
  ypos 261
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N18541800
 Expression {
  expr0 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression1
  xpos 3871
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot28
  xpos 3905
  ypos 324
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 3975
  ypos 321
 }
 Dot {
  name Dot29
  xpos 4009
  ypos 500
 }
push $N18541800
 Expression {
  expr0 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression8
  xpos 3739
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {7 offset R 0 50}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l random_colors +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N18541800
 Expression {
  expr0 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain : 0:0"
  expr1 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain : 0:0"
  expr2 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain : 0:0"
  expr3 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? 1 : 0:0"
  name Expression9
  xpos 3575
  ypos 268
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot30
  xpos 3609
  ypos 500
 }
 Switch {
  inputs 3
  which {{"parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns == 1 ? 0 : parent.MASTER_POINTS.rows == 1 && parent.MASTER_POINTS.columns != 1 ? 1 : parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns != 1 ? 2 : 2"}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch5
  label "\[value which]"
  xpos 3739
  ypos 493
 }
 Dilate {
  size {{parent.MASTER_POINTS.dilate}}
  name Dilate14
  label "\[value size]"
  xpos 3739
  ypos 546
 }
set N1856bc00 [stack 0]
 Dot {
  name Dot33
  label POINTS
  note_font "Verdana Bold"
  note_font_size 13
  xpos -17
  ypos 1753
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat5
  xpos 375
  ypos 122
 }
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(y/size)%2 == 0? (x%(dimension_width*scale))/(difference_size*width_brick*scale) : ((x+offset)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(y/size)%2 == 0? (y%dimension_height)/(difference_size) : ((y)%dimension_height)/(difference_size)"
  name Expression18
  xpos 375
  ypos 173
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.size_bricks}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset_bricks}}
  addUserKnob {7 scale R 0 6}
  scale {{parent.scale_bricks}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.anamorph_bricks}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
 }
set N185acc00 [stack 0]
 Dot {
  name Dot32
  label "UV MAP"
  note_font "Verdana Bold"
  note_font_size 16
  xpos 80
  ypos 1765
  hide_input true
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{parent.shape_width}}
  box_height {{box_width}}
  box_fixed true
  name Reformat6
  xpos 1097
  ypos -96
 }
 Flare {
  position {{parent.Reformat6.box_width/2} {parent.Reformat6.box_width/2}}
  radius {0 100 100}
  size_mult 0.73
  inner_color 1
  vis_in 1.05
  vis_out 1.105
  vis_mask_size 1
  corners 2
  flattening 6.2
  sharpness 1
  asym_repeat 0
  asym_multiplier 0.04
  asym_falloff 1.5
  asym_angle -34
  name Flare1
  xpos 1097
  ypos -52
 }
set N185adc00 [stack 0]
 Crop {
  box {{parent.CurveTool1.autocropdata.x} {parent.CurveTool1.autocropdata.y} {parent.CurveTool1.autocropdata.r} {parent.CurveTool1.autocropdata.t}}
  reformat true
  name Crop1
  xpos 1098
  ypos -32
  disable {{!parent.enable_autocrop}}
 }
 Median {
  size 2
  ignore_top_line false
  name Median1
  xpos 1097
  ypos -8
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle4
  tile_color 0x93000000
  xpos 1097
  ypos 34
 }
 Transform {
  center {{parent.Reformat6.box_width/2} {parent.Reformat6.box_height/2}}
  shutteroffset centred
  name Transform1
  xpos 1097
  ypos 58
  disable true
 }
 Expression {
  expr3 "(r || g || b) != 0 ? 1 : 0"
  name Expression2
  xpos 1097
  ypos 82
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  tile_color 0xffffffff
  xpos 1097
  ypos 106
 }
set N185d3800 [stack 0]
 Dot {
  name Dot25
  label SHAPE
  note_font "Verdana Bold"
  note_font_size 12
  xpos -66
  ypos 1793
  hide_input true
 }
push $N185d3800
 Dot {
  name Dot50
  xpos 1131
  ypos 154
 }
 Input {
  inputs 0
  name img
  xpos 923
  ypos -98
 }
 Switch {
  inputs 2
  which {{parent.input}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch4
  label "\[value which]"
  xpos 923
  ypos 147
 }
 Transform {
  scale {{parent.scale}}
  center {1024 778}
  shutteroffset centred
  name Transform4
  selected true
  xpos 923
  ypos 194
 }
set N18616800 [stack 0]
 Dot {
  name Dot19
  xpos 957
  ypos 232
 }
set N18616c00 [stack 0]
 Dot {
  name Dot24
  label INPUT
  note_font "Verdana Bold"
  note_font_size 15
  xpos 128
  ypos 1793
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat3
  xpos 2284
  ypos 135
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat_Vertical
  xpos 2284
  ypos 170
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot10
  xpos 2318
  ypos 198
 }
set N1863e400 [stack 0]
 Dot {
  name Dot5
  xpos 2318
  ypos 216
 }
set N1863e800 [stack 0]
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x)>0 ? floor((y-shift.y)/size)%2 == 0 ? (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)) : floor((y-shift.y)/size)%2 == 0? 1 + (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : 1 +  ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick))"
  name Offset_red
  tile_color 0xff000001
  xpos 2237
  ypos 286
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot12
  xpos 2271
  ypos 334
 }
set N1863f000 [stack 0]
push $N1863e800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y)>0 ? floor((y-shift.y)/size)%2 == 0? (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) :  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size)) : floor((y-shift.y)/size)%2 == 0? 1+ (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) : 1+  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size))"
  name Offset_green
  tile_color 0xff0001
  xpos 2361
  ypos 285
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift x1 789} {parent.TILE_MASTER.shift x1 1005}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
set N1863f400 [stack 0]
 Dot {
  name Dot6
  xpos 2622
  ypos 288
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos 2588
  ypos 331
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform2
  xpos 2588
  ypos 373
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat2
  xpos 2588
  ypos 397
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot16
  label TILE
  xpos 5135
  ypos 410
  hide_input true
 }
push $N185acc00
 Dot {
  name Dot21
  label BRICKS
  xpos 4939
  ypos 411
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat1
  xpos -1146
  ypos 152
 }
set N18671400 [stack 0]
 Dot {
  name Dot1
  xpos -986
  ypos 155
 }
 Expression {
  expr0 "( cos(y / wide ) + thickness ) / smooth"
  expr1 "( cos(y / wide ) + thickness ) / smooth"
  expr2 "( cos(y / wide ) + thickness ) / smooth"
  expr3 "( cos(y / wide ) + thickness ) / smooth"
  name Lines_horizontal
  xpos -1020
  ypos 211
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
push $N18671400
 Expression {
  expr0 "( sin(x / wide ) + thickness ) / smooth"
  expr1 "( sin(x / wide ) + thickness ) / smooth"
  expr2 "( sin(x / wide ) + thickness ) / smooth"
  expr3 "( sin(x / wide ) + thickness ) / smooth"
  name Lines_vertical
  xpos -1146
  ypos 298
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
 Switch {
  inputs 2
  which {{parent.alignment}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos -1020
  ypos 294
 }
 Clamp {
  name Clamp1
  xpos -1020
  ypos 326
 }
 Invert {
  name Invert2
  xpos -1020
  ypos 358
  disable {{!parent.invert_lines}}
 }
set N18694c00 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {{parent.color1.r} {parent.color1.g} {parent.color1.b} {parent.color1.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant1
  xpos -868
  ypos 263
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -868
  ypos 355
 }
 Premult {
  name Premult1
  xpos -868
  ypos 387
 }
 Dot {
  name Dot2
  xpos -721
  ypos 390
 }
 Dot {
  name Dot3
  xpos -721
  ypos 720
 }
push $N18694c00
 Invert {
  name Invert1
  xpos -1020
  ypos 576
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color2.r} {parent.color2.g} {parent.color2.b} {parent.color2.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant2
  xpos -868
  ypos 483
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -868
  ypos 576
 }
 Premult {
  name Premult2
  xpos -868
  ypos 608
 }
set N186d9000 [stack 0]
 Merge2 {
  inputs 2
  name Merge1
  xpos -868
  ypos 717
 }
set N186d9400 [stack 0]
 Dot {
  name Dot17
  label LINES
  xpos 5030
  ypos 392
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_input
  label "\[value which]"
  xpos 4996
  ypos 442
 }
 EdgeDetectWrapper {
  threshold 0.18
  name EdgeDetect2
  xpos 4996
  ypos 485
 }
 Dilate {
  size {{parent.dilate_edges}}
  name Dilate1
  label "\[value size]"
  xpos 4996
  ypos 517
 }
 Blur {
  size {{parent.blur_edges}}
  name Blur2
  label "\[value size]"
  xpos 4996
  ypos 559
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  tile_color 0xffffffff
  xpos 4996
  ypos 601
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color_edges} {parent.color_edges} {parent.color_edges} {parent.color_edges}}
  name Constant3
  xpos 5136
  ypos 605
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 4996
  ypos 625
 }
 Premult {
  name Premult3
  xpos 4996
  ypos 657
 }
 Dot {
  name Dot7
  label "do not delete"
  xpos 5030
  ypos 709
 }
set N1870d800 [stack 0]
 Dot {
  name Dot13
  xpos 5030
  ypos 1849
 }
set N1870dc00 [stack 0]
push $N1863e400
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(abs(y-shift.y)/size)%2 == 0? (abs(x-shift.x)%dimension_width)/(difference_size*width_brick) : (abs(x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(abs(y-shift.y)/size)%2 == 0? (abs(y-shift.y)%dimension_height)/(difference_size) : (abs(y-shift.y)%dimension_height)/(difference_size)"
  name CROSS
  xpos 2015
  ypos 277
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot8
  xpos 2049
  ypos 507
 }
push $N1863f400
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y>=0?0:1) + fmod(int((y-shift.y)/dimension_height),2)!=0?1-g:g"
  name Mirror_green
  tile_color 0xff0001
  xpos 2361
  ypos 373
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot9
  xpos 2395
  ypos 414
 }
push $N1863f000
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x>=0?0:1) + fmod(int((x-shift.x)/dimension_width),2)!=0?1-r:r"
  name Mirror_red
  tile_color 0xff000001
  xpos 2237
  ypos 371
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 2237
  ypos 411
 }
 Switch {
  inputs 2
  which {{parent.TILE_MASTER.cross}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch3
  label "\[value which]"
  xpos 2237
  ypos 500
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform3
  xpos 2237
  ypos 532
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat7
  xpos 2237
  ypos 556
  disable {{!parent.TILE_MASTER.vertical}}
 }
push $N18616c00
 Dot {
  name Dot18
  xpos 957
  ypos 659
 }
 STMap {
  inputs 2
  uv rgba
  name STMap2
  xpos 2237
  ypos 652
 }
set N1877a800 [stack 0]
 Dot {
  name Dot38
  label "INPUT TILE"
  note_font "Verdana Bold"
  xpos 691
  ypos 1608
  hide_input true
 }
push $N1870dc00
 Dot {
  name Dot20
  label EDGES
  note_font "Verdana Bold"
  note_font_size 13
  xpos 245
  ypos 1483
  hide_input true
 }
set N1877b000 [stack 0]
 Dot {
  name Dot39
  xpos 643
  ypos 1598
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat4
  xpos 213
  ypos 1358
 }
set N1877b800 [stack 0]
 Shuffle {
  alpha white
  name Shuffle3
  tile_color 0xffffff01
  label "\[value in]"
  xpos 213
  ypos 1408
 }
set N187a4000 [stack 0]
 Dot {
  name Dot40
  xpos 592
  ypos 1595
  hide_input true
 }
push $N1877b800
 Shuffle {
  alpha black
  name Shuffle2
  tile_color 0xff
  label "\[value in]"
  xpos 100
  ypos 1414
 }
set N187a4800 [stack 0]
 Dot {
  name Dot41
  xpos 554
  ypos 1622
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_tile}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_tile
  label "\[value which]"
  xpos 597
  ypos 1640
 }
push $N1856bc00
 Dot {
  name Dot37
  label POINTS
  note_font "Verdana Bold"
  xpos 524
  ypos 1548
  hide_input true
 }
push $N18616c00
 Dot {
  name Dot31
  label INPUT
  note_font "Verdana Bold"
  note_font_size 17
  xpos 3895
  ypos 637
  hide_input true
 }
push $N1856bc00
 Convolve2 {
  inputs 2
  useGPUIfAvailable false
  use_input_channels true
  name Convolve1
  xpos 3739
  ypos 630
 }
set N187a5800 [stack 0]
 Dot {
  name Dot36
  label "INPUT POINTS"
  note_font "Verdana Bold"
  note_font_size 13
  xpos 487
  ypos 1532
  hide_input true
 }
push $N187a4000
 Dot {
  name Dot42
  xpos 446
  ypos 1530
  hide_input true
 }
push $N187a4800
 Dot {
  name Dot43
  xpos 401
  ypos 1544
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_shingle}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_points
  label "\[value which]"
  xpos 424
  ypos 1573
 }
push $N1877b800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  channel0 {rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green rgba.blue none}
  expr3 "floor(y/size)%2 == 0 ? rint(amount*random((floor((x)/(dimension_width*scale))+random_value)*(floor(y/dimension_height)+random_value)*random_value)) : rint(amount*random((floor((x+offset)/(dimension_width))/(difference_size*width_brick)+random_value)*(floor(y/dimension_height)+random_value)*random_value))"
  name Expression22
  xpos 385
  ypos 1396
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.Expression18.size}}
  addUserKnob {7 scale R 0 10}
  scale {{parent.Expression18.scale}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.Expression18.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.Expression18.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
  addUserKnob {7 amount R 0.5 6}
  amount {{parent.amount_bricks}}
 }
 Clamp {
  name Clamp2
  xpos 385
  ypos 1420
 }
 Dot {
  name Dot44
  xpos 389
  ypos 1511
  hide_input true
 }
push $N185acc00
push $N18616c00
 STMap {
  inputs 2
  channels rgba
  uv rgba
  filter sinc4
  name STMap1
  xpos 375
  ypos 229
 }
set N187d1800 [stack 0]
 Dot {
  name Dot35
  label "INPUT BRICKS"
  note_font_size 14
  xpos 326
  ypos 1487
  hide_input true
 }
push $N1877b000
 Dot {
  name Dot47
  xpos 361
  ypos 1493
  hide_input true
 }
push $N187a4000
 Dot {
  name Dot45
  xpos 296
  ypos 1499
  hide_input true
 }
push $N187a4800
 Dot {
  name Dot46
  xpos 262
  ypos 1515
  hide_input true
 }
 Switch {
  inputs 5
  which {{parent.alpha_bricks}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name Switch_alpha_bricks
  label "\[value which]"
  xpos 300
  ypos 1550
 }
push $N1877b000
push $N187a4000
 Dot {
  name Dot48
  xpos 189
  ypos 1486
  hide_input true
 }
push $N187a4800
 Dot {
  name Dot49
  xpos 134
  ypos 1504
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.alpha_lines}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_alpha_lines
  label "\[value which]"
  xpos 174
  ypos 1528
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch6
  label "\[value which]"
  xpos 212
  ypos 1670
 }
push $N1870d800
 Dot {
  name Dot14
  xpos 2399
  ypos 709
  hide_input true
 }
push $N1877a800
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges2
  xpos 2237
  ypos 706
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot11
  xpos 2271
  ypos 931
 }
 Dot {
  name Dot26
  label TILE
  note_font "Verdana Bold"
  xpos 127
  ypos 865
  hide_input true
 }
push $N187a5800
 Dot {
  name Dot27
  label SHINGLE
  note_font "Verdana Bold"
  xpos 3
  ypos 866
  hide_input true
 }
push $N1870d800
 Dot {
  name Dot22
  xpos 509
  ypos 293
  hide_input true
 }
push $N187d1800
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges3
  xpos 375
  ypos 290
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot23
  xpos 409
  ypos 931
 }
push $N1870d800
 Dot {
  name Dot15
  xpos -734
  ypos 831
  hide_input true
 }
push $N186d9400
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges1
  xpos -868
  ypos 828
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot4
  xpos -834
  ypos 931
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch2
  label "\[value which]"
  xpos 0
  ypos 924
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 0
  ypos 1670
 }
 Switch {
  inputs 6
  which {{preview_edges==1?1:preview_input==1?2:preview_shape==1?3:preview_bricks==1?4:preview_points==1?5:0}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name Switch_output
  label "\[value which]"
  xpos 0
  ypos 1842
 }
 Output {
  name Output1
  xpos 0
  ypos 1905
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xffffffff
  label "<b>Bricks                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos -88
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label ROWS
  note_font "Verdana Bold"
  xpos 3578
  ypos 220
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label COLUMNS
  note_font "Verdana Bold"
  xpos 3753
  ypos 206
 }
 StickyNote {
  inputs 0
  name StickyNote8
  label OFFSET
  note_font "Verdana Bold"
  xpos 3944
  ypos 194
 }
 StickyNote {
  inputs 0
  name StickyNote9
  tile_color 0xffffffff
  label "<b>Shingle                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -180
 }
push $N185adc00
 CurveTool {
  operation "Auto Crop"
  channels rgba
  ROI {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  autocropdata {{curve x1 156} {curve x1 156} {curve x1 345} {curve x1 345}}
  intensitydata {{curve}}
  name CurveTool1
  xpos 1248
  ypos -52
 }
 Reformat {
  inputs 0
  name Reformat_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -45
  ypos -316
 }
 Expression {
  inputs 0
  name MASTER_POINTS
  note_font "Verdana Bold"
  xpos 3773
  ypos 30
  addUserKnob {20 User}
  addUserKnob {3 offsetX}
  offsetX {{parent.offsetX}}
  addUserKnob {3 offsetY}
  offsetY {{parent.offsetY}}
  addUserKnob {26 ""}
  addUserKnob {3 rows}
  rows {{parent.rows}}
  addUserKnob {3 columns}
  columns {{parent.columns}}
  addUserKnob {26 ""}
  addUserKnob {3 offset}
  offset {{parent.offset_shingle}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.random_colors}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.random_every_frame}}
  addUserKnob {26 ""}
  addUserKnob {7 dilate R 0 10}
  dilate {{parent.dilate}}
 }
 Expression {
  inputs 0
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor((y-shift.y)/size)%2 == 0? ((x-shift.x)%dimension_width)/(difference_size*width_brick) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor((y-shift.y)/size)%2 == 0? ((y-shift.y)%dimension_height)/(difference_size) : ((y-shift.y)%dimension_height)/(difference_size)"
  name TILE_MASTER
  note_font "Verdana Bold"
  xpos 2645
  ypos 136
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.shift} {parent.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick l "width brick" R 0 5}
  width_brick {{parent.width_brick}}
  addUserKnob {3 random_value l INVISIBLE +INVISIBLE}
  random_value 59
  addUserKnob {6 vertical +STARTLINE}
  vertical {{!parent.alignment}}
  addUserKnob {6 cross +STARTLINE}
  cross {{parent.cross}}
  addUserKnob {6 mirror +STARTLINE}
  mirror {{parent.mirror}}
 }
push $N186d9000
push $N18616800
 Viewer {
  inputs 2
  frame_range 11-100
  name Viewer1
  xpos -489
  ypos -15
  hide_input true
 }
end_group
clone $C18095000 {
 inputs 0
 xpos 11480
 ypos -568
 selected true
}
Group {
 inputs 2
 name switch_matte4
 selected true
 xpos 11620
 ypos -544
 addUserKnob {20 User}
 addUserKnob {41 red T ShuffleCopy3.red}
 addUserKnob {41 green T ShuffleCopy3.green}
 addUserKnob {41 blue T ShuffleCopy3.blue}
 addUserKnob {41 alpha T ShuffleCopy3.alpha}
 addUserKnob {41 invert T Premult3.invert}
 addUserKnob {41 disable_1 l Unpremult T Premult3.disable}
 addUserKnob {6 copyBbox l CopyBBox +STARTLINE}
 copyBbox true
}
 Input {
  inputs 0
  name alpha
  xpos 427
  ypos -553
  number 1
 }
set N188c3c00 [stack 0]
push $N188c3c00
 Input {
  inputs 0
  name image
  xpos 307
  ypos -553
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos 358
  ypos -504
 }
 Premult {
  name Premult3
  xpos 358
  ypos -478
 }
set N18914800 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  selected true
  xpos 427
  ypos -436
 }
push $N18914800
 Switch {
  inputs 2
  which {{parent.copyBbox}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos 358
  ypos -404
 }
 Output {
  name Output1
  xpos 355
  ypos -366
 }
end_group
Group {
 inputs 0
 name ProceduralTEXTURE4
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n#works only if knob 'type' is changing.\nif ('type' in k.name()):\n    import nuke\n    #------------------------------------------------------------\n    #LINES\n    if(k.getValue()==0):\n        n\['input'].setVisible(False)\n        n\['preview_input'].setVisible(False)\n        n\['scale'].setVisible(False)\n        n\['shape_width'].setVisible(False)\n        n\['calc_autocrop'].setVisible(False)\n        n\['enable_autocrop'].setVisible(False)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['lines_divider01'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        n\['lines_divider02'].setVisible(True)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n    \n    #BRICKS\n    if(k.getValue()==1):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['bricks_divider01'].setVisible(True)\n        n\['bricks_divider02'].setVisible(True)\n        n\['bricks_divider03'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n        \n    #SHINGLE\n    if(k.getValue()==2):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        n\['shingle_divider01'].setVisible(True)\n        n\['shingle_divider02'].setVisible(True)\n        n\['shingle_divider03'].setVisible(True)\n        n\['shingle_divider04'].setVisible(True)\n        \n        n\['edges'].setVisible(False)\n        n\['preview_edges'].setVisible(False)\n        n\['dilate_edges'].setVisible(False)\n        n\['blur_edges'].setVisible(False)\n        n\['color_edges'].setVisible(False)\n        n\['enable_edges'].setVisible(False)\n        n\['mix_edges'].setVisible(False)\n        n\['edges_divider01'].setVisible(False)\n        \n        \n    #TILE\n    if(k.getValue()==3):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        n\['tile_divider01'].setVisible(True)\n        n\['tile_divider02'].setVisible(True)\n        n\['preview_UV_tile'].setVisible(True)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n     \n    if(k.getValue()==4):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)"
 autolabel "nuke.thisNode().name() + \"\\n\" + '(' + 'type' + ':'+ ' ' + str(nuke.thisNode()\['type'].value()) + ')' "
 tile_color 0x14f5d001
 note_font "Verdana Bold"
 selected true
 xpos 11628
 ypos -705
 addUserKnob {20 ProceduralTexture l "Procedural Texture"}
 addUserKnob {26 text l "" +STARTLINE T "<font size=\"40\"><font color=\"light sea green\">PROCEDURAL <b><font size=\"40\"><font color=\"spring green\">TEXTURE"}
 addUserKnob {26 artist l "" +STARTLINE T "<i><font color=\"silver\">Andrea Geremia"}
 addUserKnob {26 ""}
 addUserKnob {68 type t "Select the operation you want to do:\n\n- Lines. Creates some vertical or horizontal stipes. Decide the colors and thickness\n\n- Bricks. The common way to use this operation is to create walls. Select the shape or connect an image. Combine some nodes to create a more complex texture. It creates a wall using the UV and STMap node. Use this option if you want to create a classic wall of bricks without overlapping\n\n- Shingle. Creates a wall using the Convolve node and points. It allows to create compenetrations between shapes. It's usefull to create alien projectors with hexagons and random colors. \n\n- Tile. Compared to the previous operation, here it's easier to deal with the pictures and their manipulation. It's similar to the ContactSheet node with more controls" M {Lines Bricks Shingle Tile "" "" "" ""}}
 type Bricks
 addUserKnob {26 ""}
 addUserKnob {4 input M {img shape}}
 input shape
 addUserKnob {6 preview_input l "preview input" -STARTLINE}
 addUserKnob {7 scale t "The type Shingle uses the Convolve as technique. If you don't see the correct result, try to reduce a lot the scale, in order of 0.1 "}
 scale 1
 addUserKnob {4 alignment t "Select the alignment of lines" +HIDDEN M {Vertical Horizontal ""}}
 addUserKnob {26 ""}
 addUserKnob {41 format l "output format" T Reformat_CTRL.format}
 addUserKnob {4 alpha_lines l alpha +HIDDEN M {0 1 edges}}
 addUserKnob {4 alpha_bricks l alpha M {0 1 edges input "Wall of Bricks" "" ""}}
 alpha_bricks input
 addUserKnob {4 alpha_shingle l alpha +HIDDEN M {0 1 input points}}
 alpha_shingle input
 addUserKnob {4 alpha_tile l alpha +HIDDEN M {0 1 edges input}}
 alpha_tile 1
 addUserKnob {26 ""}
 addUserKnob {26 lines l "<b><font color=\"red\">LINES" +HIDDEN}
 addUserKnob {19 color1 +HIDDEN}
 color1 {1 0 0 0}
 addUserKnob {6 color1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 color2 +HIDDEN}
 color2 {0 1 0 0}
 addUserKnob {6 color2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 lines_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 wide +HIDDEN R 0 20}
 wide 10.9
 addUserKnob {7 thickness +HIDDEN R 0 2}
 addUserKnob {7 smooth +HIDDEN R 0 4}
 addUserKnob {6 invert_lines l "invert lines" t "Invert colors and parameters between the two groups of lines" +HIDDEN +STARTLINE}
 invert_lines true
 addUserKnob {26 lines_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 bricks l "<b><font color=\"fuchsia\">BRICKS"}
 addUserKnob {6 preview_bricks l "preview UVMap" +STARTLINE}
 addUserKnob {7 size_bricks l size R 0 100}
 size_bricks 300
 addUserKnob {7 anamorph_bricks l anamorph R 0 6}
 anamorph_bricks 1
 addUserKnob {26 bricks_divider01 l "" +STARTLINE}
 addUserKnob {7 offset_bricks l offset R 0 50}
 addUserKnob {7 scale_bricks l "scale even lines" R 0 6}
 scale_bricks 1
 addUserKnob {26 bricks_divider02 l "" +STARTLINE}
 addUserKnob {20 wall_of_bricks l "Alpha - Wall of Bricks" n 1}
 addUserKnob {3 random_bricks l "random value"}
 random_bricks 207
 addUserKnob {22 generate_random_value l "Random value" -STARTLINE T "import random\nrand_value=random.randint(1,300)\nnuke.thisGroup()\['random_bricks'].setValue(rand_value)"}
 addUserKnob {7 amount_bricks l amount R 0.5 4}
 amount_bricks 0.79
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 bricks_divider03 l "" +STARTLINE}
 addUserKnob {26 tile l "<b><font color=\"yellow\">TILE" +HIDDEN}
 addUserKnob {6 preview_UV_tile l "preview UVMap" +HIDDEN +STARTLINE}
 addUserKnob {12 shift +HIDDEN}
 shift {1045 725}
 addUserKnob {7 size +HIDDEN R 0 100}
 size 100
 addUserKnob {7 offset +HIDDEN R 0 50}
 addUserKnob {26 tile_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 width_brick l "width brick" +HIDDEN R 0 10}
 width_brick 2
 addUserKnob {6 cross t "This option is connected to the Shift values.\nIf you don't see any change, please modify the values of Shift" +HIDDEN +STARTLINE}
 addUserKnob {6 mirror -STARTLINE +HIDDEN}
 addUserKnob {26 tile_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 shingle l "<font color=\"chocolate\"><b>SHINGLE" +HIDDEN}
 addUserKnob {6 preview_points l "preview Points" +HIDDEN +STARTLINE}
 addUserKnob {3 offsetX +HIDDEN}
 offsetX 200
 addUserKnob {3 offsetY -STARTLINE +HIDDEN}
 offsetY 200
 addUserKnob {26 shingle_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 message_shingle l "" +STARTLINE +HIDDEN T "<i>Print every:"}
 addUserKnob {3 rows +HIDDEN}
 rows 1
 addUserKnob {3 columns -STARTLINE +HIDDEN}
 columns 1
 addUserKnob {26 shingle_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {3 offset_shingle l offset +HIDDEN}
 offset_shingle 49
 addUserKnob {26 shingle_divider03 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 gain +HIDDEN R 0 10}
 gain 10
 addUserKnob {7 dilate l "dilate points" +HIDDEN R 0 20}
 dilate 6.9
 addUserKnob {6 random_colors l "random colors" +HIDDEN +STARTLINE}
 addUserKnob {6 random_every_frame l "random colors every frame" +HIDDEN +STARTLINE}
 addUserKnob {26 shingle_divider04 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 edges l "<b><font color=\"aqua\">Edges"}
 addUserKnob {6 preview_edges l "preview edges" +STARTLINE}
 addUserKnob {7 dilate_edges l dilate R -10 10}
 addUserKnob {7 blur_edges l blur R 0 5}
 addUserKnob {18 color_edges l color}
 color_edges {0.015951 0.584199 0.959849}
 addUserKnob {6 color_edges_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 edges_divider01 l "" +STARTLINE}
 addUserKnob {6 enable_edges l "enable edges" +STARTLINE}
 addUserKnob {7 mix_edges l "" -STARTLINE}
 mix_edges 1
 addUserKnob {20 shape l Shape}
 addUserKnob {6 preview_shape l "preview shape" +STARTLINE}
 addUserKnob {3 shape_width l width/height}
 shape_width 500
 addUserKnob {22 calc_autocrop l "Calc Auto Crop" -STARTLINE T "n=nuke.thisNode()\nn.node('CurveTool1')\['go'].execute()"}
 addUserKnob {6 enable_autocrop l "enable autocrop" -STARTLINE}
 enable_autocrop true
 addUserKnob {26 shape_1 l "<font color=darkorange><b>SHAPE"}
 addUserKnob {41 corners T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle T Flare1.corners_angle}
 addUserKnob {41 corner_angle_add l rel -STARTLINE T Flare1.corner_angle_add}
 addUserKnob {26 size_1 l "<font color=darkcyan><b>SIZE"}
 addUserKnob {41 radius T Flare1.radius}
 addUserKnob {41 size_mult l "size mult" T Flare1.size_mult}
 addUserKnob {41 anamorph T Flare1.anamorph}
 addUserKnob {26 visibility l "<font color=deepskyblue><b>VISIBILITY"}
 addUserKnob {41 brightness T Flare1.brightness}
 addUserKnob {41 vis_in l in T Flare1.vis_in}
 addUserKnob {41 vis_out l out T Flare1.vis_out}
 addUserKnob {26 colors l "<font color=deeppink><b>COLORS"}
 addUserKnob {41 ring_color l "ring color" T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" T Flare1.inner_falloff}
 addUserKnob {26 color_shift l "<font color=lightpink><b>COLOR SHIFT"}
 addUserKnob {41 chroma_spread l "chroma spread" T Flare1.chroma_spread}
 addUserKnob {41 chroma_shift l "chroma shift" T Flare1.chroma_shift}
 addUserKnob {41 chroma_shift_angle l angle T Flare1.chroma_shift_angle}
 addUserKnob {41 chroma_shift_angle_add l rel -STARTLINE T Flare1.chroma_shift_angle_add}
 addUserKnob {26 asimmetry l "<font color=greenyellow><b>ASIMMETRY"}
 addUserKnob {41 asym_repeat l repeat T Flare1.asym_repeat}
 addUserKnob {41 asym_multiplier l multiplier T Flare1.asym_multiplier}
 addUserKnob {41 asym_falloff l falloff T Flare1.asym_falloff}
 addUserKnob {41 asym_angle l angle T Flare1.asym_angle}
 addUserKnob {41 asym_angle_add l rel -STARTLINE T Flare1.asym_angle_add}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x472b5901
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 126
  bookmark false
  bdwidth 703
  bdheight 641
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x44513501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 2005
  ypos 50
  bookmark false
  bdwidth 823
  bdheight 734
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x56193501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 296
  bookmark false
  bdwidth 365
  bdheight 931
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x71c67100
  label img
  note_font_size 42
  xpos 913
  ypos -178
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x71c67100
  label shape
  note_font_size 42
  xpos 1087
  ypos -180
  bdwidth 278
  bdheight 371
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x665e7201
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos 37
  bookmark false
  bdwidth 244
  bdheight 331
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x387c9901
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -55
  bookmark false
  bdwidth 588
  bdheight 781
 }
 Expression {
  inputs 0
  name Lines_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -839
  ypos 194
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.smooth}}
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xffffffff
  label "<b>Lines                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 56
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xffffffff
  label "<b>Tile                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos 2005
  ypos -15
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xffffffff
  label "<b>Edges                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 171
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat8
  xpos 3798
  ypos 104
 }
 Dot {
  name Dot34
  xpos 3832
  ypos 196
 }
set N18974c00 [stack 0]
 Expression {
  expr0 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression16
  xpos 3975
  ypos 261
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N18974c00
 Expression {
  expr0 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression1
  xpos 3871
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot28
  xpos 3905
  ypos 324
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 3975
  ypos 321
 }
 Dot {
  name Dot29
  xpos 4009
  ypos 500
 }
push $N18974c00
 Expression {
  expr0 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression8
  xpos 3739
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {7 offset R 0 50}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l random_colors +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N18974c00
 Expression {
  expr0 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain : 0:0"
  expr1 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain : 0:0"
  expr2 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain : 0:0"
  expr3 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? 1 : 0:0"
  name Expression9
  xpos 3575
  ypos 268
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot30
  xpos 3609
  ypos 500
 }
 Switch {
  inputs 3
  which {{"parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns == 1 ? 0 : parent.MASTER_POINTS.rows == 1 && parent.MASTER_POINTS.columns != 1 ? 1 : parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns != 1 ? 2 : 2"}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch5
  label "\[value which]"
  xpos 3739
  ypos 493
 }
 Dilate {
  size {{parent.MASTER_POINTS.dilate}}
  name Dilate14
  label "\[value size]"
  xpos 3739
  ypos 546
 }
set N189a7000 [stack 0]
 Dot {
  name Dot33
  label POINTS
  note_font "Verdana Bold"
  note_font_size 13
  xpos -17
  ypos 1753
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat5
  xpos 375
  ypos 122
 }
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(y/size)%2 == 0? (x%(dimension_width*scale))/(difference_size*width_brick*scale) : ((x+offset)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(y/size)%2 == 0? (y%dimension_height)/(difference_size) : ((y)%dimension_height)/(difference_size)"
  name Expression18
  xpos 375
  ypos 173
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.size_bricks}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset_bricks}}
  addUserKnob {7 scale R 0 6}
  scale {{parent.scale_bricks}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.anamorph_bricks}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
 }
set N189de000 [stack 0]
 Dot {
  name Dot32
  label "UV MAP"
  note_font "Verdana Bold"
  note_font_size 16
  xpos 80
  ypos 1765
  hide_input true
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{parent.shape_width}}
  box_height {{box_width}}
  box_fixed true
  name Reformat6
  xpos 1097
  ypos -96
 }
 Flare {
  position {{parent.Reformat6.box_width/2} {parent.Reformat6.box_width/2}}
  radius {0 100 100}
  size_mult 0.95
  inner_color 1
  vis_in 1.05
  vis_out 1.105
  vis_mask_size 1
  corners 2
  flattening 6.2
  sharpness 1
  asym_repeat 0
  asym_multiplier 0.04
  asym_falloff 1.5
  asym_angle -34
  name Flare1
  xpos 1097
  ypos -52
 }
set N189df000 [stack 0]
 Crop {
  box {{parent.CurveTool1.autocropdata.x} {parent.CurveTool1.autocropdata.y} {parent.CurveTool1.autocropdata.r} {parent.CurveTool1.autocropdata.t}}
  reformat true
  name Crop1
  xpos 1098
  ypos -32
  disable {{!parent.enable_autocrop}}
 }
 Median {
  size 2
  ignore_top_line false
  name Median1
  xpos 1097
  ypos -8
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle4
  tile_color 0x93000000
  xpos 1097
  ypos 34
 }
 Transform {
  center {{parent.Reformat6.box_width/2} {parent.Reformat6.box_height/2}}
  shutteroffset centred
  name Transform1
  xpos 1097
  ypos 58
  disable true
 }
 Expression {
  expr3 "(r || g || b) != 0 ? 1 : 0"
  name Expression2
  xpos 1097
  ypos 82
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  tile_color 0xffffffff
  xpos 1097
  ypos 106
 }
set N18a16c00 [stack 0]
 Dot {
  name Dot25
  label SHAPE
  note_font "Verdana Bold"
  note_font_size 12
  xpos -66
  ypos 1793
  hide_input true
 }
push $N18a16c00
 Dot {
  name Dot50
  xpos 1131
  ypos 154
 }
 Input {
  inputs 0
  name img
  xpos 923
  ypos -98
 }
 Switch {
  inputs 2
  which {{parent.input}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch4
  label "\[value which]"
  xpos 923
  ypos 147
 }
 Transform {
  scale {{parent.scale}}
  center {1024 778}
  shutteroffset centred
  name Transform4
  xpos 923
  ypos 194
 }
 Dot {
  name Dot19
  xpos 957
  ypos 232
 }
set N18a4c000 [stack 0]
 Dot {
  name Dot24
  label INPUT
  note_font "Verdana Bold"
  note_font_size 15
  xpos 128
  ypos 1793
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat3
  xpos 2284
  ypos 135
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat_Vertical
  xpos 2284
  ypos 170
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot10
  xpos 2318
  ypos 198
 }
set N18a4d800 [stack 0]
 Dot {
  name Dot5
  xpos 2318
  ypos 216
 }
set N18a4dc00 [stack 0]
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x)>0 ? floor((y-shift.y)/size)%2 == 0 ? (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)) : floor((y-shift.y)/size)%2 == 0? 1 + (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : 1 +  ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick))"
  name Offset_red
  tile_color 0xff000001
  xpos 2237
  ypos 286
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot12
  xpos 2271
  ypos 334
 }
set N19a3c400 [stack 0]
push $N18a4dc00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y)>0 ? floor((y-shift.y)/size)%2 == 0? (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) :  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size)) : floor((y-shift.y)/size)%2 == 0? 1+ (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) : 1+  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size))"
  name Offset_green
  tile_color 0xff0001
  xpos 2361
  ypos 285
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift x1 789} {parent.TILE_MASTER.shift x1 1005}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
set N19a3c800 [stack 0]
 Dot {
  name Dot6
  xpos 2622
  ypos 288
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos 2588
  ypos 331
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform2
  xpos 2588
  ypos 373
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat2
  xpos 2588
  ypos 397
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot16
  label TILE
  xpos 5135
  ypos 410
  hide_input true
 }
push $N189de000
 Dot {
  name Dot21
  label BRICKS
  xpos 4939
  ypos 411
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat1
  xpos -1146
  ypos 152
 }
set N19a70800 [stack 0]
 Dot {
  name Dot1
  xpos -986
  ypos 155
 }
 Expression {
  expr0 "( cos(y / wide ) + thickness ) / smooth"
  expr1 "( cos(y / wide ) + thickness ) / smooth"
  expr2 "( cos(y / wide ) + thickness ) / smooth"
  expr3 "( cos(y / wide ) + thickness ) / smooth"
  name Lines_horizontal
  xpos -1020
  ypos 211
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
push $N19a70800
 Expression {
  expr0 "( sin(x / wide ) + thickness ) / smooth"
  expr1 "( sin(x / wide ) + thickness ) / smooth"
  expr2 "( sin(x / wide ) + thickness ) / smooth"
  expr3 "( sin(x / wide ) + thickness ) / smooth"
  name Lines_vertical
  xpos -1146
  ypos 298
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
 Switch {
  inputs 2
  which {{parent.alignment}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos -1020
  ypos 294
 }
 Clamp {
  name Clamp1
  xpos -1020
  ypos 326
 }
 Invert {
  name Invert2
  xpos -1020
  ypos 358
  disable {{!parent.invert_lines}}
 }
set N19aa6000 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {{parent.color1.r} {parent.color1.g} {parent.color1.b} {parent.color1.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant1
  xpos -868
  ypos 263
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -868
  ypos 355
 }
 Premult {
  name Premult1
  xpos -868
  ypos 387
 }
 Dot {
  name Dot2
  xpos -721
  ypos 390
 }
 Dot {
  name Dot3
  xpos -721
  ypos 720
 }
push $N19aa6000
 Invert {
  name Invert1
  xpos -1020
  ypos 576
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color2.r} {parent.color2.g} {parent.color2.b} {parent.color2.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant2
  xpos -868
  ypos 483
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -868
  ypos 576
 }
 Premult {
  name Premult2
  xpos -868
  ypos 608
 }
set N19ad4400 [stack 0]
 Merge2 {
  inputs 2
  name Merge1
  xpos -868
  ypos 717
 }
set N19ad4800 [stack 0]
 Dot {
  name Dot17
  label LINES
  xpos 5030
  ypos 392
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_input
  label "\[value which]"
  xpos 4996
  ypos 442
 }
 EdgeDetectWrapper {
  threshold 0.18
  name EdgeDetect2
  xpos 4996
  ypos 485
 }
 Dilate {
  size {{parent.dilate_edges}}
  name Dilate1
  label "\[value size]"
  xpos 4996
  ypos 517
 }
 Blur {
  size {{parent.blur_edges}}
  name Blur2
  label "\[value size]"
  xpos 4996
  ypos 559
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  tile_color 0xffffffff
  xpos 4996
  ypos 601
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color_edges} {parent.color_edges} {parent.color_edges} {parent.color_edges}}
  name Constant3
  xpos 5136
  ypos 605
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 4996
  ypos 625
 }
 Premult {
  name Premult3
  xpos 4996
  ypos 657
 }
 Dot {
  name Dot7
  label "do not delete"
  xpos 5030
  ypos 709
 }
set N19b18c00 [stack 0]
 Dot {
  name Dot13
  xpos 5030
  ypos 1849
 }
set N19b19000 [stack 0]
push $N18a4d800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(abs(y-shift.y)/size)%2 == 0? (abs(x-shift.x)%dimension_width)/(difference_size*width_brick) : (abs(x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(abs(y-shift.y)/size)%2 == 0? (abs(y-shift.y)%dimension_height)/(difference_size) : (abs(y-shift.y)%dimension_height)/(difference_size)"
  name CROSS
  xpos 2015
  ypos 277
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot8
  xpos 2049
  ypos 507
 }
push $N19a3c800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y>=0?0:1) + fmod(int((y-shift.y)/dimension_height),2)!=0?1-g:g"
  name Mirror_green
  tile_color 0xff0001
  xpos 2361
  ypos 373
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot9
  xpos 2395
  ypos 414
 }
push $N19a3c400
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x>=0?0:1) + fmod(int((x-shift.x)/dimension_width),2)!=0?1-r:r"
  name Mirror_red
  tile_color 0xff000001
  xpos 2237
  ypos 371
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 2237
  ypos 411
 }
 Switch {
  inputs 2
  which {{parent.TILE_MASTER.cross}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch3
  label "\[value which]"
  xpos 2237
  ypos 500
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform3
  xpos 2237
  ypos 532
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat7
  xpos 2237
  ypos 556
  disable {{!parent.TILE_MASTER.vertical}}
 }
push $N18a4c000
 Dot {
  name Dot18
  xpos 957
  ypos 659
 }
 STMap {
  inputs 2
  uv rgba
  name STMap2
  xpos 2237
  ypos 652
 }
set N19b4bc00 [stack 0]
 Dot {
  name Dot38
  label "INPUT TILE"
  note_font "Verdana Bold"
  xpos 691
  ypos 1608
  hide_input true
 }
push $N19b19000
 Dot {
  name Dot20
  label EDGES
  note_font "Verdana Bold"
  note_font_size 13
  xpos 245
  ypos 1483
  hide_input true
 }
set N19b84400 [stack 0]
 Dot {
  name Dot39
  xpos 643
  ypos 1598
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat4
  xpos 213
  ypos 1358
 }
set N19b84c00 [stack 0]
 Shuffle {
  alpha white
  name Shuffle3
  tile_color 0xffffff01
  label "\[value in]"
  xpos 213
  ypos 1408
 }
set N19b85400 [stack 0]
 Dot {
  name Dot40
  xpos 592
  ypos 1595
  hide_input true
 }
push $N19b84c00
 Shuffle {
  alpha black
  name Shuffle2
  tile_color 0xff
  label "\[value in]"
  xpos 100
  ypos 1414
 }
set N19b85c00 [stack 0]
 Dot {
  name Dot41
  xpos 554
  ypos 1622
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_tile}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_tile
  label "\[value which]"
  xpos 597
  ypos 1640
 }
push $N189a7000
 Dot {
  name Dot37
  label POINTS
  note_font "Verdana Bold"
  xpos 524
  ypos 1548
  hide_input true
 }
push $N18a4c000
 Dot {
  name Dot31
  label INPUT
  note_font "Verdana Bold"
  note_font_size 17
  xpos 3895
  ypos 637
  hide_input true
 }
push $N189a7000
 Convolve2 {
  inputs 2
  useGPUIfAvailable false
  use_input_channels true
  name Convolve1
  xpos 3739
  ypos 630
 }
set N19baec00 [stack 0]
 Dot {
  name Dot36
  label "INPUT POINTS"
  note_font "Verdana Bold"
  note_font_size 13
  xpos 487
  ypos 1532
  hide_input true
 }
push $N19b85400
 Dot {
  name Dot42
  xpos 446
  ypos 1530
  hide_input true
 }
push $N19b85c00
 Dot {
  name Dot43
  xpos 401
  ypos 1544
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_shingle}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_points
  label "\[value which]"
  xpos 424
  ypos 1573
 }
push $N19b84c00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  channel0 {rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green rgba.blue none}
  expr3 "floor(y/size)%2 == 0 ? rint(amount*random((floor((x)/(dimension_width*scale))+random_value)*(floor(y/dimension_height)+random_value)*random_value)) : rint(amount*random((floor((x+offset)/(dimension_width))/(difference_size*width_brick)+random_value)*(floor(y/dimension_height)+random_value)*random_value))"
  name Expression22
  xpos 385
  ypos 1396
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.Expression18.size}}
  addUserKnob {7 scale R 0 10}
  scale {{parent.Expression18.scale}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.Expression18.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.Expression18.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
  addUserKnob {7 amount R 0.5 6}
  amount {{parent.amount_bricks}}
 }
 Clamp {
  name Clamp2
  xpos 385
  ypos 1420
 }
 Dot {
  name Dot44
  xpos 389
  ypos 1511
  hide_input true
 }
push $N189de000
push $N18a4c000
 STMap {
  inputs 2
  channels rgba
  uv rgba
  filter sinc4
  name STMap1
  xpos 375
  ypos 229
 }
set N19bdac00 [stack 0]
 Dot {
  name Dot35
  label "INPUT BRICKS"
  note_font_size 14
  xpos 326
  ypos 1487
  hide_input true
 }
push $N19b84400
 Dot {
  name Dot47
  xpos 361
  ypos 1493
  hide_input true
 }
push $N19b85400
 Dot {
  name Dot45
  xpos 296
  ypos 1499
  hide_input true
 }
push $N19b85c00
 Dot {
  name Dot46
  xpos 262
  ypos 1515
  hide_input true
 }
 Switch {
  inputs 5
  which {{parent.alpha_bricks}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name Switch_alpha_bricks
  label "\[value which]"
  xpos 300
  ypos 1550
 }
push $N19b84400
push $N19b85400
 Dot {
  name Dot48
  xpos 189
  ypos 1486
  hide_input true
 }
push $N19b85c00
 Dot {
  name Dot49
  xpos 134
  ypos 1504
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.alpha_lines}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_alpha_lines
  label "\[value which]"
  xpos 174
  ypos 1528
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch6
  label "\[value which]"
  xpos 212
  ypos 1670
 }
push $N19b18c00
 Dot {
  name Dot14
  xpos 2399
  ypos 709
  hide_input true
 }
push $N19b4bc00
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges2
  xpos 2237
  ypos 706
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot11
  xpos 2271
  ypos 931
 }
 Dot {
  name Dot26
  label TILE
  note_font "Verdana Bold"
  xpos 127
  ypos 865
  hide_input true
 }
push $N19baec00
 Dot {
  name Dot27
  label SHINGLE
  note_font "Verdana Bold"
  xpos 3
  ypos 866
  hide_input true
 }
push $N19b18c00
 Dot {
  name Dot22
  xpos 509
  ypos 293
  hide_input true
 }
push $N19bdac00
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges3
  xpos 375
  ypos 290
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot23
  xpos 409
  ypos 931
 }
push $N19b18c00
 Dot {
  name Dot15
  xpos -734
  ypos 831
  hide_input true
 }
push $N19ad4800
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges1
  xpos -868
  ypos 828
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot4
  xpos -834
  ypos 931
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch2
  label "\[value which]"
  xpos 0
  ypos 924
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 0
  ypos 1670
 }
 Switch {
  inputs 6
  which {{preview_edges==1?1:preview_input==1?2:preview_shape==1?3:preview_bricks==1?4:preview_points==1?5:0}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name Switch_output
  label "\[value which]"
  xpos 0
  ypos 1842
 }
 Output {
  name Output1
  xpos 0
  ypos 1905
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xffffffff
  label "<b>Bricks                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos -88
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label ROWS
  note_font "Verdana Bold"
  xpos 3578
  ypos 220
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label COLUMNS
  note_font "Verdana Bold"
  xpos 3753
  ypos 206
 }
 StickyNote {
  inputs 0
  name StickyNote8
  label OFFSET
  note_font "Verdana Bold"
  xpos 3944
  ypos 194
 }
 StickyNote {
  inputs 0
  name StickyNote9
  tile_color 0xffffffff
  label "<b>Shingle                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -180
 }
push $N189df000
 CurveTool {
  operation "Auto Crop"
  channels rgba
  ROI {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  autocropdata {{curve x1 156} {curve x1 156} {curve x1 345} {curve x1 345}}
  intensitydata {{curve}}
  name CurveTool1
  xpos 1248
  ypos -52
 }
 Reformat {
  inputs 0
  name Reformat_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -45
  ypos -316
 }
 Expression {
  inputs 0
  name MASTER_POINTS
  note_font "Verdana Bold"
  xpos 3773
  ypos 30
  addUserKnob {20 User}
  addUserKnob {3 offsetX}
  offsetX {{parent.offsetX}}
  addUserKnob {3 offsetY}
  offsetY {{parent.offsetY}}
  addUserKnob {26 ""}
  addUserKnob {3 rows}
  rows {{parent.rows}}
  addUserKnob {3 columns}
  columns {{parent.columns}}
  addUserKnob {26 ""}
  addUserKnob {3 offset}
  offset {{parent.offset_shingle}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.random_colors}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.random_every_frame}}
  addUserKnob {26 ""}
  addUserKnob {7 dilate R 0 10}
  dilate {{parent.dilate}}
 }
 Expression {
  inputs 0
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor((y-shift.y)/size)%2 == 0? ((x-shift.x)%dimension_width)/(difference_size*width_brick) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor((y-shift.y)/size)%2 == 0? ((y-shift.y)%dimension_height)/(difference_size) : ((y-shift.y)%dimension_height)/(difference_size)"
  name TILE_MASTER
  note_font "Verdana Bold"
  xpos 2645
  ypos 136
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.shift} {parent.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick l "width brick" R 0 5}
  width_brick {{parent.width_brick}}
  addUserKnob {3 random_value l INVISIBLE +INVISIBLE}
  random_value 59
  addUserKnob {6 vertical +STARTLINE}
  vertical {{!parent.alignment}}
  addUserKnob {6 cross +STARTLINE}
  cross {{parent.cross}}
  addUserKnob {6 mirror +STARTLINE}
  mirror {{parent.mirror}}
 }
push $N19ad4400
push $N19bdac00
 Viewer {
  inputs 2
  frame_range 11-100
  name Viewer1
  selected true
  xpos -489
  ypos -15
  hide_input true
 }
end_group
CheckerBoard2 {
 inputs 0
 boxsize 300
 color0 {0 0 0 1}
 color1 {1 1 1 1}
 color2 {0 0 0 1}
 color3 {1 1 1 1}
 centerlinewidth 0
 name CheckerBoard1
 selected true
 xpos 11361
 ypos -844
}
Shuffle {
 green red
 blue red
 alpha red
 name Shuffle1
 tile_color 0x93000000
 selected true
 xpos 11361
 ypos -772
}
Transform {
 translate {52 -58}
 center {2048 1556}
 shutteroffset centred
 name Transform4
 selected true
 xpos 11361
 ypos -727
}
clone $C184c2400 {
 inputs 0
 xpos 11110
 ypos -679
 selected true
}
Grade {
 inputs 1+1
 white 0.3
 name Grade2
 selected true
 xpos 11361
 ypos -655
}
Group {
 inputs 2
 name switch_matte3
 selected true
 xpos 11628
 ypos -655
 addUserKnob {20 User}
 addUserKnob {41 red T ShuffleCopy3.red}
 addUserKnob {41 green T ShuffleCopy3.green}
 addUserKnob {41 blue T ShuffleCopy3.blue}
 addUserKnob {41 alpha T ShuffleCopy3.alpha}
 addUserKnob {41 invert T Premult3.invert}
 addUserKnob {41 disable_1 l Unpremult T Premult3.disable}
 addUserKnob {6 copyBbox l CopyBBox +STARTLINE}
 copyBbox true
}
 Input {
  inputs 0
  name alpha
  xpos 427
  ypos -553
  number 1
 }
set N19d2e000 [stack 0]
push $N19d2e000
 Input {
  inputs 0
  name image
  xpos 307
  ypos -553
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos 358
  ypos -504
 }
 Premult {
  name Premult3
  xpos 358
  ypos -478
 }
set N19d2ec00 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  selected true
  xpos 427
  ypos -436
 }
push $N19d2ec00
 Switch {
  inputs 2
  which {{parent.copyBbox}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos 358
  ypos -404
 }
 Output {
  name Output1
  xpos 355
  ypos -366
 }
end_group
Group {
 inputs 0
 name ProceduralTEXTURE2
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n#works only if knob 'type' is changing.\nif ('type' in k.name()):\n    import nuke\n    #------------------------------------------------------------\n    #LINES\n    if(k.getValue()==0):\n        n\['input'].setVisible(False)\n        n\['preview_input'].setVisible(False)\n        n\['scale'].setVisible(False)\n        n\['shape_width'].setVisible(False)\n        n\['calc_autocrop'].setVisible(False)\n        n\['enable_autocrop'].setVisible(False)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['lines_divider01'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        n\['lines_divider02'].setVisible(True)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n    \n    #BRICKS\n    if(k.getValue()==1):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['bricks_divider01'].setVisible(True)\n        n\['bricks_divider02'].setVisible(True)\n        n\['bricks_divider03'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n        \n    #SHINGLE\n    if(k.getValue()==2):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(False)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(False)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(False)\n        n\['shift'].setVisible(False)\n        n\['size'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['width_brick'].setVisible(False)\n        n\['cross'].setVisible(False)\n        n\['mirror'].setVisible(False)\n        n\['tile_divider01'].setVisible(False)\n        n\['tile_divider02'].setVisible(False)\n        n\['preview_UV_tile'].setVisible(False)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        n\['shingle_divider01'].setVisible(True)\n        n\['shingle_divider02'].setVisible(True)\n        n\['shingle_divider03'].setVisible(True)\n        n\['shingle_divider04'].setVisible(True)\n        \n        n\['edges'].setVisible(False)\n        n\['preview_edges'].setVisible(False)\n        n\['dilate_edges'].setVisible(False)\n        n\['blur_edges'].setVisible(False)\n        n\['color_edges'].setVisible(False)\n        n\['enable_edges'].setVisible(False)\n        n\['mix_edges'].setVisible(False)\n        n\['edges_divider01'].setVisible(False)\n        \n        \n    #TILE\n    if(k.getValue()==3):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['scale'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(False)\n        n\['alpha_bricks'].setVisible(False)\n        n\['alpha_shingle'].setVisible(False)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(False)\n        n\['color1'].setVisible(False)\n        n\['color2'].setVisible(False)\n        n\['lines_divider01'].setVisible(False)\n        n\['wide'].setVisible(False)\n        n\['thickness'].setVisible(False)\n        n\['smooth'].setVisible(False)\n        n\['invert_lines'].setVisible(False)\n        n\['lines_divider02'].setVisible(False)\n        \n        n\['bricks'].setVisible(False)\n        n\['preview_bricks'].setVisible(False)\n        n\['size_bricks'].setVisible(False)\n        n\['anamorph_bricks'].setVisible(False)\n        n\['bricks_divider01'].setVisible(False)\n        n\['bricks_divider02'].setVisible(False)\n        n\['bricks_divider03'].setVisible(False)\n        n\['offset_bricks'].setVisible(False)\n        n\['scale_bricks'].setVisible(False)\n        n\['wall_of_bricks'].setVisible(False)\n        n\['random_bricks'].setVisible(False)\n        n\['generate_random_value'].setVisible(False)\n        n\['amount_bricks'].setVisible(False)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        n\['tile_divider01'].setVisible(True)\n        n\['tile_divider02'].setVisible(True)\n        n\['preview_UV_tile'].setVisible(True)\n        \n        n\['shingle'].setVisible(False)\n        n\['preview_points'].setVisible(False)\n        n\['offsetX'].setVisible(False)\n        n\['offsetY'].setVisible(False)\n        n\['message_shingle'].setVisible(False)\n        n\['rows'].setVisible(False)\n        n\['columns'].setVisible(False)\n        n\['offset_shingle'].setVisible(False)\n        n\['gain'].setVisible(False)\n        n\['dilate'].setVisible(False)\n        n\['random_colors'].setVisible(False)\n        n\['random_every_frame'].setVisible(False)\n        n\['shingle_divider01'].setVisible(False)\n        n\['shingle_divider02'].setVisible(False)\n        n\['shingle_divider03'].setVisible(False)\n        n\['shingle_divider04'].setVisible(False)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)\n        n\['edges_divider01'].setVisible(True)\n     \n    if(k.getValue()==4):\n        n\['input'].setVisible(True)\n        n\['preview_input'].setVisible(True)\n        n\['shape_width'].setVisible(True)\n        n\['calc_autocrop'].setVisible(True)\n        n\['enable_autocrop'].setVisible(True)\n        n\['alignment'].setVisible(True)\n        n\['alpha_lines'].setVisible(True)\n        n\['alpha_bricks'].setVisible(True)\n        n\['alpha_shingle'].setVisible(True)\n        n\['alpha_tile'].setVisible(True)\n        \n        n\['lines'].setVisible(True)\n        n\['color1'].setVisible(True)\n        n\['color2'].setVisible(True)\n        n\['wide'].setVisible(True)\n        n\['thickness'].setVisible(True)\n        n\['smooth'].setVisible(True)\n        n\['invert_lines'].setVisible(True)\n        \n        n\['bricks'].setVisible(True)\n        n\['preview_bricks'].setVisible(True)\n        n\['size_bricks'].setVisible(True)\n        n\['anamorph_bricks'].setVisible(True)\n        n\['offset_bricks'].setVisible(True)\n        n\['scale_bricks'].setVisible(True)\n        n\['wall_of_bricks'].setVisible(True)\n        n\['random_bricks'].setVisible(True)\n        n\['generate_random_value'].setVisible(True)\n        n\['amount_bricks'].setVisible(True)\n        \n        n\['tile'].setVisible(True)\n        n\['shift'].setVisible(True)\n        n\['size'].setVisible(True)\n        n\['offset'].setVisible(True)\n        n\['width_brick'].setVisible(True)\n        n\['cross'].setVisible(True)\n        n\['mirror'].setVisible(True)\n        \n        n\['shingle'].setVisible(True)\n        n\['preview_points'].setVisible(True)\n        n\['offsetX'].setVisible(True)\n        n\['offsetY'].setVisible(True)\n        n\['message_shingle'].setVisible(True)\n        n\['rows'].setVisible(True)\n        n\['columns'].setVisible(True)\n        n\['offset_shingle'].setVisible(True)\n        n\['gain'].setVisible(True)\n        n\['dilate'].setVisible(True)\n        n\['random_colors'].setVisible(True)\n        n\['random_every_frame'].setVisible(True)\n        \n        n\['edges'].setVisible(True)\n        n\['preview_edges'].setVisible(True)\n        n\['dilate_edges'].setVisible(True)\n        n\['blur_edges'].setVisible(True)\n        n\['color_edges'].setVisible(True)\n        n\['enable_edges'].setVisible(True)\n        n\['mix_edges'].setVisible(True)"
 autolabel "nuke.thisNode().name() + \"\\n\" + '(' + 'type' + ':'+ ' ' + str(nuke.thisNode()\['type'].value()) + ')' "
 tile_color 0x14f5d001
 note_font "Verdana Bold"
 selected true
 xpos 11625
 ypos -822
 addUserKnob {20 ProceduralTexture l "Procedural Texture"}
 addUserKnob {26 text l "" +STARTLINE T "<font size=\"40\"><font color=\"light sea green\">PROCEDURAL <b><font size=\"40\"><font color=\"spring green\">TEXTURE"}
 addUserKnob {26 artist l "" +STARTLINE T "<i><font color=\"silver\">Andrea Geremia"}
 addUserKnob {26 ""}
 addUserKnob {68 type t "Select the operation you want to do:\n\n- Lines. Creates some vertical or horizontal stipes. Decide the colors and thickness\n\n- Bricks. The common way to use this operation is to create walls. Select the shape or connect an image. Combine some nodes to create a more complex texture. It creates a wall using the UV and STMap node. Use this option if you want to create a classic wall of bricks without overlapping\n\n- Shingle. Creates a wall using the Convolve node and points. It allows to create compenetrations between shapes. It's usefull to create alien projectors with hexagons and random colors. \n\n- Tile. Compared to the previous operation, here it's easier to deal with the pictures and their manipulation. It's similar to the ContactSheet node with more controls" M {Lines Bricks Shingle Tile "" "" "" ""}}
 type Bricks
 addUserKnob {26 ""}
 addUserKnob {4 input M {img shape}}
 input shape
 addUserKnob {6 preview_input l "preview input" -STARTLINE}
 addUserKnob {7 scale t "The type Shingle uses the Convolve as technique. If you don't see the correct result, try to reduce a lot the scale, in order of 0.1 "}
 scale 1
 addUserKnob {4 alignment t "Select the alignment of lines" +HIDDEN M {Vertical Horizontal ""}}
 addUserKnob {26 ""}
 addUserKnob {41 format l "output format" T Reformat_CTRL.format}
 addUserKnob {4 alpha_lines l alpha +HIDDEN M {0 1 edges}}
 addUserKnob {4 alpha_bricks l alpha M {0 1 edges input "Wall of Bricks" "" ""}}
 alpha_bricks input
 addUserKnob {4 alpha_shingle l alpha +HIDDEN M {0 1 input points}}
 alpha_shingle input
 addUserKnob {4 alpha_tile l alpha +HIDDEN M {0 1 edges input}}
 alpha_tile 1
 addUserKnob {26 ""}
 addUserKnob {26 lines l "<b><font color=\"red\">LINES" +HIDDEN}
 addUserKnob {19 color1 +HIDDEN}
 color1 {1 0 0 0}
 addUserKnob {6 color1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 color2 +HIDDEN}
 color2 {0 1 0 0}
 addUserKnob {6 color2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 lines_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 wide +HIDDEN R 0 20}
 wide 10.9
 addUserKnob {7 thickness +HIDDEN R 0 2}
 addUserKnob {7 smooth +HIDDEN R 0 4}
 addUserKnob {6 invert_lines l "invert lines" t "Invert colors and parameters between the two groups of lines" +HIDDEN +STARTLINE}
 invert_lines true
 addUserKnob {26 lines_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 bricks l "<b><font color=\"fuchsia\">BRICKS"}
 addUserKnob {6 preview_bricks l "preview UVMap" +STARTLINE}
 addUserKnob {7 size_bricks l size R 0 100}
 size_bricks 300
 addUserKnob {7 anamorph_bricks l anamorph R 0 6}
 anamorph_bricks 1
 addUserKnob {26 bricks_divider01 l "" +STARTLINE}
 addUserKnob {7 offset_bricks l offset R 0 50}
 addUserKnob {7 scale_bricks l "scale even lines" R 0 6}
 scale_bricks 1
 addUserKnob {26 bricks_divider02 l "" +STARTLINE}
 addUserKnob {20 wall_of_bricks l "Alpha - Wall of Bricks" n 1}
 addUserKnob {3 random_bricks l "random value"}
 random_bricks 207
 addUserKnob {22 generate_random_value l "Random value" -STARTLINE T "import random\nrand_value=random.randint(1,300)\nnuke.thisGroup()\['random_bricks'].setValue(rand_value)"}
 addUserKnob {7 amount_bricks l amount R 0.5 4}
 amount_bricks 0.79
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 bricks_divider03 l "" +STARTLINE}
 addUserKnob {26 tile l "<b><font color=\"yellow\">TILE" +HIDDEN}
 addUserKnob {6 preview_UV_tile l "preview UVMap" +HIDDEN +STARTLINE}
 addUserKnob {12 shift +HIDDEN}
 shift {1045 725}
 addUserKnob {7 size +HIDDEN R 0 100}
 size 100
 addUserKnob {7 offset +HIDDEN R 0 50}
 addUserKnob {26 tile_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 width_brick l "width brick" +HIDDEN R 0 10}
 width_brick 2
 addUserKnob {6 cross t "This option is connected to the Shift values.\nIf you don't see any change, please modify the values of Shift" +HIDDEN +STARTLINE}
 addUserKnob {6 mirror -STARTLINE +HIDDEN}
 addUserKnob {26 tile_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 shingle l "<font color=\"chocolate\"><b>SHINGLE" +HIDDEN}
 addUserKnob {6 preview_points l "preview Points" +HIDDEN +STARTLINE}
 addUserKnob {3 offsetX +HIDDEN}
 offsetX 200
 addUserKnob {3 offsetY -STARTLINE +HIDDEN}
 offsetY 200
 addUserKnob {26 shingle_divider01 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 message_shingle l "" +STARTLINE +HIDDEN T "<i>Print every:"}
 addUserKnob {3 rows +HIDDEN}
 rows 1
 addUserKnob {3 columns -STARTLINE +HIDDEN}
 columns 1
 addUserKnob {26 shingle_divider02 l "" +STARTLINE +HIDDEN}
 addUserKnob {3 offset_shingle l offset +HIDDEN}
 offset_shingle 49
 addUserKnob {26 shingle_divider03 l "" +STARTLINE +HIDDEN}
 addUserKnob {7 gain +HIDDEN R 0 10}
 gain 10
 addUserKnob {7 dilate l "dilate points" +HIDDEN R 0 20}
 dilate 6.9
 addUserKnob {6 random_colors l "random colors" +HIDDEN +STARTLINE}
 addUserKnob {6 random_every_frame l "random colors every frame" +HIDDEN +STARTLINE}
 addUserKnob {26 shingle_divider04 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 edges l "<b><font color=\"aqua\">Edges"}
 addUserKnob {6 preview_edges l "preview edges" +STARTLINE}
 addUserKnob {7 dilate_edges l dilate R -10 10}
 addUserKnob {7 blur_edges l blur R 0 5}
 addUserKnob {18 color_edges l color}
 color_edges {0.015951 0.584199 0.959849}
 addUserKnob {6 color_edges_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 edges_divider01 l "" +STARTLINE}
 addUserKnob {6 enable_edges l "enable edges" +STARTLINE}
 addUserKnob {7 mix_edges l "" -STARTLINE}
 mix_edges 1
 addUserKnob {20 shape l Shape}
 addUserKnob {6 preview_shape l "preview shape" +STARTLINE}
 addUserKnob {3 shape_width l width/height}
 shape_width 500
 addUserKnob {22 calc_autocrop l "Calc Auto Crop" -STARTLINE T "n=nuke.thisNode()\nn.node('CurveTool1')\['go'].execute()"}
 addUserKnob {6 enable_autocrop l "enable autocrop" -STARTLINE}
 enable_autocrop true
 addUserKnob {26 shape_1 l "<font color=darkorange><b>SHAPE"}
 addUserKnob {41 corners T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle T Flare1.corners_angle}
 addUserKnob {41 corner_angle_add l rel -STARTLINE T Flare1.corner_angle_add}
 addUserKnob {26 size_1 l "<font color=darkcyan><b>SIZE"}
 addUserKnob {41 radius T Flare1.radius}
 addUserKnob {41 size_mult l "size mult" T Flare1.size_mult}
 addUserKnob {41 anamorph T Flare1.anamorph}
 addUserKnob {26 visibility l "<font color=deepskyblue><b>VISIBILITY"}
 addUserKnob {41 brightness T Flare1.brightness}
 addUserKnob {41 vis_in l in T Flare1.vis_in}
 addUserKnob {41 vis_out l out T Flare1.vis_out}
 addUserKnob {26 colors l "<font color=deeppink><b>COLORS"}
 addUserKnob {41 ring_color l "ring color" T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" T Flare1.inner_falloff}
 addUserKnob {26 color_shift l "<font color=lightpink><b>COLOR SHIFT"}
 addUserKnob {41 chroma_spread l "chroma spread" T Flare1.chroma_spread}
 addUserKnob {41 chroma_shift l "chroma shift" T Flare1.chroma_shift}
 addUserKnob {41 chroma_shift_angle l angle T Flare1.chroma_shift_angle}
 addUserKnob {41 chroma_shift_angle_add l rel -STARTLINE T Flare1.chroma_shift_angle_add}
 addUserKnob {26 asimmetry l "<font color=greenyellow><b>ASIMMETRY"}
 addUserKnob {41 asym_repeat l repeat T Flare1.asym_repeat}
 addUserKnob {41 asym_multiplier l multiplier T Flare1.asym_multiplier}
 addUserKnob {41 asym_falloff l falloff T Flare1.asym_falloff}
 addUserKnob {41 asym_angle l angle T Flare1.asym_angle}
 addUserKnob {41 asym_angle_add l rel -STARTLINE T Flare1.asym_angle_add}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x472b5901
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 126
  bookmark false
  bdwidth 703
  bdheight 641
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x44513501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 2005
  ypos 50
  bookmark false
  bdwidth 823
  bdheight 734
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x56193501
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 296
  bookmark false
  bdwidth 365
  bdheight 931
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x71c67100
  label img
  note_font_size 42
  xpos 913
  ypos -178
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x71c67100
  label shape
  note_font_size 42
  xpos 1087
  ypos -180
  bdwidth 278
  bdheight 371
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x665e7201
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos 37
  bookmark false
  bdwidth 244
  bdheight 331
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x387c9901
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -55
  bookmark false
  bdwidth 588
  bdheight 781
 }
 Expression {
  inputs 0
  name Lines_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -839
  ypos 194
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.smooth}}
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xffffffff
  label "<b>Lines                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos -1156
  ypos 56
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xffffffff
  label "<b>Tile                ."
  note_font "Helvetica Bold"
  note_font_size 50
  xpos 2005
  ypos -15
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xffffffff
  label "<b>Edges                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 4892
  ypos 171
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat8
  xpos 3798
  ypos 104
 }
 Dot {
  name Dot34
  xpos 3832
  ypos 196
 }
set N19d8d000 [stack 0]
 Expression {
  expr0 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(y/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x+offset)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression16
  xpos 3975
  ypos 261
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N19d8d000
 Expression {
  expr0 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod((y+1)/rows,offsetX) == 0 ? floor(y/offsetX)%2 == 0 ? ((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression1
  xpos 3871
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot28
  xpos 3905
  ypos 324
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 3975
  ypos 321
 }
 Dot {
  name Dot29
  xpos 4009
  ypos 500
 }
push $N19d8d000
 Expression {
  expr0 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain :0:0:0"
  expr1 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain :0:0:0"
  expr2 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain :0:0:0"
  expr3 "fmod(x/columns,offsetY)==0?(y%offsetX)/offsetX == 0?((x)%offsetY)/offsetY == 0 ? 1 :0:0:0"
  name Expression8
  xpos 3739
  ypos 262
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {7 offset R 0 50}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l random_colors +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
push $N19d8d000
 Expression {
  expr0 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,1) : random_points == 1 && random_every_frame == 1 ? random(x*y, 1, frame)*gain:random_points==0 && random_every_frame==1?random(frame,1)*gain:gain : 0:0"
  expr1 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,2) : random_points == 1 && random_every_frame == 1 ? random(x*y, 2, frame)*gain:random_points==0 && random_every_frame==1?random(frame,2)*gain:gain : 0:0"
  expr2 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? random_points==1 && random_every_frame == 0 ? gain*random(x,y,3) : random_points == 1 && random_every_frame == 1 ? random(x*y, 3, frame)*gain:random_points==0 && random_every_frame==1?random(frame,3)*gain:gain : 0:0"
  expr3 "fmod(y/rows,offsetX)==0 ? (x%offsetY)/offsetY == 0 ? 1 : 0:0"
  name Expression9
  xpos 3575
  ypos 268
  addUserKnob {20 User}
  addUserKnob {7 offsetX R 0 200}
  offsetX {{parent.MASTER_POINTS.offsetX}}
  addUserKnob {7 offsetY R 0 200}
  offsetY {{parent.MASTER_POINTS.offsetY}}
  addUserKnob {3 rows}
  rows {{parent.MASTER_POINTS.rows}}
  addUserKnob {3 columns}
  columns {{parent.MASTER_POINTS.columns}}
  addUserKnob {3 offset}
  offset {{parent.MASTER_POINTS.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.MASTER_POINTS.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.MASTER_POINTS.random_points}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.MASTER_POINTS.random_every_frame}}
 }
 Dot {
  name Dot30
  xpos 3609
  ypos 500
 }
 Switch {
  inputs 3
  which {{"parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns == 1 ? 0 : parent.MASTER_POINTS.rows == 1 && parent.MASTER_POINTS.columns != 1 ? 1 : parent.MASTER_POINTS.rows != 1 && parent.MASTER_POINTS.columns != 1 ? 2 : 2"}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch5
  label "\[value which]"
  xpos 3739
  ypos 493
 }
 Dilate {
  size {{parent.MASTER_POINTS.dilate}}
  name Dilate14
  label "\[value size]"
  xpos 3739
  ypos 546
 }
set N19db3400 [stack 0]
 Dot {
  name Dot33
  label POINTS
  note_font "Verdana Bold"
  note_font_size 13
  xpos -17
  ypos 1753
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat5
  xpos 375
  ypos 122
 }
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(y/size)%2 == 0? (x%(dimension_width*scale))/(difference_size*width_brick*scale) : ((x+offset)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(y/size)%2 == 0? (y%dimension_height)/(difference_size) : ((y)%dimension_height)/(difference_size)"
  name Expression18
  selected true
  xpos 375
  ypos 173
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.size_bricks}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset_bricks}}
  addUserKnob {7 scale R 0 6}
  scale {{parent.scale_bricks}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.anamorph_bricks}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
 }
set N19dee400 [stack 0]
 Dot {
  name Dot32
  label "UV MAP"
  note_font "Verdana Bold"
  note_font_size 16
  xpos 80
  ypos 1765
  hide_input true
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{parent.shape_width}}
  box_height {{box_width}}
  box_fixed true
  name Reformat6
  xpos 1097
  ypos -96
 }
 Flare {
  position {{parent.Reformat6.box_width/2} {parent.Reformat6.box_width/2}}
  radius {0 100 100}
  size_mult 1.03
  inner_color 1
  vis_in 1.05
  vis_out 1.105
  vis_mask_size 1
  corners 2
  flattening 6.2
  sharpness 1
  asym_repeat 0
  asym_multiplier 0.04
  asym_falloff 1.5
  asym_angle -34
  name Flare1
  xpos 1097
  ypos -52
 }
set N19def400 [stack 0]
 Crop {
  box {{parent.CurveTool1.autocropdata.x} {parent.CurveTool1.autocropdata.y} {parent.CurveTool1.autocropdata.r} {parent.CurveTool1.autocropdata.t}}
  reformat true
  name Crop1
  xpos 1098
  ypos -32
  disable {{!parent.enable_autocrop}}
 }
 Median {
  size 2
  ignore_top_line false
  name Median1
  xpos 1097
  ypos -8
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle4
  tile_color 0x93000000
  xpos 1097
  ypos 34
 }
 Transform {
  center {{parent.Reformat6.box_width/2} {parent.Reformat6.box_height/2}}
  shutteroffset centred
  name Transform1
  xpos 1097
  ypos 58
  disable true
 }
 Expression {
  expr3 "(r || g || b) != 0 ? 1 : 0"
  name Expression2
  xpos 1097
  ypos 82
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  tile_color 0xffffffff
  xpos 1097
  ypos 106
 }
set N19e23000 [stack 0]
 Dot {
  name Dot25
  label SHAPE
  note_font "Verdana Bold"
  note_font_size 12
  xpos -66
  ypos 1793
  hide_input true
 }
push $N19e23000
 Dot {
  name Dot50
  xpos 1131
  ypos 154
 }
 Input {
  inputs 0
  name img
  xpos 923
  ypos -98
 }
 Switch {
  inputs 2
  which {{parent.input}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch4
  label "\[value which]"
  xpos 923
  ypos 147
 }
 Transform {
  scale {{parent.scale}}
  center {1024 778}
  shutteroffset centred
  name Transform4
  xpos 923
  ypos 194
 }
 Dot {
  name Dot19
  xpos 957
  ypos 232
 }
set N19e5a400 [stack 0]
 Dot {
  name Dot24
  label INPUT
  note_font "Verdana Bold"
  note_font_size 15
  xpos 128
  ypos 1793
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat3
  xpos 2284
  ypos 135
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat_Vertical
  xpos 2284
  ypos 170
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot10
  xpos 2318
  ypos 198
 }
set N19e5bc00 [stack 0]
 Dot {
  name Dot5
  xpos 2318
  ypos 216
 }
set N19e84000 [stack 0]
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x)>0 ? floor((y-shift.y)/size)%2 == 0 ? (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)) : floor((y-shift.y)/size)%2 == 0? 1 + (((x-shift.x)%dimension_width)/(difference_size*width_brick)) - int(((x-shift.x)%dimension_width)/(difference_size*width_brick)) : 1 +  ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick) - int(((x+offset-shift.x)%dimension_width)/(difference_size*width_brick))"
  name Offset_red
  tile_color 0xff000001
  xpos 2237
  ypos 286
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot12
  xpos 2271
  ypos 334
 }
set N19e84800 [stack 0]
push $N19e84000
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y)>0 ? floor((y-shift.y)/size)%2 == 0? (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) :  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size)) : floor((y-shift.y)/size)%2 == 0? 1+ (((y-shift.y)%dimension_height)/(difference_size)) -int(((y-shift.y)%dimension_height)/(difference_size)) : 1+  ((y-shift.y)%dimension_height)/(difference_size) - int(((y-shift.y)%dimension_height)/(difference_size))"
  name Offset_green
  tile_color 0xff0001
  xpos 2361
  ypos 285
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift x1 789} {parent.TILE_MASTER.shift x1 1005}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
set N19e84c00 [stack 0]
 Dot {
  name Dot6
  xpos 2622
  ypos 288
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos 2588
  ypos 331
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform2
  xpos 2588
  ypos 373
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat2
  xpos 2588
  ypos 397
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Dot {
  name Dot16
  label TILE
  xpos 5135
  ypos 410
  hide_input true
 }
push $N19dee400
 Dot {
  name Dot21
  label BRICKS
  xpos 4939
  ypos 411
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat1
  xpos -1146
  ypos 152
 }
set N19eb0c00 [stack 0]
 Dot {
  name Dot1
  xpos -986
  ypos 155
 }
 Expression {
  expr0 "( cos(y / wide ) + thickness ) / smooth"
  expr1 "( cos(y / wide ) + thickness ) / smooth"
  expr2 "( cos(y / wide ) + thickness ) / smooth"
  expr3 "( cos(y / wide ) + thickness ) / smooth"
  name Lines_horizontal
  xpos -1020
  ypos 211
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
push $N19eb0c00
 Expression {
  expr0 "( sin(x / wide ) + thickness ) / smooth"
  expr1 "( sin(x / wide ) + thickness ) / smooth"
  expr2 "( sin(x / wide ) + thickness ) / smooth"
  expr3 "( sin(x / wide ) + thickness ) / smooth"
  name Lines_vertical
  xpos -1146
  ypos 298
  addUserKnob {20 User}
  addUserKnob {7 wide R 0 20}
  wide {{parent.Lines_CTRL.wide}}
  addUserKnob {7 thickness R 0 5}
  thickness {{parent.Lines_CTRL.thickness}}
  addUserKnob {7 smooth}
  smooth {{parent.Lines_CTRL.smooth}}
 }
 Switch {
  inputs 2
  which {{parent.alignment}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos -1020
  ypos 294
 }
 Clamp {
  name Clamp1
  xpos -1020
  ypos 326
 }
 Invert {
  name Invert2
  xpos -1020
  ypos 358
  disable {{!parent.invert_lines}}
 }
set N19ee6400 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {{parent.color1.r} {parent.color1.g} {parent.color1.b} {parent.color1.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant1
  xpos -868
  ypos 263
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -868
  ypos 355
 }
 Premult {
  name Premult1
  xpos -868
  ypos 387
 }
 Dot {
  name Dot2
  xpos -721
  ypos 390
 }
 Dot {
  name Dot3
  xpos -721
  ypos 720
 }
push $N19ee6400
 Invert {
  name Invert1
  xpos -1020
  ypos 576
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color2.r} {parent.color2.g} {parent.color2.b} {parent.color2.a}}
  format {{{parent.Reformat_CTRL.format}}}
  name Constant2
  xpos -868
  ypos 483
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -868
  ypos 576
 }
 Premult {
  name Premult2
  xpos -868
  ypos 608
 }
set N19f1c800 [stack 0]
 Merge2 {
  inputs 2
  name Merge1
  xpos -868
  ypos 717
 }
set N19f1cc00 [stack 0]
 Dot {
  name Dot17
  label LINES
  xpos 5030
  ypos 392
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_input
  label "\[value which]"
  xpos 4996
  ypos 442
 }
 EdgeDetectWrapper {
  threshold 0.18
  name EdgeDetect2
  xpos 4996
  ypos 485
 }
 Dilate {
  size {{parent.dilate_edges}}
  name Dilate1
  label "\[value size]"
  xpos 4996
  ypos 517
 }
 Blur {
  size {{parent.blur_edges}}
  name Blur2
  label "\[value size]"
  xpos 4996
  ypos 559
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  tile_color 0xffffffff
  xpos 4996
  ypos 601
 }
 Constant {
  inputs 0
  channels rgb
  color {{parent.color_edges} {parent.color_edges} {parent.color_edges} {parent.color_edges}}
  name Constant3
  xpos 5136
  ypos 605
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 4996
  ypos 625
 }
 Premult {
  name Premult3
  xpos 4996
  ypos 657
 }
 Dot {
  name Dot7
  label "do not delete"
  xpos 5030
  ypos 709
 }
set N19f59000 [stack 0]
 Dot {
  name Dot13
  xpos 5030
  ypos 1849
 }
set N19f59400 [stack 0]
push $N19e5bc00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor(abs(y-shift.y)/size)%2 == 0? (abs(x-shift.x)%dimension_width)/(difference_size*width_brick) : (abs(x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor(abs(y-shift.y)/size)%2 == 0? (abs(y-shift.y)%dimension_height)/(difference_size) : (abs(y-shift.y)%dimension_height)/(difference_size)"
  name CROSS
  xpos 2015
  ypos 277
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot8
  xpos 2049
  ypos 507
 }
push $N19e84c00
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr1 "(y-shift.y>=0?0:1) + fmod(int((y-shift.y)/dimension_height),2)!=0?1-g:g"
  name Mirror_green
  tile_color 0xff0001
  xpos 2361
  ypos 373
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Dot {
  name Dot9
  xpos 2395
  ypos 414
 }
push $N19e84800
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "(x-shift.x>=0?0:1) + fmod(int((x-shift.x)/dimension_width),2)!=0?1-r:r"
  name Mirror_red
  tile_color 0xff000001
  xpos 2237
  ypos 371
  disable {{!parent.TILE_MASTER.mirror}}
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.TILE_MASTER.shift} {parent.TILE_MASTER.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.TILE_MASTER.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.TILE_MASTER.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.TILE_MASTER.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.TILE_MASTER.random_value}}
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 2237
  ypos 411
 }
 Switch {
  inputs 2
  which {{parent.TILE_MASTER.cross}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch3
  label "\[value which]"
  xpos 2237
  ypos 500
 }
 Transform {
  rotate 90
  center {778 1024}
  shutteroffset centred
  name Transform3
  xpos 2237
  ypos 532
  disable {{!parent.TILE_MASTER.vertical}}
 }
 Reformat {
  type "to box"
  box_width {{input.height}}
  box_height {{input.width}}
  box_fixed true
  name Reformat7
  xpos 2237
  ypos 556
  disable {{!parent.TILE_MASTER.vertical}}
 }
push $N19e5a400
 Dot {
  name Dot18
  xpos 957
  ypos 659
 }
 STMap {
  inputs 2
  uv rgba
  name STMap2
  xpos 2237
  ypos 652
 }
set N19fc6000 [stack 0]
 Dot {
  name Dot38
  label "INPUT TILE"
  note_font "Verdana Bold"
  xpos 691
  ypos 1608
  hide_input true
 }
push $N19f59400
 Dot {
  name Dot20
  label EDGES
  note_font "Verdana Bold"
  note_font_size 13
  xpos 245
  ypos 1483
  hide_input true
 }
set N19fc6800 [stack 0]
 Dot {
  name Dot39
  xpos 643
  ypos 1598
  hide_input true
 }
 Reformat {
  inputs 0
  format {{{parent.Reformat_CTRL.format}}}
  name Reformat4
  xpos 213
  ypos 1358
 }
set N19fc7000 [stack 0]
 Shuffle {
  alpha white
  name Shuffle3
  tile_color 0xffffff01
  label "\[value in]"
  xpos 213
  ypos 1408
 }
set N19fc7800 [stack 0]
 Dot {
  name Dot40
  xpos 592
  ypos 1595
  hide_input true
 }
push $N19fc7000
 Shuffle {
  alpha black
  name Shuffle2
  tile_color 0xff
  label "\[value in]"
  xpos 100
  ypos 1414
 }
set N19fec000 [stack 0]
 Dot {
  name Dot41
  xpos 554
  ypos 1622
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_tile}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_tile
  label "\[value which]"
  xpos 597
  ypos 1640
 }
push $N19db3400
 Dot {
  name Dot37
  label POINTS
  note_font "Verdana Bold"
  xpos 524
  ypos 1548
  hide_input true
 }
push $N19e5a400
 Dot {
  name Dot31
  label INPUT
  note_font "Verdana Bold"
  note_font_size 17
  xpos 3895
  ypos 637
  hide_input true
 }
push $N19db3400
 Convolve2 {
  inputs 2
  useGPUIfAvailable false
  use_input_channels true
  name Convolve1
  xpos 3739
  ypos 630
 }
set N19fed000 [stack 0]
 Dot {
  name Dot36
  label "INPUT POINTS"
  note_font "Verdana Bold"
  note_font_size 13
  xpos 487
  ypos 1532
  hide_input true
 }
push $N19fc7800
 Dot {
  name Dot42
  xpos 446
  ypos 1530
  hide_input true
 }
push $N19fec000
 Dot {
  name Dot43
  xpos 401
  ypos 1544
  hide_input true
 }
 Switch {
  inputs 4
  which {{parent.alpha_shingle}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch_alpha_points
  label "\[value which]"
  xpos 424
  ypos 1573
 }
push $N19fc7000
 Expression {
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 size
  temp_name2 dimension_height
  temp_expr2 size
  channel0 {rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green rgba.blue none}
  expr3 "floor(y/size)%2 == 0 ? rint(amount*random((floor((x)/(dimension_width*scale))+random_value)*(floor(y/dimension_height)+random_value)*random_value)) : rint(amount*random((floor((x+offset)/(dimension_width))/(difference_size*width_brick)+random_value)*(floor(y/dimension_height)+random_value)*random_value))"
  name Expression22
  xpos 385
  ypos 1396
  addUserKnob {20 User}
  addUserKnob {7 size R 0 200}
  size {{parent.Expression18.size}}
  addUserKnob {7 scale R 0 10}
  scale {{parent.Expression18.scale}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.Expression18.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick R 0 5}
  width_brick {{parent.Expression18.width_brick}}
  addUserKnob {3 random_value}
  random_value {{parent.random_bricks}}
  addUserKnob {7 amount R 0.5 6}
  amount {{parent.amount_bricks}}
 }
 Clamp {
  name Clamp2
  xpos 385
  ypos 1420
 }
 Dot {
  name Dot44
  xpos 389
  ypos 1511
  hide_input true
 }
push $N19dee400
push $N19e5a400
 STMap {
  inputs 2
  channels rgba
  uv rgba
  filter sinc4
  name STMap1
  xpos 375
  ypos 229
 }
set N1a011000 [stack 0]
 Dot {
  name Dot35
  label "INPUT BRICKS"
  note_font_size 14
  xpos 326
  ypos 1487
  hide_input true
 }
push $N19fc6800
 Dot {
  name Dot47
  xpos 361
  ypos 1493
  hide_input true
 }
push $N19fc7800
 Dot {
  name Dot45
  xpos 296
  ypos 1499
  hide_input true
 }
push $N19fec000
 Dot {
  name Dot46
  xpos 262
  ypos 1515
  hide_input true
 }
 Switch {
  inputs 5
  which {{parent.alpha_bricks}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
  }
  name Switch_alpha_bricks
  label "\[value which]"
  xpos 300
  ypos 1550
 }
push $N19fc6800
push $N19fc7800
 Dot {
  name Dot48
  xpos 189
  ypos 1486
  hide_input true
 }
push $N19fec000
 Dot {
  name Dot49
  xpos 134
  ypos 1504
  hide_input true
 }
 Switch {
  inputs 3
  which {{parent.alpha_lines}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
  }
  name Switch_alpha_lines
  label "\[value which]"
  xpos 174
  ypos 1528
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch6
  label "\[value which]"
  xpos 212
  ypos 1670
 }
push $N19f59000
 Dot {
  name Dot14
  xpos 2399
  ypos 709
  hide_input true
 }
push $N19fc6000
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges2
  xpos 2237
  ypos 706
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot11
  xpos 2271
  ypos 931
 }
 Dot {
  name Dot26
  label TILE
  note_font "Verdana Bold"
  xpos 127
  ypos 865
  hide_input true
 }
push $N19fed000
 Dot {
  name Dot27
  label SHINGLE
  note_font "Verdana Bold"
  xpos 3
  ypos 866
  hide_input true
 }
push $N19f59000
 Dot {
  name Dot22
  xpos 509
  ypos 293
  hide_input true
 }
push $N1a011000
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges3
  xpos 375
  ypos 290
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot23
  xpos 409
  ypos 931
 }
push $N19f59000
 Dot {
  name Dot15
  xpos -734
  ypos 831
  hide_input true
 }
push $N19f1cc00
 Merge2 {
  inputs 2
  mix {{parent.mix_edges}}
  name Merge_edges1
  xpos -868
  ypos 828
  disable {{!parent.enable_edges}}
 }
 Dot {
  name Dot4
  xpos -834
  ypos 931
 }
 Switch {
  inputs 4
  which {{parent.type}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
  }
  name Switch2
  label "\[value which]"
  xpos 0
  ypos 924
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 0
  ypos 1670
 }
 Switch {
  inputs 6
  which {{preview_edges==1?1:preview_input==1?2:preview_shape==1?3:preview_bricks==1?4:preview_points==1?5:0}}
  patterns {
   {i0 ""}
   {i1 ""}
   {i2 ""}
   {i3 ""}
   {i4 ""}
   {i5 ""}
  }
  name Switch_output
  label "\[value which]"
  xpos 0
  ypos 1842
 }
 Output {
  name Output1
  xpos 0
  ypos 1905
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xffffffff
  label "<b>Bricks                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 365
  ypos -88
 }
 StickyNote {
  inputs 0
  name StickyNote5
  label ROWS
  note_font "Verdana Bold"
  xpos 3578
  ypos 220
 }
 StickyNote {
  inputs 0
  name StickyNote6
  label COLUMNS
  note_font "Verdana Bold"
  xpos 3753
  ypos 206
 }
 StickyNote {
  inputs 0
  name StickyNote8
  label OFFSET
  note_font "Verdana Bold"
  xpos 3944
  ypos 194
 }
 StickyNote {
  inputs 0
  name StickyNote9
  tile_color 0xffffffff
  label "<b>Shingle                ."
  note_font "Helvetica Bold"
  note_font_size 100
  xpos 3565
  ypos -180
 }
push $N19def400
 CurveTool {
  operation "Auto Crop"
  channels rgba
  ROI {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  autocropdata {{curve x1 156} {curve x1 156} {curve x1 345} {curve x1 345}}
  intensitydata {{curve}}
  name CurveTool1
  xpos 1248
  ypos -52
 }
 Reformat {
  inputs 0
  name Reformat_CTRL
  note_font "Verdana Bold"
  note_font_size 12
  xpos -45
  ypos -316
 }
 Expression {
  inputs 0
  name MASTER_POINTS
  note_font "Verdana Bold"
  xpos 3773
  ypos 30
  addUserKnob {20 User}
  addUserKnob {3 offsetX}
  offsetX {{parent.offsetX}}
  addUserKnob {3 offsetY}
  offsetY {{parent.offsetY}}
  addUserKnob {26 ""}
  addUserKnob {3 rows}
  rows {{parent.rows}}
  addUserKnob {3 columns}
  columns {{parent.columns}}
  addUserKnob {26 ""}
  addUserKnob {3 offset}
  offset {{parent.offset_shingle}}
  addUserKnob {26 ""}
  addUserKnob {7 gain R 0 10}
  gain {{parent.gain}}
  addUserKnob {6 random_points l "random colors" +STARTLINE}
  random_points {{parent.random_colors}}
  addUserKnob {6 random_every_frame l "random every frame" +STARTLINE}
  random_every_frame {{parent.random_every_frame}}
  addUserKnob {26 ""}
  addUserKnob {7 dilate R 0 10}
  dilate {{parent.dilate}}
 }
 Expression {
  inputs 0
  temp_name0 dimension_width
  temp_expr0 size*width_brick
  temp_name1 difference_size
  temp_expr1 (size)
  temp_name2 dimension_height
  temp_expr2 size
  expr0 "floor((y-shift.y)/size)%2 == 0? ((x-shift.x)%dimension_width)/(difference_size*width_brick) : ((x+offset-shift.x)%dimension_width)/(difference_size*width_brick)"
  expr1 "floor((y-shift.y)/size)%2 == 0? ((y-shift.y)%dimension_height)/(difference_size) : ((y-shift.y)%dimension_height)/(difference_size)"
  name TILE_MASTER
  note_font "Verdana Bold"
  xpos 2645
  ypos 136
  addUserKnob {20 User}
  addUserKnob {12 shift}
  shift {{parent.shift} {parent.shift}}
  addUserKnob {7 size R 0 200}
  size {{parent.size}}
  addUserKnob {7 offset R 0 100}
  offset {{parent.offset}}
  addUserKnob {26 ""}
  addUserKnob {7 width_brick l "width brick" R 0 5}
  width_brick {{parent.width_brick}}
  addUserKnob {3 random_value l INVISIBLE +INVISIBLE}
  random_value 59
  addUserKnob {6 vertical +STARTLINE}
  vertical {{!parent.alignment}}
  addUserKnob {6 cross +STARTLINE}
  cross {{parent.cross}}
  addUserKnob {6 mirror +STARTLINE}
  mirror {{parent.mirror}}
 }
push $N19f1c800
push $N19db3400
 Viewer {
  inputs 2
  frame_range 11-100
  name Viewer1
  xpos -489
  ypos -15
  hide_input true
 }
end_group
Constant {
 inputs 0
 channels rgb
 color 1
 name Constant5
 selected true
 xpos 11515
 ypos -787
}
Group {
 inputs 2
 name switch_matte2
 selected true
 xpos 11625
 ypos -763
 addUserKnob {20 User}
 addUserKnob {41 red T ShuffleCopy3.red}
 addUserKnob {41 green T ShuffleCopy3.green}
 addUserKnob {41 blue T ShuffleCopy3.blue}
 addUserKnob {41 alpha T ShuffleCopy3.alpha}
 addUserKnob {41 invert T Premult3.invert}
 addUserKnob {41 disable_1 l Unpremult T Premult3.disable}
 addUserKnob {6 copyBbox l CopyBBox +STARTLINE}
 copyBbox true
}
 Input {
  inputs 0
  name alpha
  xpos 427
  ypos -553
  number 1
 }
set N1a10f400 [stack 0]
push $N1a10f400
 Input {
  inputs 0
  name image
  xpos 307
  ypos -553
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos 358
  ypos -504
 }
 Premult {
  name Premult3
  xpos 358
  ypos -478
 }
set N1a158000 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  selected true
  xpos 427
  ypos -436
 }
push $N1a158000
 Switch {
  inputs 2
  which {{parent.copyBbox}}
  patterns {
   {i0 ""}
   {i1 ""}
  }
  name Switch1
  label "\[value which]"
  xpos 358
  ypos -404
 }
 Output {
  name Output1
  xpos 355
  ypos -366
 }
end_group
Reformat {
 inputs 0
 name Reformat1
 selected true
 xpos 11790
 ypos -884
}
Merge2 {
 inputs 2
 name Merge10
 selected true
 xpos 11790
 ypos -762
}
Merge2 {
 inputs 2
 name Merge11
 selected true
 xpos 11790
 ypos -655
}
Merge2 {
 inputs 2
 name Merge12
 selected true
 xpos 11790
 ypos -544
}
Merge2 {
 inputs 2
 name Merge13
 selected true
 xpos 11790
 ypos -387
}
Merge2 {
 inputs 2
 name Merge14
 selected true
 xpos 11790
 ypos -235
}
Merge2 {
 inputs 2
 name Merge15
 selected true
 xpos 11790
 ypos -95
}
set N1a192800 [stack 0]
Transform {
 translate {150 147}
 center {1024 778}
 shutteroffset centred
 name Transform1
 selected true
 xpos 11790
 ypos 184
}
push $N1a192800
clone $C17c67c00 {
 inputs 0
 xpos 12036
 ypos -947
 selected true
}
Merge2 {
 inputs 2
 name Merge16
 selected true
 xpos 12036
 ypos -95
}
Merge2 {
 inputs 2
 name Merge17
 selected true
 xpos 12036
 ypos 184
}
Write {
 file /Users/gere/Desktop/TEXTURE_wallpaper.jpg
 file_type jpeg
 _jpeg_quality 1
 _jpeg_sub_sampling 4:2:2
 checkHashOnRead false
 ocioColorspace scene_linear
 display default
 view sRGB
 name Write1
 selected true
 xpos 12036
 ypos 225
}
